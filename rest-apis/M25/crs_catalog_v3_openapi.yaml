components:
  schemas:
    AggregationResponse:
      properties:
        count:
          format: int64
          type: integer
        key:
          type: string
      type: object
    AppError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        reason:
          type: string
      type: object
    AreaOfUse:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUseDeprecationInfo:
          $ref: '#/components/schemas/AreaOfUseDeprecationInfo'
        areaOfUseEssence:
          $ref: '#/components/schemas/AreaOfUseEssence'
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        lastModified:
          type: string
        name:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
      type: object
    AreaOfUseDeprecationInfo:
      properties:
        deprecationState:
          type: string
        remarks:
          type: string
        supersededByArea:
          $ref: '#/components/schemas/AreaOfUse'
      type: object
    AreaOfUseEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        boundingBox:
          $ref: '#/components/schemas/SphericalBoundingBox'
        name:
          type: string
        type:
          type: string
      type: object
    AreaOfUseEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        boundBox:
          $ref: '#/components/schemas/SphericalBoundingBox'
        name:
          type: string
        type:
          type: string
      type: object
    AreaOfUseRequest:
      description: Request to get area of use
      properties:
        essence:
          $ref: '#/components/schemas/AreaOfUseEssenceImpl'
          description: the area of use essence
        persistableReference:
          description: persistable reference string as passed through the request
          type: string
      type: object
    AreaOfUseResults:
      description: Object to hold the list of `AreaOfUse` objects from a search
      properties:
        areasOfUse:
          items:
            $ref: '#/components/schemas/AreaOfUse'
          type: array
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    AuthorityCode:
      properties:
        authority:
          type: string
        code:
          type: string
      type: object
    BaseCRS:
      description: BaseCRS
      properties:
        id:
          description: Record Id of parent CRS
          type: string
        name:
          description: Name of parent CRS
          type: string
      type: object
    CRS:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        axisUnits:
          items:
            type: string
          type: array
        baseCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        crsdeprecationInfo:
          $ref: '#/components/schemas/CRSDeprecationInfo'
        crstype:
          type: string
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        numberOfAxes:
          format: int32
          type: integer
        source:
          type: string
        transformationReady:
          type: boolean
      type: object
    CRSDeprecationInfo:
      properties:
        deprecationState:
          type: string
        remarks:
          type: string
        supersededByCRS:
          $ref: '#/components/schemas/CRS'
      type: object
    CRSEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        engineVersion:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    CRSEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        name:
          type: string
        type:
          type: string
        ver:
          type: string
      type: object
    CRSRequest:
      description: Request to get one CRS (any sub-type) given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence.
        If both are provided, essence takes precedence
      properties:
        crsessenceJson:
          $ref: '#/components/schemas/CRSEssenceImpl'
          description: json representation of the CRS essence
        essence:
          $ref: '#/components/schemas/CRSEssenceImpl'
          description: Any coordinate reference system essence carrying all possible
            properties for LateBoundCRSEssence, EarlyBoundCRSEssence and CompoundCRSEssence
        persistableReference:
          description: persistable reference string
          type: string
      type: object
    CRSResults:
      description: A response containing a list of CRSes.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        crses:
          description: A response containing a list of CRSes.
          items:
            $ref: '#/components/schemas/CRS'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    CT:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        ctdeprecationInfo:
          $ref: '#/components/schemas/CTDeprecationInfo'
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        fromCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        source:
          type: string
        toCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
      type: object
    CTDeprecationInfo:
      properties:
        deprecationState:
          type: string
        remarks:
          type: string
        supersededByCT:
          $ref: '#/components/schemas/CT'
      type: object
    CTEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        engineVersion:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    CTEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        name:
          type: string
        type:
          type: string
        ver:
          type: string
      type: object
    CTRequest:
      description: Request to get one cartographic transformation given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence.
      properties:
        ctessenceJson:
          $ref: '#/components/schemas/CTEssenceImpl'
        essence:
          $ref: '#/components/schemas/CTEssenceImpl'
          description: Any sub-type of cartographic transformation
        persistableReference:
          description: The persistable reference string, either the essence of the
            cartographic transform (CT) serialized into a JSON string or an encoded
            string (version 1).
          type: string
      type: object
    CTResults:
      description: A response containing a list of cartographic transformations
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        cts:
          description: Generic cartographic transformation
          items:
            $ref: '#/components/schemas/CT'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    Catalog:
      properties:
        allCRSes:
          items:
            $ref: '#/components/schemas/CRS'
          type: array
        allCTs:
          items:
            $ref: '#/components/schemas/CT'
          type: array
        areaOfUseCount:
          format: int32
          type: integer
        areasOfUse:
          items:
            $ref: '#/components/schemas/AreaOfUse'
          type: array
        attributes:
          $ref: '#/components/schemas/CatalogAttributes'
        catalogResponse:
          $ref: '#/components/schemas/Catalog'
        compoundCRSes:
          items:
            $ref: '#/components/schemas/CompoundCRS'
          type: array
        compoundCRSesCount:
          format: int32
          type: integer
        compoundCTs:
          items:
            $ref: '#/components/schemas/CompoundCT'
          type: array
        compoundCTsCount:
          format: int32
          type: integer
        earlyBoundCRSes:
          items:
            $ref: '#/components/schemas/EarlyBoundCRS'
          type: array
        earlyBoundCRSesCount:
          format: int32
          type: integer
        lateBoundCRSes:
          items:
            $ref: '#/components/schemas/LateBoundCRS'
          type: array
        lateBoundCRSesCount:
          format: int32
          type: integer
        singleCTs:
          items:
            $ref: '#/components/schemas/SingleCT'
          type: array
        singleCTsCount:
          format: int32
          type: integer
      type: object
    CatalogAttributes:
      properties:
        description:
          type: string
        lastModified:
          type: string
        name:
          type: string
      type: object
    CompoundCRS:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        axisUnits:
          items:
            type: string
          type: array
        baseCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        compoundCRSEssence:
          $ref: '#/components/schemas/CompoundCRSEssence'
        crsdeprecationInfo:
          $ref: '#/components/schemas/CRSDeprecationInfo'
        crstype:
          type: string
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        numberOfAxes:
          format: int32
          type: integer
        source:
          type: string
        transformationReady:
          type: boolean
      type: object
    CompoundCRSEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        engineVersion:
          type: string
        horizontalCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        horizontalCRSEssence:
          $ref: '#/components/schemas/CRSEssence'
        name:
          type: string
        type:
          type: string
        verticalCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        verticalCRSEssence:
          $ref: '#/components/schemas/CRSEssence'
      type: object
    CompoundCRSEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        horizontalCRS:
          $ref: '#/components/schemas/Essence'
          writeOnly: true
        horzEarlyBoundCRS:
          $ref: '#/components/schemas/EarlyBoundCRSEssenceImpl'
        horzLateBoundCRS:
          $ref: '#/components/schemas/LateBoundCRSEssenceImpl'
        name:
          type: string
        type:
          type: string
        ver:
          type: string
        vertEarlyBoundCRS:
          $ref: '#/components/schemas/EarlyBoundCRSEssenceImpl'
        vertLateBoundCRS:
          $ref: '#/components/schemas/LateBoundCRSEssenceImpl'
        verticalCRS:
          $ref: '#/components/schemas/Essence'
          writeOnly: true
      type: object
    CompoundCRSRequest:
      description: Request to get one CompoundCRS given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence.
      properties:
        essence:
          $ref: '#/components/schemas/CompoundCRSEssenceImpl'
          description: Compound coordinate reference system aggregating a horizontal
            to a vertical CRS
        persistableReference:
          description: The persistable reference string, either the essence of the
            CompoundCRS serialized into a JSON string or an encoded string (version
            1)
          type: string
      type: object
    CompoundCRSResults:
      description: A response containing a list of compound CRSes.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        crses:
          description: List of CompoundCRS objects.
          items:
            $ref: '#/components/schemas/CompoundCRS'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    CompoundCT:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        compoundCTEssence:
          $ref: '#/components/schemas/CompoundCTEssence'
        ctdeprecationInfo:
          $ref: '#/components/schemas/CTDeprecationInfo'
        cts:
          items:
            $ref: '#/components/schemas/SingleCT'
          type: array
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        fromCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        source:
          type: string
        toCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
      type: object
    CompoundCTEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        ctauthorityCodes:
          items:
            $ref: '#/components/schemas/AuthorityCode'
          type: array
        ctessences:
          items:
            $ref: '#/components/schemas/CTEssence'
          type: array
        engineVersion:
          type: string
        name:
          type: string
        policy:
          type: string
        type:
          type: string
      type: object
    CompoundCTEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        cts:
          items:
            $ref: '#/components/schemas/CTEssence'
          type: array
        name:
          type: string
        policy:
          type: string
        type:
          type: string
        ver:
          type: string
      type: object
    CompoundCTRequest:
      description: Request to get one CompoundCT given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence.
      properties:
        essence:
          $ref: '#/components/schemas/CompoundCTEssenceImpl'
          description: Compound cartographic transformation
        persistableReference:
          description: The persistable reference string, either the essence of the
            CompoundCT serialized into a JSON string or an encoded string (version
            1).
          type: string
      type: object
    CompoundCTResults:
      description: A response containing a list of compound cartographic transformations.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        cts:
          items:
            $ref: '#/components/schemas/CompoundCT'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    ConnectedOuterService:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    CoordinateReferenceSystemsQuery:
      description: Body for searching on CRSs
      properties:
        baseCRS:
          $ref: '#/components/schemas/BaseCRS'
          description: BaseCRS
        code:
          description: Corresponds to Code field on CRS records
          type: string
        codeSpace:
          description: Corresponds to CodeSpace field on CRS records
          type: string
        coordinateReferenceSystemType:
          description: Type of CRS, e.g., BoundCRS, ProjectedCRS, GeodeticCRS, VerticalCRS
          type: string
        datum:
          $ref: '#/components/schemas/Datum'
          description: Datum
        extent:
          description: Description of extent. Corresponds to PreferredUsage.Extent.Description
            in the record. All entities with PreferredUsage.Extent.Description containing
            the search string will be returned. Wildcard is not supported.
          type: string
        horizontalAxisUnitId:
          description: Corresponds to CoordinateSystem.HorizontalAxisUnitID field
            on CRS records, e.g., "osdu:reference-data--UnitOfMeasure:dega:".
          type: string
        id:
          description: Corresponds to ID field on CRS records
          type: string
        includeDeprecated:
          description: Whether to return deprecated records marked with InactiveIndicator=true.
            Default is false
          type: boolean
        kind:
          description: Corresponds to Kind field on CRS records
          type: string
        latitude:
          description: Latitude point for searching on CRS bounding box
          type: number
        limit:
          description: Corresponds to limit on search service. Default is to return
            all found entities.
          format: int32
          type: integer
        longitude:
          description: Longitude point for searching on CRS bounding box
          type: number
        name:
          description: Corresponds to Code field on CRS records
          type: string
        offset:
          description: Corresponds to offset on search service
          format: int32
          type: integer
        persistableReferenceSearch:
          type: string
        returnAllFields:
          description: Whether to return all fields in the record. Default is false
            and only a subset is returned
          type: boolean
        returnBoundGeographic2DAndWgs84:
          description: 'Whether or not to only return bound geopraphic 2d type. If
            true, it only returns CRS 1. with Kind as "BoundGeographic2D" or 2. with
            Kind as "geographic 2D" and Code as 4326 and CodeSpace as "EPSG" '
          type: boolean
        returnBoundProjectedAndProjectedBasedOnWgs84:
          description: Whether or not to only return bound projected type or projected
            type based on wgs84. If true, it only returns CRS 1. with Kind as "BoundProjected"
            or 2. with Kind as "projected" and BaseCRS.AuthorityCode.Code as 4326
          type: boolean
        returnedFields:
          description: Return all fields in the record
          items:
            type: string
          type: array
        verticalAxisUnitId:
          description: CorrespondsCorresponds to CoordinateSystem.VerticalAxisUnitID
            field on CRS records
          type: string
      type: object
    CoordinateTransformationsQuery:
      description: Body for searching on CTs
      properties:
        code:
          description: Corresponds to Code field on CT records
          type: string
        codeSpace:
          description: Corresponds to CodeSpace field on CT records
          type: string
        id:
          description: Corresponds to ID field on CT records
          type: string
        includeDeprecated:
          description: Whether to return deprecated records marked with InactiveIndicator=true.
            Default is false.
          type: boolean
        kind:
          description: Corresponds to the Kind field on CT records. Default is to
            not return CT records with Kind "VerticalTransformation". Viable options
            include "Transformation", "ConcatenatedOperation", "VerticalTransformation",
            "ExcludeVertical" (default) and "All". "All" is a special value which
            indicates returning records of all kinds.
          type: string
        latitude:
          description: Returns all entities for which the (Latitude, Longitude) is
            inside the Extent bounding box. Must also provide longitude
          type: number
        limit:
          description: Corresponds to limit on search service. Default is to return
            all found entities.
          format: int32
          type: integer
        longitude:
          description: See latitude
          type: number
        name:
          description: Corresponds to Name field on CT records. All entities with
            name containing the search string will be returned. Wildcard is not supported
          type: string
        offset:
          description: Corresponds to offset on search service
          format: int32
          type: integer
        returnAllFields:
          description: Whether to return all fields in the record. Default is false
            and only a subset is returned
          type: boolean
        returnedFields:
          items:
            type: string
          type: array
        sourceCRS:
          description: Corresponds to SourceCRS.SourceCRSID (record id), e.g., "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4198:".
            As SourceCRS and TargetCRS are interchangeable, it will also search TargetCRS.TargetCRSID
          type: string
        targetCRS:
          description: Corresponds to TargetCRS.TargetCRSID (record id), e.g., "osdu:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4198:".
            As SourceCRS and TargetCRS are interchangeable, it will also search SourceCRS.SourceCRSID
          type: string
      type: object
    CursorQueryResponse:
      properties:
        cursor:
          type: string
        results:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    Datum:
      properties:
        code:
          description: Codespace of datum
          type: string
        codeSpace:
          description: Name of datum
          type: string
        name:
          description: Code of datum
          type: string
      type: object
    DeprecationInfo:
      properties:
        deprecationState:
          type: string
        remarks:
          type: string
      type: object
    EarlyBoundCRS:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        axisUnits:
          items:
            type: string
          type: array
        baseCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        crsdeprecationInfo:
          $ref: '#/components/schemas/CRSDeprecationInfo'
        crstype:
          type: string
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        earlyBoundCRSEssence:
          $ref: '#/components/schemas/EarlyBoundCRSEssence'
        essence:
          $ref: '#/components/schemas/Essence'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        numberOfAxes:
          format: int32
          type: integer
        source:
          type: string
        transformationReady:
          type: boolean
      type: object
    EarlyBoundCRSEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        ctauthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        ctessence:
          $ref: '#/components/schemas/CTEssence'
        engineVersion:
          type: string
        lateBoundCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        lateBoundCRSEssence:
          $ref: '#/components/schemas/LateBoundCRSEssence'
        name:
          type: string
        type:
          type: string
      type: object
    EarlyBoundCRSEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        compoundCT:
          $ref: '#/components/schemas/CompoundCTEssenceImpl'
        lateBoundCRS:
          $ref: '#/components/schemas/LateBoundCRSEssence'
        name:
          type: string
        singleCT:
          $ref: '#/components/schemas/SingleCTEssenceImpl'
        type:
          type: string
        ver:
          type: string
      type: object
    EarlyBoundCRSRequest:
      description: Request to get one EarlyBoundCRS given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence
      properties:
        essence:
          $ref: '#/components/schemas/EarlyBoundCRSEssenceImpl'
          description: Early-bound coordinate reference system, i.e. a CRS with a
            transformation binding to WGS 84
        persistableReference:
          description: The persistable reference string, either the essence of the
            EarlyBoundCRS serialized into a JSON string or an encoded string (version
            1)
          type: string
      type: object
    EarlyBoundCRSResults:
      description: A response containing a list of early-bound CRSes.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        crses:
          description: The EarlyBoundCRS class.
          items:
            $ref: '#/components/schemas/EarlyBoundCRS'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    Essence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        type:
          type: string
      type: object
    InPolygonQuery:
      description: Coordinate Transformations
      properties:
        dataId:
          description: Searches on id for CRS records
          type: string
        limit:
          description: Corresponds to limit on search service. Default is to return
            all found entities.
          format: int32
          type: integer
        offset:
          description: Corresponds to offset on search service
          format: int32
          type: integer
        points:
          description: List of points to check against CRS or CT bounding boxes
          items:
            $ref: '#/components/schemas/Point'
          type: array
        recordId:
          description: Record of CRS or CT to check points against
          type: string
        returnedFields:
          items:
            type: string
          type: array
      type: object
    LateBoundCRS:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        axisUnits:
          items:
            type: string
          type: array
        baseCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        crsdeprecationInfo:
          $ref: '#/components/schemas/CRSDeprecationInfo'
        crstype:
          type: string
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        lastModified:
          type: string
        lateBoundCRSEssence:
          $ref: '#/components/schemas/LateBoundCRSEssence'
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        numberOfAxes:
          format: int32
          type: integer
        source:
          type: string
        transformationReady:
          type: boolean
      type: object
    LateBoundCRSEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        engineVersion:
          type: string
        name:
          type: string
        type:
          type: string
        wellKnownText:
          type: string
      type: object
    LateBoundCRSEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        name:
          type: string
        type:
          type: string
        ver:
          type: string
        wkt:
          type: string
      type: object
    LateBoundCRSRequest:
      description: Request to get one LateBoundCRS given its 'persistableReference'
        (serialized essence) or 'essence' structure. Only one, persistableReference
        or essence must be provided. If both are provided, essence takes precedence.
      properties:
        essence:
          $ref: '#/components/schemas/LateBoundCRSEssenceImpl'
          description: Late-bound coordinate reference system, i.e. a CRS without
            a transformation binding to WGS 84
        persistableReference:
          description: The persistable reference string, either the essence of the
            LateBoundCRS serialized into a JSON string or an encoded string (version
            1).
          type: string
      type: object
    LateBoundCRSResults:
      description: A response containing a list of late-bound CRSes.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        crses:
          description: An array of LateBoundCRS
          items:
            $ref: '#/components/schemas/LateBoundCRS'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    NamedReference:
      description: Name and Persistable Reference (the essence converted to a JSON
        string).
      properties:
        name:
          description: The name of the item.
          type: string
        persistableReference:
          description: The item 'essence' serialized into a JSON string..
          type: string
      type: object
    Point:
      properties:
        latitude:
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          format: double
          type: number
      type: object
    PointsInAouSearchPoint:
      description: A point that didn't land in the bounding box for area of use search
      properties:
        approximateKmDistanceOutside:
          description: Kilometers outside the record's bounding box
          format: int32
          type: integer
        index:
          description: A zero-based index of the point in the input "points" array
          format: int32
          type: integer
        point:
          $ref: '#/components/schemas/Point'
          description: Lat, long point
      type: object
    PointsInAouSearchResult:
      description: List of failed points, ones that aren't in bounding box
      properties:
        bboxFailedPoints:
          description: A point that didn't land in the bounding box for area of use
            search
          items:
            $ref: '#/components/schemas/PointsInAouSearchPoint'
          type: array
        maxDistKmOutsideBBox:
          description: Point distance with highest km outside bounding box
          format: int32
          type: integer
      type: object
    QueryResponse:
      properties:
        aggregations:
          items:
            $ref: '#/components/schemas/AggregationResponse'
          type: array
        phraseSuggestions:
          items:
            type: string
          type: array
        results:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    SearchRequest:
      description: Request to containing a Lucene style query string.
      properties:
        query:
          description: The Lucene style query string with keywords.
          type: string
      type: object
    SearchResponse:
      description: Results for most V3 endpoints
      properties:
        cursorSearchResults:
          $ref: '#/components/schemas/CursorQueryResponse'
        query:
          description: Query string used against Search service
          type: string
        searchResults:
          $ref: '#/components/schemas/QueryResponse'
          description: Results from Search service
      type: object
    SingleCT:
      properties:
        aliasNames:
          items:
            type: string
          type: array
        areaOfUse:
          $ref: '#/components/schemas/AreaOfUse'
        ctdeprecationInfo:
          $ref: '#/components/schemas/CTDeprecationInfo'
        deprecationInfo:
          $ref: '#/components/schemas/DeprecationInfo'
        description:
          type: string
        essence:
          $ref: '#/components/schemas/Essence'
        fromCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        lastModified:
          type: string
        namedReference:
          $ref: '#/components/schemas/NamedReference'
        singleCTEssence:
          $ref: '#/components/schemas/SingleCTEssence'
        source:
          type: string
        toCRSAuthorityCode:
          $ref: '#/components/schemas/AuthorityCode'
      type: object
    SingleCTEssence:
      properties:
        authorityCode:
          $ref: '#/components/schemas/AuthorityCode'
        engineVersion:
          type: string
        name:
          type: string
        type:
          type: string
        wellKnownText:
          type: string
      type: object
    SingleCTEssenceImpl:
      properties:
        authCode:
          $ref: '#/components/schemas/AuthorityCode'
        name:
          type: string
        type:
          type: string
        ver:
          type: string
        wkt:
          type: string
      type: object
    SingleCTRequest:
      description: Request to get one SingleCT given its 'persistableReference' (serialized
        essence) or 'essence' structure. Only one, persistableReference or essence
        must be provided. If both are provided, essence takes precedence.
      properties:
        essence:
          $ref: '#/components/schemas/SingleCTEssenceImpl'
          description: Single cartographic transformation.
        persistableReference:
          description: The persistable reference string, either the essence of the
            SingleCT serialized into a JSON string or an encoded string (version 1).
          type: string
      type: object
    SingleCTResults:
      description: A response containing a list of single cartographic transformations.
      properties:
        count:
          description: The maximum number of the AreaOfUse returned. It is optional
            and is 100 by default.
          format: int32
          type: integer
        cts:
          items:
            $ref: '#/components/schemas/SingleCT'
          type: array
        offset:
          description: The offset of the first item in the list of all AreaOfUse.
            It is optional and is 0 by default.
          format: int32
          type: integer
        totalCount:
          description: 'The mode of return: ''persistable_reference'' (default) string
            or ''essence'' structure or both ''persistable_reference_essence''.'
          format: int32
          type: integer
      type: object
    SphericalBoundingBox:
      properties:
        latitudeLower:
          format: double
          type: number
        latitudeUpper:
          format: double
          type: number
        longitudeLeft:
          format: double
          type: number
        longitudeRight:
          format: double
          type: number
      type: object
    VersionInfo:
      properties:
        artifactId:
          type: string
        branch:
          type: string
        buildTime:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          type: array
        groupId:
          type: string
        version:
          type: string
      type: object
  securitySchemes:
    Authorization:
      bearerFormat: Authorization
      in: header
      name: Authorization
      scheme: bearer
      type: http
info:
  contact:
    email: dps@OSDU.org
    name: OSDU Data Platform Team
  description: Coordinate Reference System (CRS) Catalog Service
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: CRS Catalog Service API
openapi: 3.1.0
paths:
  /_ah/liveness_check:
    get:
      description: For deployment available public `/liveness_check` endpoint, which
        provides `CRS Catalog Service is alive` message.
      operationId: livenessCheck_1
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: CRS Catalog service is alive
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Liveness Check endpoint
      tags:
      - health-check-api
  /_ah/readiness_check:
    get:
      description: For deployment available public `/readiness_check` endpoint, which
        provides `CRS Catalog Service is ready` message.
      operationId: readinessCheck_1
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: CRS Catalog service is ready
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Readiness Check endpoint
      tags:
      - health-check-api
  /v2/_ah/liveness_check:
    get:
      description: For deployment available public `/liveness_check` endpoint, which
        provides `CRS Catalog Service is alive` message.
      operationId: livenessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: CRS Catalog service is alive
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Liveness Check endpoint
      tags:
      - health-check-api
  /v2/_ah/readiness_check:
    get:
      description: For deployment available public `/readiness_check` endpoint, which
        provides `CRS Catalog Service is ready` message.
      operationId: readinessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: CRS Catalog service is ready
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Readiness Check endpoint
      tags:
      - health-check-api
  /v2/area:
    get:
      description: Get Area of Use records - returning named bounding box definitions
        in latitude and longitude.
      operationId: getAreasOfUse
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaOfUseResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get Areas of Use
      tags:
      - areas-of-use-api
    post:
      description: Get one Area of Use record by essence - returning a named bounding
        box definition in latitude and longitude.
      operationId: getAreaOfUse
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaOfUseRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaOfUse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get one Area of Use
      tags:
      - areas-of-use-api
  /v2/catalog:
    get:
      description: Get the catalog structure with populated number of items per list
        but empty lists ('lateBoundCRSes',...). It is expected that the lists are
        individually populated on demand via the specific methods ('CRSV2GetLateBoundCRSes',...).
      operationId: getCatalog
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the Catalog summary (without lists)
      tags:
      - crs-catalog-api
  /v2/catalog/attributes:
    get:
      description: Get the catalog name and last update date
      operationId: getCatalogAttributes
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAttributes'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get Catalog Name and Update Dates
      tags:
      - crs-catalog-api
  /v2/compoundcrs:
    get:
      description: Get all the CompoundCRSes defined in the catalog
      operationId: getCompoundCRSes
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompoundCRSResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all CompoundCRSes
      tags:
      - coordinate-reference-systems-api
    post:
      description: Get one the CompoundCRS given its essence.
      operationId: getCompoundCRS
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompoundCRSRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompoundCRS'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get One CompoundCRSes
      tags:
      - coordinate-reference-systems-api
  /v2/compoundct:
    get:
      description: Get all the CompoundCTs defined in the catalog.
      operationId: getCompoundCTs
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompoundCTResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all CompoundCTs
      tags:
      - cartographic-transformations-api
    post:
      description: Get one CompoundCT by its essence.
      operationId: getCompoundCT
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompoundCTRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompoundCT'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get One CompoundCTs
      tags:
      - cartographic-transformations-api
  /v2/crs:
    get:
      description: Get all the CRSes (any sub-type) defined in the catalog.
      operationId: getAllCRSes
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CRSResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all CRSes
      tags:
      - coordinate-reference-systems-api
    post:
      description: Get one CRS (any sub-type) given its essence
      operationId: getCRS
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CRSRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CRS'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get one CRS
      tags:
      - coordinate-reference-systems-api
  /v2/ct:
    get:
      description: Get all cartographic transformations declared in the catalog.
      operationId: getAllCTs
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CTResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all Cartographic Transformations
      tags:
      - cartographic-transformations-api
    post:
      description: Get one cartographic transformation given its essence.
      operationId: getCT
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CTRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CT'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get one Cartographic Transformation
      tags:
      - cartographic-transformations-api
  /v2/earlyboundcrs:
    get:
      description: Get all the EarlyBoundCRSes defined in the catalog.
      operationId: getEarlyBoundCRSes
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyBoundCRSResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all EarlyBoundCRSes
      tags:
      - coordinate-reference-systems-api
    post:
      description: Get all the EarlyBoundCRSes defined in the catalog.
      operationId: getEarlyBoundCRS
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyBoundCRSRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyBoundCRS'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all EarlyBoundCRSes
      tags:
      - coordinate-reference-systems-api
  /v2/info:
    get:
      description: For deployment available public `/info` endpoint, which provides
        build and git related information.
      operationId: info_1
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: Version info.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: info
      tags:
      - info-api
  /v2/lateboundcrs:
    get:
      description: Get all the LateBoundCRSes defined in the catalog.
      operationId: getLateBoundCRSes
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LateBoundCRSResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all LateBoundCRSes
      tags:
      - coordinate-reference-systems-api
    post:
      description: Get one LateBoundCRS given its persistable reference string or
        essence structure.
      operationId: getLateBoundCRS
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LateBoundCRSRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LateBoundCRS'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get one LateBoundCRS
      tags:
      - coordinate-reference-systems-api
  /v2/search/area:
    post:
      description: 'Search Area of Use records by keywords and/or geographic area
        - returning named bounding box definitions in latitude and longitude. Geographical
        constraints are passed (optionally) as parameters via the query URL, search
        keywords are passed via the request body. Query syntax follows Lucene style,
        default operator for multiple expressions is AND. The following keywords are
        supported: ''''name:'''', ''''description:'''', ''''authority:'''', ''''code:'''',
        ''''deprecationState:'''', ''''remarks:'''' (deprecationState remarks), ''''lastModified:''''.
        Example ''''name:*America*''''.'
      operationId: searchAreasOfUse
      parameters:
      - in: query
        name: longitudeLeft
        required: false
        schema:
          default: -180.0
          format: double
          type: number
      - in: query
        name: latitudeLower
        required: false
        schema:
          default: -90.0
          format: double
          type: number
      - in: query
        name: longitudeRight
        required: false
        schema:
          default: 180.0
          format: double
          type: number
      - in: query
        name: latitudeUpper
        required: false
        schema:
          default: 90.0
          format: double
          type: number
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaOfUseResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Search Areas of Use
      tags:
      - areas-of-use-api
  /v2/search/crs:
    post:
      description: 'Search CRS records (any sub-type) by keywords and/or geographic
        area. Geographical constraints are passed (optionally) as parameters via the
        query URL, search keywords are passed via the request body. Query syntax follows
        Lucene style, default operator for multiple expressions is AND. The following
        keywords are supported: ''''name:'''', ''''description:'''', ''''type:'''',
        ''''authority:'''', ''''code:'''', ''''deprecationState:'''', ''''remarks:'''',
        ''''lastModified:'''', ''''source:'''', ''''wellKnownText:'''', ''''crsType:'''',
        ''''baseCRS.authority:'''', ''''baseCRS.code:'''', ''''horizontalCRS.authority:'''',
        ''''horizontalCRS.code:'''', ''''verticalCRS.authority:'''', ''''verticalCRS.code:'''',
        ''''lateBoundCRS.authority:'''', ''''lateBoundCRS.code:'''', ''''ct.authority:'''',
        ''''ct.code:'''', ''''transformationReady:''''. followed by a value. Example:
        ''''transformationReady:true''''.'
      operationId: searchCRSes
      parameters:
      - in: query
        name: longitudeLeft
        required: false
        schema:
          default: -180.0
          format: double
          type: number
      - in: query
        name: latitudeLower
        required: false
        schema:
          default: -90.0
          format: double
          type: number
      - in: query
        name: longitudeRight
        required: false
        schema:
          default: 180.0
          format: double
          type: number
      - in: query
        name: latitudeUpper
        required: false
        schema:
          default: 90.0
          format: double
          type: number
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CRSResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Search CRSes
      tags:
      - coordinate-reference-systems-api
  /v2/search/ct:
    post:
      description: 'Search cartographic transform records (any sub-type) by keywords
        and/or geographic area. Geographical constraints are passed (optionally) as
        parameters via the query URL, search keywords are passed via the request body.
        Query syntax follows Lucene style, default operator for multiple expressions
        is AND. The following keywords are supported: ''''name:'''',''''description:'''',
        ''''type:'''', ''''authority:'''', ''''code:'''', ''''deprecationState:'''',
        ''''remarks:'''', ''''lastModified:'''', ''''source:'''', ''''wellKnownText:'''',
        ''''fromCRS.authority:'''', ''''fromCRS.code:'''', ''''toCRS.authority:'''',
        toCRS.code:'''', ''''policy:''''. followed by a value. Example: ''''fromCRS.code:4267''''.'
      operationId: searchCTs
      parameters:
      - in: query
        name: longitudeLeft
        required: false
        schema:
          default: -180.0
          format: double
          type: number
      - in: query
        name: latitudeLower
        required: false
        schema:
          default: -90.0
          format: double
          type: number
      - in: query
        name: longitudeRight
        required: false
        schema:
          default: 180.0
          format: double
          type: number
      - in: query
        name: latitudeUpper
        required: false
        schema:
          default: 90.0
          format: double
          type: number
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CTResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Search Cartographic Transformations
      tags:
      - cartographic-transformations-api
  /v2/singlect:
    get:
      description: Get all the SingleCTs defined in the catalog.
      operationId: getSingleCTs
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCTResults'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all SingleCTs
      tags:
      - cartographic-transformations-api
    post:
      description: Get one SingleCT given its essence.
      operationId: getSingleCT
      parameters:
      - in: query
        name: mode
        required: false
        schema:
          default: persistableReference
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleCTRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCT'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad input format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get one SingleCT
      tags:
      - cartographic-transformations-api
  /v3/coordinate-reference-system:
    get:
      description: Coordinate Reference Systems
      operationId: getCoordinateReferenceSystem
      parameters:
      - in: query
        name: recordId
        required: false
        schema:
          type: string
      - in: query
        name: dataId
        required: false
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Coordinate Reference Systems
      tags:
      - coordinate-reference-systems-api-v3
    post:
      description: Coordinate Transformations
      operationId: getCoordinateReferenceSystems
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateReferenceSystemsQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Coordinate Transformations
      tags:
      - coordinate-reference-systems-api-v3
  /v3/coordinate-transformation:
    get:
      description: Coordinate Transformations
      operationId: getCoordinateTransformation
      parameters:
      - in: query
        name: recordId
        required: false
        schema:
          type: string
      - in: query
        name: dataId
        required: false
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Coordinate Transformations
      tags:
      - coordinate-transformations-api-v3
    post:
      description: Coordinate Transformations
      operationId: getCoordinateTransformations
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoordinateTransformationsQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Coordinate Transformations
      tags:
      - coordinate-transformations-api-v3
  /v3/info:
    get:
      description: For deployment available public `/info` endpoint, which provides
        build and git related information..
      operationId: info
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: Version info.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: info
      tags:
      - info-api-v3
  /v3/points-in-aou:
    post:
      description: Coordinate Transformations
      operationId: getAouInfo
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPolygonQuery'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointsInAouSearchResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Coordinate Transformations
      tags:
      - area-of-use-api-v3
security:
- Authorization: []
servers:
- description: Generated server url
  url: https://maadme.oep.ppe.azure-int.net/api/crs/catalog
