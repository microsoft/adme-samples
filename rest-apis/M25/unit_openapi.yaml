components:
  schemas:
    ABCD:
      properties:
        a:
          format: double
          type: number
        b:
          format: double
          type: number
        c:
          format: double
          type: number
        d:
          format: double
          type: number
      type: object
    ABCDImpl:
      description: Energistics standard parameterization y = (A+Bx)/(C+Dx)
      properties:
        a:
          description: Coefficient A in the Energistics unit parameterization y =
            (A+Bx)/(C+Dx)
          format: double
          type: number
        b:
          description: Coefficient B in the Energistics unit parameterization y =
            (A+Bx)/(C+Dx)
          format: double
          type: number
        c:
          description: Coefficient C in the Energistics unit parameterization y =
            (A+Bx)/(C+Dx)
          format: double
          type: number
        d:
          description: Coefficient D in the Energistics unit parameterization y =
            (A+Bx)/(C+Dx)
          format: double
          type: number
      type: object
    AppError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        reason:
          type: string
      type: object
    Catalog:
      properties:
        lastModified:
          type: string
        mapStates:
          items:
            $ref: '#/components/schemas/MapState'
          type: array
        measurementMaps:
          items:
            $ref: '#/components/schemas/MeasurementMap'
          type: array
        measurements:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        totalMapStateCount:
          format: int32
          type: integer
        totalMeasurementCount:
          format: int32
          type: integer
        totalMeasurementMapCount:
          format: int32
          type: integer
        totalUnitCount:
          format: int32
          type: integer
        totalUnitMapCount:
          format: int32
          type: integer
        totalUnitSystemCount:
          format: int32
          type: integer
        unitMaps:
          items:
            $ref: '#/components/schemas/UnitMap'
          type: array
        unitSystemInfos:
          items:
            $ref: '#/components/schemas/UnitSystemInfo'
          type: array
        units:
          items:
            $ref: '#/components/schemas/Unit'
          type: array
      type: object
    CatalogLastModified:
      properties:
        lastModified:
          type: string
      type: object
    ConnectedOuterService:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    ConversionABCDRequest:
      description: an Energistics Abcd style unit conversion request. The requested
        units are either passed as persistable reference strings (JSON serialized
        Unit 'essence') or as Unit essence structure
      properties:
        fromUnit:
          $ref: '#/components/schemas/UnitEssenceImpl'
          description: The essence of a unit parameterization
        fromUnitPersistableReference:
          description: The persistable reference string (JSON serialized Unit 'essence')
            representing toe 'from Unit'. Either 'fromUnitPersistableReference' or
            'fromUnit' must be populated.
          type: string
        toUnit:
          $ref: '#/components/schemas/UnitEssenceImpl'
        toUnitPersistableReference:
          description: The persistable reference string (JSON serialized Unit 'essence')
            representing toe 'to Unit'. Either 'toUnitPersistableReference' or 'toUnit'
            must be populated.
          type: string
      type: object
    ConversionResult:
      properties:
        abcd:
          $ref: '#/components/schemas/ABCD'
        fromUnit:
          $ref: '#/components/schemas/Unit'
        scaleOffset:
          $ref: '#/components/schemas/ScaleOffset'
        toUnit:
          $ref: '#/components/schemas/Unit'
      type: object
    ConversionScaleOffsetRequest:
      description: A scale offset unit conversion request. The requested units are
        either passed as persistable reference strings (JSON serialized Unit 'essence')
        or as Unit essence structure.
      properties:
        fromUnit:
          $ref: '#/components/schemas/UnitEssenceImpl'
          description: The essence of a unit parameterization
        fromUnitPersistableReference:
          description: The persistable reference string (JSON serialized Unit 'essence')
            representing toe 'from Unit'. Either 'fromUnitPersistableReference' or
            'fromUnit' must be populated.
          type: string
        toUnit:
          $ref: '#/components/schemas/UnitEssenceImpl'
          description: The essence of a unit parameterization
        toUnitPersistableReference:
          description: The persistable reference string (JSON serialized Unit 'essence')
            representing toe 'to Unit'. Either 'toUnitPersistableReference' or 'toUnit'
            must be populated.
          type: string
      type: object
    MapState:
      properties:
        description:
          type: string
        source:
          type: string
        state:
          type: string
      type: object
    Measurement:
      properties:
        baseMeasurement:
          type: boolean
        baseMeasurementEssenceJson:
          type: string
        childMeasurementEssenceJsons:
          items:
            type: string
          type: array
        code:
          type: string
        deprecationInfo:
          $ref: '#/components/schemas/MeasurementDeprecationInfo'
        description:
          type: string
        dimensionAnalysis:
          type: string
        dimensionCode:
          type: string
        essence:
          $ref: '#/components/schemas/MeasurementEssence'
        essenceJson:
          type: string
        lastModified:
          type: string
        name:
          type: string
        namespace:
          type: string
        parentEssenceJson:
          type: string
        preferredUnitEssenceJsons:
          items:
            type: string
          type: array
        unitEssenceJsons:
          items:
            type: string
          type: array
        unitQuantityCode:
          type: string
      type: object
    MeasurementDeprecationInfo:
      properties:
        remarks:
          type: string
        state:
          type: string
        supersededByUnitMeasurement:
          type: string
      type: object
    MeasurementEssence:
      properties:
        ancestry:
          type: string
        type:
          type: string
      type: object
    MeasurementEssenceImpl:
      description: The essence of a measurement definition
      properties:
        ancestry:
          description: The measurement ancestry, i.e. the parent codes separated by
            a period symbol.
          type: string
        baseMeasurementCode:
          type: string
          writeOnly: true
        type:
          description: The type string for this measurement
          type: string
      type: object
    MeasurementMap:
      properties:
        fromNamespace:
          type: string
        measurementMapItemCount:
          format: int32
          type: integer
        measurementMapItems:
          items:
            $ref: '#/components/schemas/MeasurementMapItem'
          type: array
        toNamespace:
          type: string
      type: object
    MeasurementMapItem:
      properties:
        fromMeasurement:
          $ref: '#/components/schemas/Measurement'
        fromNamespace:
          type: string
        note:
          type: string
        state:
          type: string
        toMeasurement:
          $ref: '#/components/schemas/Measurement'
        toNamespace:
          type: string
      type: object
    MeasurementRequest:
      description: Request to get a specific measurement given a persistable reference
        string or measurement essence structure.
      properties:
        essence:
          $ref: '#/components/schemas/MeasurementEssenceImpl'
          description: The essence of a measurement definition
        persistableReference:
          type: string
      type: object
    QueryResult:
      properties:
        count:
          format: int32
          type: integer
        mapStates:
          items:
            $ref: '#/components/schemas/MapState'
          type: array
        measurementMapItems:
          items:
            $ref: '#/components/schemas/MeasurementMapItem'
          type: array
        measurements:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        offset:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        unitMapItems:
          items:
            $ref: '#/components/schemas/UnitMapItem'
          type: array
        units:
          items:
            $ref: '#/components/schemas/Unit'
          type: array
      type: object
    ScaleOffset:
      properties:
        offset:
          format: double
          type: number
        scale:
          format: double
          type: number
      type: object
    ScaleOffsetImpl:
      description: Unit in y = scale*(x-offset) parameterization
      properties:
        offset:
          description: The scale in y = scale*(x-offset)
          format: double
          type: number
        scale:
          description: The offset in y = scale*(x-offset)
          format: double
          type: number
      type: object
    SearchRequest:
      description: Request to containing a Lucene style query string.
      properties:
        query:
          description: The Lucene style query string with keywords
          type: string
      type: object
    Unit:
      properties:
        deprecationInfo:
          $ref: '#/components/schemas/UnitDeprecationInfo'
        description:
          type: string
        displaySymbol:
          type: string
        essence:
          $ref: '#/components/schemas/UnitEssence'
        essenceJson:
          type: string
        lastModified:
          type: string
        name:
          type: string
        namespace:
          type: string
        source:
          type: string
      type: object
    UnitAssignment:
      properties:
        lastModified:
          type: string
        measurement:
          $ref: '#/components/schemas/Measurement'
        unit:
          $ref: '#/components/schemas/Unit'
      type: object
    UnitDeprecationInfo:
      properties:
        remarks:
          type: string
        state:
          type: string
        supersededByUnit:
          type: string
      type: object
    UnitEssence:
      properties:
        abcd:
          $ref: '#/components/schemas/ABCD'
        baseMeasurementEssence:
          $ref: '#/components/schemas/MeasurementEssence'
        scaleOffset:
          $ref: '#/components/schemas/ScaleOffset'
        symbol:
          type: string
        type:
          type: string
      type: object
    UnitEssenceImpl:
      description: The essence of a unit parameterization
      properties:
        abcd:
          $ref: '#/components/schemas/ABCDImpl'
          description: Energistics standard parameterization y = (A+Bx)/(C+Dx)
        baseMeasurement:
          $ref: '#/components/schemas/MeasurementEssence'
        scaleOffset:
          $ref: '#/components/schemas/ScaleOffsetImpl'
        symbol:
          description: Unit in y = scale*(x-offset) parameterization
          type: string
        type:
          description: The type string for this unit essence, either 'USO' for ScaleOffset
            or 'UAD' for Abcd
          type: string
      type: object
    UnitMap:
      properties:
        fromNamespace:
          type: string
        toNamespace:
          type: string
        unitMapItemCount:
          format: int32
          type: integer
        unitMapItems:
          items:
            $ref: '#/components/schemas/UnitMapItem'
          type: array
      type: object
    UnitMapItem:
      properties:
        fromNamespace:
          type: string
        fromUnit:
          $ref: '#/components/schemas/Unit'
        note:
          type: string
        state:
          type: string
        toNamespace:
          type: string
        toUnit:
          $ref: '#/components/schemas/Unit'
      type: object
    UnitRequest:
      description: Request to get a single unit instance given an essence.
      properties:
        essence:
          $ref: '#/components/schemas/UnitEssenceImpl'
          description: The essence of a unit parameterization
        persistableReference:
          description: The persistable reference string for the unit; optional, only
            one 'persistableReference' or 'essence' must be defined
          type: string
      type: object
    UnitSystem:
      properties:
        ancestry:
          type: string
        description:
          type: string
        lastModified:
          type: string
        name:
          type: string
        offset:
          format: int32
          type: integer
        persistableReference:
          type: string
        referenceUnitSystem:
          type: string
        source:
          type: string
        unitAssignmentCount:
          format: int32
          type: integer
        unitAssignmentCountInResponse:
          format: int32
          type: integer
        unitAssignmentCountTotal:
          format: int32
          type: integer
        unitAssignments:
          items:
            $ref: '#/components/schemas/UnitAssignment'
          type: array
      type: object
    UnitSystemEssenceImpl:
      description: A unit system essence
      properties:
        ancestry:
          description: The full ancestry of this unit system.
          type: string
      type: object
    UnitSystemInfo:
      description: A container for UnitSystem properties
      properties:
        ancestry:
          description: The unit system ancestry, i.e. names separated by '.'
          type: string
        description:
          description: The unit system description
          type: string
        name:
          description: The unit system name
          type: string
        persistableReference:
          description: The unit system's persistable reference string.
          type: string
      type: object
    UnitSystemInfoResponse:
      description: The unit system info structures
      properties:
        count:
          format: int32
          type: integer
        offset:
          description: The offset into the list as requested
          format: int32
          type: integer
        totalCount:
          description: The total number of elements in the list defined in the catalog
          format: int32
          type: integer
        unitSystemInfoList:
          description: The array of unit system names
          items:
            $ref: '#/components/schemas/UnitSystemInfo'
          type: array
      type: object
    UnitSystemRequest:
      description: Request to get all unit assignments for the given unit system
      properties:
        essence:
          $ref: '#/components/schemas/UnitSystemEssenceImpl'
          description: A unit system essence
        persistableReference:
          description: The unit system's persistable reference string
          type: string
      type: object
    VersionInfo:
      properties:
        artifactId:
          type: string
        branch:
          type: string
        buildTime:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          type: array
        groupId:
          type: string
        version:
          type: string
      type: object
  securitySchemes:
    Authorization:
      bearerFormat: Authorization
      in: header
      name: Authorization
      scheme: bearer
      type: http
info:
  contact:
    email: dps@OSDU.org
    name: OSDU Data Platform Team
  description: Unit Service that provides a set of APIs
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Unit Service API
  version: 3.0.0
openapi: 3.1.0
paths:
  /v3/_ah/liveness_check:
    get:
      description: For deployment available public `/liveness_check` endpoint, which
        provides `CRS Catalog Service is alive` message.
      operationId: livenessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: CRS Catalog service is alive
        '400':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Liveness Check endpoint
      tags:
      - health-check-api
  /v3/_ah/readiness_check:
    get:
      description: For deployment available public `/readiness_check` endpoint, which
        provides `CRS Catalog Service is ready` message.
      operationId: readinessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: CRS Catalog service is ready
        '400':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: Readiness Check endpoint
      tags:
      - health-check-api
  /v3/catalog:
    get:
      description: Get Catalog Using GET
      operationId: getCatalog
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getCatalog
      tags:
      - unit-api-v3
  /v3/catalog/lastmodified:
    get:
      description: Get LastModified Using GET
      operationId: getLastModified
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogLastModified'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getLastModified
      tags:
      - unit-api-v3
  /v3/catalog/mapstates:
    get:
      description: Get Unit Maps Using GET
      operationId: getMapStates
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitMaps
      tags:
      - unit-api-v3
  /v3/catalog/search:
    post:
      description: postSearchUsingPOST
      operationId: postSearch
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postSearch
      tags:
      - unit-api-v3
  /v3/conversion/abcd:
    get:
      description: Post Conversion ABCD Using POST
      operationId: getConversionABCDBySymbols
      parameters:
      - in: query
        name: namespaces
        required: true
        schema:
          type: string
      - in: query
        name: fromSymbol
        required: true
        schema:
          type: string
      - in: query
        name: toSymbol
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postConversionABCD
      tags:
      - unit-api-v3
    post:
      description: Post Conversion ABCD Using POST
      operationId: postConversionABCD
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionABCDRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postConversionABCD
      tags:
      - unit-api-v3
  /v3/conversion/scale:
    get:
      description: Get Conversion Scale Offset By Symbols Using GET
      operationId: getConversionScaleOffsetBySymbols
      parameters:
      - in: query
        name: namespaces
        required: true
        schema:
          type: string
      - in: query
        name: fromSymbol
        required: true
        schema:
          type: string
      - in: query
        name: toSymbol
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getConversionScaleOffsetBySymbols
      tags:
      - unit-api-v3
    post:
      description: Post Conversion Scale Offset Using POST
      operationId: postConversionScaleOffset
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionScaleOffsetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postConversionScaleOffset
      tags:
      - unit-api-v3
  /v3/info:
    get:
      description: For deployment available public `/info` endpoint, which provides
        build and git related information..
      operationId: info
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: Version info.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
      summary: info
      tags:
      - info-api-v3
  /v3/measurement:
    get:
      description: Get Measurements Using GET
      operationId: getMeasurement
      parameters:
      - in: query
        name: ancestry
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getMeasurements
      tags:
      - unit-api-v3
    post:
      description: post Measurement Using POST
      operationId: postMeasurement
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postMeasurement
      tags:
      - unit-api-v3
  /v3/measurement/list:
    get:
      description: Get Measurements Using GET
      operationId: getMeasurements
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getMeasurements
      tags:
      - unit-api-v3
  /v3/measurement/maps:
    get:
      description: Get Measurement Maps Using GET
      operationId: getMeasurementMaps
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getMeasurementMaps
      tags:
      - unit-api-v3
  /v3/measurement/search:
    post:
      description: Post Search Measurements Using POST
      operationId: postSearchMeasurements
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postSearchMeasurements
      tags:
      - unit-api-v3
  /v3/unit:
    get:
      description: Get Units Using GET
      operationId: getUnits
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnits
      tags:
      - unit-api-v3
    post:
      description: Post Unit Using POST
      operationId: postUnit
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postUnit
      tags:
      - unit-api-v3
  /v3/unit/maps:
    get:
      description: Get Unit Maps Using GET
      operationId: getUnitMaps
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitMaps
      tags:
      - unit-api-v3
  /v3/unit/measurement:
    get:
      description: Post Units By Measurement Using POST
      operationId: getUnitsByMeasurement
      parameters:
      - in: query
        name: ancestry
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postUnitsByMeasurement
      tags:
      - unit-api-v3
    post:
      description: Get Units By Measurement Using GET
      operationId: postUnitsByMeasurement
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitsByMeasurement
      tags:
      - unit-api-v3
  /v3/unit/measurement/preferred:
    get:
      description: Post Preferred Units By Measurement Using POST
      operationId: getPreferredUnitsByMeasurement
      parameters:
      - in: query
        name: ancestry
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postPreferredUnitsByMeasurement
      tags:
      - unit-api-v3
    post:
      description: Post Preferred Units By Measurement Using POST
      operationId: postPreferredUnitsByMeasurement
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postPreferredUnitsByMeasurement
      tags:
      - unit-api-v3
  /v3/unit/search:
    post:
      description: Post Search Units Using POST
      operationId: postSearchUnits
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postSearchUnits
      tags:
      - unit-api-v3
  /v3/unit/symbol:
    get:
      description: Get Unit By Symbol Using GET
      operationId: getUnitBySymbol
      parameters:
      - in: query
        name: namespaces
        required: true
        schema:
          type: string
      - in: query
        name: symbol
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitBySymbol
      tags:
      - unit-api-v3
  /v3/unit/symbols:
    get:
      description: Get Units By Symbol Using GET
      operationId: getUnitsBySymbol
      parameters:
      - in: query
        name: symbol
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitsBySymbol
      tags:
      - unit-api-v3
  /v3/unit/unitsystem:
    get:
      description: Get Unit By System And Measurement Using GET
      operationId: getUnitBySystemAndMeasurement
      parameters:
      - in: query
        name: unitSystemName
        required: true
        schema:
          type: string
      - in: query
        name: ancestry
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitBySystemAndMeasurement
      tags:
      - unit-api-v3
    post:
      description: Post Unit By System And Measurement Using POST
      operationId: postUnitBySystemAndMeasurement
      parameters:
      - in: query
        name: unitSystemName
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postUnitBySystemAndMeasurement
      tags:
      - unit-api-v3
  /v3/unitsystem:
    get:
      description: Get Unit By System And Measurement Using GET
      operationId: getUnitSystem
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitSystem'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitBySystemAndMeasurement
      tags:
      - unit-api-v3
    post:
      description: Post Unit System Using POST
      operationId: postUnitSystem
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitSystemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitSystem'
          description: Ok
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitSystem'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: postUnitSystem
      tags:
      - unit-api-v3
  /v3/unitsystem/list:
    get:
      description: Get Unit System Info List Using GET
      operationId: getUnitSystemInfoList
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitSystemInfoResponse'
          description: A successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: A LegalTag with the given name already exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: getUnitSystemInfoList
      tags:
      - unit-api-v3
security:
- Authorization: []
servers:
- url: /api/unit
tags:
- description: Version info endpoint
  name: info-api-v3
- description: Health related API
  name: health-check-api
- description: Unit related API
  name: unit-api-v3
