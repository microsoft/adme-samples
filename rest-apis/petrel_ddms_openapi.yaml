openapi: 3.0.1
info:
  title: Petrel DMS API
  description: Petrel DMS OAK Sample Storage API
  version: '1.0'
paths:
  '/api/petreldms/v1/projects/{projectId}':
    get:
      tags:
        - Projects
      summary: Gets a single project record.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
        - name: attribute
          in: query
          description: >-
            Filter attributes to restrict the returned fields of the record.
            Usage: data.{record-data-field-name}.
          schema:
            type: string
      responses:
        '200':
          description: The project was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OsduRecord'
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
        '404':
          description: The project does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Projects
      summary: Updates a specific project properties.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The requested update value and parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchRequest'
        required: true
      responses:
        '200':
          description: The project was successfully updated.
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
        '404':
          description: The project does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
        - Projects
      summary: Deletes a specific project.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: Records with identifiers to be deleted
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: The project was successfully deleted.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: The project does not exist.
  '/api/petreldms/v1/projects/{projectId}/versions/{versionId}':
    get:
      tags:
        - Projects
      summary: Gets a single version record of a project.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: The requested version identifier.
          required: true
          schema:
            type: string
        - name: attribute
          in: query
          description: >-
            Filter attributes to restrict the returned fields of the record.
            Usage: data.{record-data-field-name}.
          schema:
            type: string
      responses:
        '200':
          description: The project version was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OsduRecord'
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project or version
        '404':
          description: The project version does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/api/petreldms/v1/projects/{projectId}/download':
    get:
      tags:
        - Projects
      summary: Get download url of a specific project.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The project download response was successfully generated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDownloadResponse'
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
        '404':
          description: The project does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/api/petreldms/v1/projects/{projectId}/upload':
    post:
      tags:
        - Projects
      summary: Uploads a specific project.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The project upload response was successfully generated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUploadResponse'
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: The project does not exist.
  '/api/petreldms/v1/projects/{projectId}/update':
    put:
      tags:
        - Projects
      summary: Updates a specific project.
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
        - name: projectId
          in: path
          description: The requested project identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The requested update value and parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
        required: true
      responses:
        '201':
          description: The project was successfully updated.
        '400':
          description: The request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: You don't have permission to this project
        '404':
          description: The project does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /api/petreldms/v1/query:
    post:
      tags:
        - Query
      summary: Queries metadata using the input request criteria.
      description: "The API supports full text search on string fields, range queries on date, numeric or string fields, along with geo-spatial search. Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'. In addition, users must be a member of data groups to access the data. It can be used to retrieve large numbers of results (or even all results) from a single search request, in much the same way as you would use a cursor on a traditional database..\r\n             Sample request:\r\n            \r\n            {\r\n                \"kind\": \"slb:petrel:master-data--PetrelProjectExplorer:1.0.0\",\r\n                \"limit\": 10,\r\n                \"query\": \"id: \\\"opendes:master-data--PetrelProjectExplorer:3664b600-5f2c-4c6a-b2ae-74a1e584a837\\\"\",\r\n                \"returnedFields\": [],\r\n                \"queryAsOwner\": false,\r\n                \"cursor\": \"\"\r\n            }"
      parameters:
        - name: Data-Partition-Id
          in: header
          description: This value should be the desired data partition id.
          required: true
          schema:
            type: string
      requestBody:
        description: The query request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataQueryRequest'
      responses:
        '200':
          description: The successfully retrieved meta data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataQueryResponse'
        '400':
          description: Invalid parameters were given on request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '401':
          description: User is not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '403':
          description: User not authorized to perform the action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        errorId:
          type: string
          nullable: true
        correlationId:
          type: string
          nullable: true
        error:
          nullable: true
      additionalProperties: false
    FieldOperation:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        value:
          nullable: true
      additionalProperties: false
    MetadataQueryRequest:
      type: object
      properties:
        kind:
          type: string
          default: 'slb:petrel:master-data--PetrelProject:1.0.0'
          nullable: true
        limit:
          type: integer
          format: int32
          default: 25
        query:
          type: string
          nullable: true
        returnedFields:
          type: array
          items:
            type: string
          default: null
          nullable: true
        queryAsOwner:
          type: boolean
          default: false
        cursor:
          type: string
          default: null
          nullable: true
        sort:
          $ref: '#/components/schemas/SortQueryRequest'
      additionalProperties: false
    MetadataQueryResponse:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
        totalCount:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/OsduRecord'
          nullable: true
      additionalProperties: false
    OsduAcl:
      type: object
      properties:
        viewers:
          type: array
          items:
            type: string
          nullable: true
        owners:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OsduLegalTag:
      type: object
      properties:
        legaltags:
          type: array
          items:
            type: string
          nullable: true
        otherRelevantDataCountries:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OsduRecord:
      type: object
      properties:
        id:
          type: string
          default: ''
          nullable: true
        kind:
          type: string
          default: ''
          nullable: true
        acl:
          $ref: '#/components/schemas/OsduAcl'
        legal:
          $ref: '#/components/schemas/OsduLegalTag'
        data:
          default: null
          nullable: true
        meta:
          type: array
          items: {}
          nullable: true
        version:
          type: string
          default: ''
          nullable: true
        createTime:
          type: string
          default: ''
          nullable: true
        modifyTime:
          type: string
          default: ''
          nullable: true
        modifyUser:
          type: string
          default: ''
          nullable: true
        createUser:
          type: string
          default: ''
          nullable: true
      additionalProperties: false
    ProjectDownloadResponse:
      type: object
      properties:
        downloadUrl:
          type: string
          nullable: true
      additionalProperties: false
    ProjectPatchRequest:
      required:
        - fields
        - id
      type: object
      properties:
        id:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldOperation'
      additionalProperties: false
    ProjectUpdateRequest:
      type: object
      properties:
        signedUrl:
          type: string
          nullable: true
        records:
          type: array
          items:
            $ref: '#/components/schemas/OsduRecord'
          nullable: true
      additionalProperties: false
    ProjectUploadResponse:
      type: object
      properties:
        downloadUrl:
          type: string
          nullable: true
        uploadUrl:
          type: string
          nullable: true
      additionalProperties: false
    SortQueryRequest:
      type: object
      properties:
        field:
          type: array
          items:
            type: string
          nullable: true
        order:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    login:
      type: oauth2
      description: Put **_ONLY_** your JWT Bearer token on textbox below!
      flows:
        authorizationCode:
          authorizationUrl: 'https://p4d.csi.cloud.slb-ds.com/v2/auth'
          tokenUrl: 'https://p4d.csi.cloud.slb-ds.com/v2/token'
          scopes:
            openid: User information
            963f2cc6915e479fa0fcb73ec2ec90e7: OSDU Client ID
    manual:
      type: http
      description: Put **_ONLY_** your JWT Bearer token on textbox below!
      scheme: Bearer
      bearerFormat: JWT
security:
  - login: []
  - manual: []
