openapi: 3.0.0
info:
  title: Seismic DMS Service
  version: 3.0.0
  description: Seismic Data Management APIs to store and manage seismic datasets .
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /seistore-svc/api/v3
paths:
  /svcstatus:
    get:
      summary: Seismic store service status (fast check).
      description: '<ul><li>Return the seismic store service status.</li><li>Required roles: none</li></ul>'
      security:
        - bearer: []
      operationId: service-status
      tags:
        - General
      responses:
        '200':
          description: Service status.
          content:
            application/json:
              schema:
                type: string
                example: service OK
  /svcstatus/access:
    get:
      summary: Seismic store service access check.
      description: '<ul><li>Validates if the token audience is allowed</li><li>Required roles: none</li></ul>'
      operationId: service-status-check
      tags:
        - General
      responses:
        '200':
          description: User token audience is allowed by seismic store service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}:
    post:
      summary: Register a new dataset.
      description: '<ul><li>Register a new dataset in the seismic store.</li><li>Required roles: subproject.admin</li></ul>'
      operationId: dataset-register
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Legal tag of the dataset.
          in: header
          name: ltag
          required: false
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRegisterBody'
        description: Request body
      responses:
        '200':
          description: Registered dataset metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are:
            <li> WL (Write Locked). </li>
            <li> RL (Read Locked). </li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
    get:
      summary: Retrieve a dataset.
      description: '<ul> <li>Return the dataset metadata from seismic store.</li> <li>Required roles: <ul> <li>subproject.admin, subproject.viewer: if the applied subproject policy is ''uniform''</li> <li>dataset.admin, dataset.viewer: if the applied subproject policy is ''dataset''</li> </ul> </li></ul>'
      operationId: dataset-get
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Include the seismic storage metadata record if it exists.
          in: query
          name: seismicmeta
          required: false
          schema:
            type: boolean
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
        - description: Retrieve a specific version of the seismic storage metadata record
          in: query
          name: record-version
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Metadata of the dataset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    delete:
      summary: Delete a dataset.
      description: '<ul> <li>Delete a dataset in the seismic store.</li> <li>Required roles: <ul> <li>subproject.admin: if the applied subproject policy is ''uniform''</li> <li>dataset.admin: if the applied subproject policy is ''dataset''</li> </ul> </li></ul>'
      operationId: dataset-delete
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    patch:
      summary: Patch the dataset metadata.
      description: |
        <ul>
        <li>Update the dataset meta information in the seismic store or close (unlock) the dataset. If the endpoint is used without the close parameter, at least one body field is required or the endpoint will return an error.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li>
        <li>Patchable fields: <ul>
        <li><b>dataset_new_name:</b> new name to use for the dataset (rename).</li>
        <li><b>filemetadata:</b> This is a seismic store specific field and describes how the physical data is stored in the cloud storage system (GCS/AzureContainer etc.). This metadata is mainly used by client libraries to correctly reconstruct the dataset. For example you can store a dataset as truncated in multiple objects of 64MB each, name them from 0 to N and save the filemetadata = “{nObject: N, totalSize: 1024, objsize: 64, sizeUnit: MB}”.</li>
        <li><b>last_modified_date:</b> Mark this field as true to update the dataset last modified date.</li>
        <li><b>gtags:</b> Upsert tags to an existing dataset metadata. If the dataset metadata already has gtags, then new gtags are appended to this list.</li>
        <li><b>ltag:</b> Update the existing legalTag value.</b></li>
        <li><b>readonly:</b> Update the dataset mode to readonly (true) or to read/write (false).</li></ul></li></ul>
      operationId: dataset-patch
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Non null sbit value of the dataset. Using this value here will close the dataset.
          in: query
          name: close
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetPatch'
        description: Request body
      responses:
        '200':
          description: Metadata of the patched dataset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/lock:
    put:
      summary: Acquire a lock for a dataset id.
      description: |
        <ul>
          <li>Open a dataset for read or write and lock its state.</li>
          <li>Required roles open lock for write:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
          <li>Required roles open lock for read:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
        operationId: dataset-lock
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Type of the lock which can be set to 'read' (default) or 'write'.
          in: query
          name: openmode
          required: false
          schema:
            type: string
        - description: Session identifier issued for a previous write lock acquisition operation.
          in: query
          name: wid
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Acquired a lock and the return value is the dataset metadata with session identifier stored in the 'sbit' attribute.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '423':
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/unlock:
    put:
      summary: Remove the lock associated with a dataset id.
      description: |
        <ul>
          <li>Removes the lock for a dataset id.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: dataset-lock-rm
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path for the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Removed the lock value associated with dataset id.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '423':
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/permission:
    get:
      summary: Retrieve the access permissions of a user on a dataset id.
      description: |
        <ul>
          <li>Retrieve the access permission of a user on a dataset.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: dataset-permission
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path for the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User access permission on the dataset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetPermission'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/ctagcheck:
    get:
      summary: Validate if a dataset ctag matches the pre-existing ctag in metadata catalog.
      description: '<ul><li>Check if the provided dataset cTag match the one stored in the metadata catalog.</li><li>Required roles: subproject.admin, subproject.viewer</li></ul>'
      operationId: ctag-check
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Ctag to be validated.
          in: query
          name: ctag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return true if the ctag is valid or false if it is invalid.
          content:
            application/json:
              schema:
                type: boolean
                example: 'true'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/gtags:
    put:
      summary: Upsert tags to a dataset.
      description: |
        <ul>
          <li>Upsert tags to an existing dataset metadata. If the dataset metadata already has gtags, then  new gtags are appended to this list.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: add-tag
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Gtags array list.
          in: query
          name: gtag
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              default: tag1
      responses:
        '200':
          description: Gtags were upserted to the dataset metadata.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/size:
    post:
      summary: Compute and retrieve the size of a dataset and the date of when the size was computed
      description: |
        <ul>
        <li>Compute and retrieve the size of a dataset and the date of when the size was computed.</li>
        <li>Required roles: subproject.admin</li></ul>
      operationId: dataset-size
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Size of the dataset and the date of when the size was computed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSize'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/readdsdirfulllist:
    get:
      summary: Content list.
      description: |
        <ul>
        <li>List datasets and sub-directories for a directory path.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-read-directory
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: The tenant project name.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: The sub-project name.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: The hierarchy path.
          in: query
          name: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of datasets and directories in the requested directory path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetAndDirectories'
  /dataset/tenant/{tenantid}/subproject/{subprojectid}:
    get:
      summary: Get the list of datasets in a subproject.
      description: |
        <ul>
          <li>Return the list of datasets in a sub-project. The list can be filtered by gtags. Support pagination.</li>
          <li>Required roles: subproject.admin, subproject.viewer</li>
        </ul>
      operationId: dataset-list
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Gtags associated with dataset metadata.
          in: query
          name: gtag
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Limit the number of datasets in the response
          in: query
          name: limit
          schema:
            type: string
        - description: Cursor for pagination on the datasets list
          in: query
          name: cursor
          schema:
            type: string
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
      responses:
        '200':
          description: Paginated dataset list with nextPageCursor. If the request does not provide limit or cursor the results will be the whole path conent and the response is a plain array of datasets [ {dataset1}, {datase2}, ... ]
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasets'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    post:
      summary: Get the list of datasets in a subproject.
      description: |
        <ul>
          <li>Return the list of datasets in a sub-project. The list can be filtered by gtags. Support pagination.</li>
          <li>Required roles: subproject.admin, subproject.viewer</li>
        </ul>
      operationId: dataset-list-post
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetListBody'
        description: Request body
      responses:
        '200':
          description: Paginated dataset list with nextPageCursor. If the request does not provide limit or cursor the results will be the whole path conent and the response is a plain array of datasets [ {dataset1}, {datase2}, ... ]
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasets'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/exist:
    post:
      summary: Check to see if a list of datasets exists in the subproject.
      description: |
        <ul>
        <li>Check if the dataset exists.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-exist
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DatasetCheckList'
      responses:
        '200':
          description: A list of Boolean values for all the input datasets in the request body. If a value is true, then the corresponding dataset exists and if it is false, then the dataset does not exist.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: boolean
                example:
                  - true
                  - false
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/sizes:
    post:
      summary: Retrieve the size of datasets.
      description: |
        <ul>
        <li>Return a list with the sizes of the requested datasets.</li>
        <li>The correctness is not guarantee since this API returns sizes stored by the user in the dataset manifest.</li>
        <li>This API is deprecated, please using /size endpoint to compute and retrieve the size information</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-sizes
      tags:
        - Dataset(Deprecated)
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Name of the tenant
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DatasetCheckList'
      responses:
        '200':
          description: The list of sizes of all the datasets. If the dataset does not exist, the size returns -1.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
                example:
                  - 1024
                  - -1
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /utility/ls:
    get:
      summary: Retrieve the list of datasets and sub-directories inside a seismic store path.
      description: |
        <ul>
        <li>Return the list of datasets and sub-directories of a seismic store path.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: ls
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Seismic store path, sd://tenant/sub-project/path.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
        - description: Working mode, directories or datasets or undefined for both.
          in: query
          name: wmode
          required: false
          schema:
            type: string
        - description: Limits the total number of datasets to return.
          in: query
          name: limit
          required: false
          schema:
            type: number
        - description: Pagination token - this query parameter can be omitted on first call.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Seismic store path content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LsDatasets'
        '201':
          description: Paginated seismic store path content - For documentation purposes, if limit or cursor is given, status code here is 200.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LsPaginatedDatasets'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /utility/storage-tiers:
    get:
      summary: Retrieve the list of supported storage tiers
      description: <ul><li>Return the list of storage tiers</ul>
      operationId: storage-tiers
      tags:
        - Utility
      responses:
        '200':
          description: Supported storage tiers
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /utility/cp:
    post:
      summary: Copy dataset.
      description: |
        <ul>
        <li>Copy a seismic store dataset. The source and destination dataset must be in the same sub-project.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li>
        </ul>
      operationId: cp
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Seismic store source dataset path.
          in: query
          name: sdpath_from
          required: true
          schema:
            type: string
        - description: Seismic store destination dataset path.
          in: query
          name: sdpath_to
          required: true
          schema:
            type: string
        - description: Lock source and destination while copying.
          in: query
          name: lock
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Copy operation succeeded.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked)</li>
            <li>RL (Read Locked)</li>
            <li>CL (Cannot be Locked)</li>
            <li>UL (Cannot be Unlocked)</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
  /utility/gcs-access-token:
    get:
      summary: Generate a GCS access token.
      description: |
        <ul>
          <li>Generate a GCS access token for a specified seismic store resource. The source and destination dataset must be in the same sub-project.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: gcs-access-token
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Seismic store path in the format sd://tenant/sub-project.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://common/carbon
        - description: Readonly access, true(default) or false.
          in: query
          name: readonly
          schema:
            type: boolean
      responses:
        '200':
          description: The GCS access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /utility/upload-connection-string:
    get:
      summary: Generate the upload connection credentials string
      description: '<ul> <li>Generate the upload connection credential string for a subproject collection or a dataset, depending of the applied access policy (uniform/dataset). <li>These credentials can be used via CSP SDK, on client side, to perform bulk upload.</li> <li> The endpoint response is CSP (Cloud Solution Provider) dependent: <ul> <br/><li><b>Azure</b>: shared access signature (SaS) Url token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''SasUrl'' <br/>} <br/><br/></li> <li><b>Google</b>: standard access token credential signed and down-scoped by google <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''google_signed_access_token'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3600 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> <li><b>AWS</b>: double column separated string containing access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> <li><b>IBM</b>: double column separated string containing access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 7200 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> </ul> </li> <li>Required roles: <ul> <li>subproject.admin: if the applied subproject policy is ''uniform''</li> <li>dataset.admin: if the applied subproject policy is ''dataset''</li> </ul> </li> </ul>'
      operationId: upload-connection-string
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Seismic store path in the format sd://tenant/subproject (for uniform applied policies) or sd://tenant/subproject/dataset (for dataset applied policies)
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://opendes/sandbox
      responses:
        '200':
          description: The upload connection credential string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /utility/download-connection-string:
    get:
      summary: Generate the download connection credentials string
      description: '<ul> <li>Generate the download connection credential string for a subproject collection or a dataset, depending of the applied access policy (uniform/dataset). <li>These credentials can be used via CSP SDK, on client side, to perform bulk download.</li> <li> The endpoint response is CSP (Cloud Solution Provider) dependent: <ul> <br/><li><b>Azure</b>: shared access signature (SaS) Url token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''SasUrl'' <br/>} <br/><br/></li> <li><b>Google</b>: standard access token credential signed and down-scoped by google <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''google_signed_access_token'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3600 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> <li><b>AWS</b>: double column separated string containing access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> <li><b>IBM</b>: double column separated string containing access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 7200 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>} <br/><br/></li> </ul> </li> <li>Required roles: <ul> <li>subproject.admin, subproject.viewer: if the applied subproject policy is ''uniform''</li> <li>dataset.admin, dataset.viewer: if the applied subproject policy is ''dataset''</li> </ul> </li> </ul>'
      operationId: download-connection-string
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ''
        - description: Seismic store path in the format sd://tenant/subproject (for uniform applied policies) or sd://tenant/subproject/dataset (for dataset applied policies)
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://opendes/sandbox
      responses:
        '200':
          description: The download connection credential string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /imptoken:
    post:
      summary: Generate impersonation credentials token.
      description: |
        <ul>
        <li>Generate an impersonation credential token of a user for a set of subproject resources.</li>
        <li>Required roles: app.trusted</li></ul>
      operationId: imp-token
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpTokenRequest'
        description: Request body
        required: true
      responses:
        '200':
          description: Generated a impersonation credentials token successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    put:
      summary: Refresh an impersonation credential token.
      description: '<ul><li>Refresh an impersonation credential token.</li><li>Required roles: none</li></ul>'
      security:
        - bearer: []
      operationId: imp-token-refresh
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        description: Request body
        required: true
      responses:
        '200':
          description: Refreshed impersonation credential token successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    patch:
      summary: Patch an impersonation credential token's refresh url and generate a new impersonation token.
      description: |
        <ul>
        <li>Patch an impersonation credential token's refresh url and generate a new impersonation token.</li>
        <li>Required roles: none</li></ul>
      operationId: imp-token-patch
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpTokenPatchRequest'
        description: Request body
        required: true
      responses:
        '200':
          description: Generated impersonation token successfully and its refresh url is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /impersonation-token:
    post:
      summary: Create an impersonation token credential.
      description: '<ul><li>Generate a credential token to impersonate user access for a set of subproject resources.</li><li>Required roles: app.trusted</li></ul>'
      operationId: impersonation-token-generate
      tags:
        - Impersonation Token
      parameters:
        - description: The credential of the user to impersonate.
          in: header
          name: user-token
          required: true
          schema:
            type: string
            default: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationTokenRequest'
        description: Request body.
        required: true
      responses:
        '200':
          description: The impersonation token has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    put:
      summary: Refresh the impersonation credential token.
      description: '<ul><li>Refresh an impersonation credential token.</li><li>Required roles: app.trusted</li></ul>'
      operationId: impersonation-token-refresh
      tags:
        - Impersonation Token
      parameters:
        - description: The impersonation token to refresh.
          in: header
          name: impersonation-token
          required: true
          schema:
            type: string
            default: ''
        - description: The impersonation token context.
          in: header
          name: impersonation-token-context
          required: true
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Refreshed impersonation credential token successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /subproject/tenant/{tenantid}/subproject/{subprojectid}:
    post:
      summary: Create a new subproject.
      description: |
        <ul>
        <li>Creates a new subproject resource in seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: subproject-create
      tags:
        - SubProject
      parameters:
        - description: A valid compliance legal tag. It can be generated and managed via core-compliance-service.
          in: header
          name: ltag
          schema:
            type: string
        - description: The subproject name. It must match the regex <b>^[a-z][a-z\d\-]*[a-z\d]$</b>
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: The tenant name - In OSDU this match the data-partition-id
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubProjectCreateBody'
        description: Request body
        required: true
      responses:
        '200':
          description: The registered subproject.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
    get:
      summary: Retrieve the subproject metadata.
      description: '<ul><li>Return the metadata for a requested sub-project.</li><li>Required roles: subproject.admin</li></ul>'
      operationId: subproject-get
      tags:
        - SubProject
      parameters:
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
      responses:
        '200':
          description: Retrieved subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    delete:
      summary: Delete a subproject.
      description: '<ul><li>Delete a subproject in seismic store.</li><li>Required roles: users.datalake.admin</li></ul>'
      operationId: subproject-delete
      tags:
        - SubProject
      parameters:
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion of the subproject completed.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    patch:
      summary: Patch a subproject's metadata.
      description: |
        <ul>
          <li>Patch a subproject metadata in seismic store.</li>
          <li>Required roles: subproject.admin</li>
          <li>Possible actions:</li>
          <ul>
            <li>legal tag and/or ACLs groups can be patched by providing new values</li>
            <li>access policy can be changed from <i>uniform</i> to <i>dataset</i></li>
            <li><b>NOTE:</b> It is not possible to change subproject access policy from <i>dataset</i> to <i>uniform</i></li>
            <li><b>NOTE:</b> This operation is eventual consistent and it can take up to 5s before it gets completely applied</li>
          </ul>
        </ul>
      operationId: subproject-patch
      tags:
        - SubProject
      parameters:
        - description: Legal tag of the subproject.
          in: header
          name: ltag
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: True if the legal tags of all datasets in a subproject needs to be updated.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubProjectPatchBody'
        description: Request body
      responses:
        '200':
          description: Updated subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /subproject/tenant/{tenantid}:
    get:
      summary: List subprojects in a tenant.
      description: '<ul><li>Return the list of sub-projects in a tenant.</li><li>Required roles: users.datalake.admin</li></ul>'
      operationId: sub-project-list
      tags:
        - SubProject
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved the list of subprojects in the tenant successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubProject'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /tenant/{tenantid}:
    post:
      summary: Register a seismic-dms tenant.
      description: '<ul><li>Register a data partition in seismic-dms.</li><li>Required roles: users.datalake.admin</li></ul>'
      operationId: tenant-create
      tags:
        - Tenant
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreateBody'
        description: Request body
        required: true
      responses:
        '200':
          description: Creation of the tenant was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
    get:
      summary: Retrieve the tenant metadata.
      description: '<ul><li>Return the tenant metadata.</li><li>Required roles: seistore.system.admin</li></ul>'
      operationId: tenant-get
      tags:
        - Tenant
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /tenant/sdpath:
    get:
      summary: Retrieve the tenant seismic store path.
      description: '<ul><li>Return the seistore path to a tenant associated with the data partition.</li><li>Required roles: none</li></ul>'
      operationId: tenant-sdpath
      tags:
        - Tenant (Obsolete)
      parameters:
        - description: Datapartition of the tenant.
          in: query
          name: datapartition
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Seismic store path to the tenant retrieved successfully.
          content:
            application/json:
              schema:
                type: string
                example: sd://tenant01
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /user:
    put:
      summary: Add a user to a seismic store subproject authorization group.
      description: '<ul><li>Add a user to a subproject default authorization group if it exists, otherwise, add the user to the first group.</li><li>Required roles: subproject.admin</li></ul>'
      operationId: user-add
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddRequest'
        description: Request body
        required: true
      responses:
        '200':
          description: User was successfully added to a sub-project authorization group.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    get:
      summary: List users in a subproject's role-based authorization groups.
      description: '<ul><li>List users in subproject''s role-based authorization groups.</li><li>Required roles: subproject.admin</li></ul>'
      operationId: user-list
      tags:
        - Users
      parameters:
        - description: Seismic store path, sd://tenant/sub-project.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved sub-project users in admin, viewer, and editor groups successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
                  example:
                    - userA@email
                    - admin
                example:
                  - - userA@email
                    - admin
                  - - userB@email
                    - editor
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    delete:
      summary: Remove a user from a subproject.
      description: '<ul><li>Remove a user from subproject default authorization groups if exists, otherwise, remove it from the first authorization group.</li><li>Required roles: subproject.admin</li></ul>'
      operationId: user-rm
      tags:
        - Users
      parameters:
        - name: email
          in: query
          description: Email of the user to remove.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: Path of the subproject.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion of user from a subproject.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /user/roles:
    get:
      summary: Retrieve user role in all subprojects of the tenant.
      description: '<ul><li>Retrieve user role in all subprojects of the tenant.</li><li>Required roles: none/li></ul>'
      operationId: user-roles
      tags:
        - Users
      parameters:
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved user roles in all subprojects of the tenant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoles'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /app:
    post:
      summary: Register a new application.
      description: '<ul><li>Register a new application in the seismic store.</li><li>Required roles: users.datalake.admin</li></ul>'
      operationId: app-register
      tags:
        - Apps
      parameters:
        - description: Service account email of the application.
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Registration of the application was successful.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    get:
      summary: Retrieve the list of registered applications.
      description: |
        <ul>
        <li>Retrieve the list of the registered applications in the seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: app-list
      tags:
        - Apps
      parameters:
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://common
      responses:
        '200':
          description: Retrieved a list of all the registered applications successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - app01@email
                  - app02@email
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  /app/trusted:
    post:
      summary: Set a registered application as a trusted application.
      description: |
        <ul>
        <li>Set a registered application as a trusted application in the seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: trustedapp-register
      tags:
        - Apps
      parameters:
        - description: Service account email of the application.
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Marking the application as a trusted application was successful.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
    get:
      summary: List the trusted applications in a seismic store tenant.
      description: |
        <ul>
        <li>Return the list of the trusted application in seismic store tenant.
        </li><li>Required roles: users.datalake.admin</li></ul>
      operationId: trustedapp-list
      tags:
        - Apps
      parameters:
        - description: Seismic store tenant path in the format sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved the list of all the trusted applications in the tenant.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - app01@email
                  - app02@email
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
security:
  - bearer: []
components:
  requestBodies:
    DatasetCheckList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatasetCheckList'
      description: Request body
      required: true
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Status:
      required:
        - status
      properties:
        status:
          type: string
      example:
        status: running
    DatasetListBody:
      type: object
      properties:
        type:
          type: string
        gtags:
          type: array
          items:
            type: string
          description: Array of global tags associated with the dataset metadata. Once assigned, they can be used to filter datasets.
        limit:
          type: number
          description: the max limit of datasets in the response
        cursor:
          type: string
          description: the cursor value required to retrieve the next page of result
      example:
        gtags:
          - tagA
          - tagB
        limit: 10
        cursor: next-page-token-931fvm19vm1-vm1v1
    DatasetRegisterBody:
      type: object
      properties:
        type:
          type: string
        gtags:
          type: array
          description: Array of global tags associated with the dataset metadata. Once assigned, they can be used to filter datasets.
          items:
            type: string
        seismicmeta:
          type: object
          properties:
            kind:
              type: string
            data:
              type: object
              properties: {}
          description: Seismic metadata to be stored as dataecosystem storage record.
        openzgy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          title: FileCollection.Slb.OpenZGY
          description: The dataset representation for optimized seismic access to the OpenZGY framework developed by Schlumberger, storing seismic 3D data for seismic interpretation.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties: {}
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-supported-file-formats:
            - OpenZGY
          x-osdu-governance-authorities:
            - Schlumberger
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
        segy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          title: FileCollection.SEGY
          description: A generic representation for  SEGY dataset represented as set of files, e.g. representing original tape reels.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
                  title: AbstractVectorHeaderMapping
                  description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                  type: object
                  properties:
                    VectorHeaderMapping:
                      type: array
                      description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                      items:
                        type: object
                        description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                        properties:
                          KeyName:
                            type: string
                            title: Key Name
                            description: Relationship to a reference value for a name of a property header such as INLINE, CDPX.
                            pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: HeaderKeyName
                          WordFormat:
                            type: string
                            title: Word Format
                            description: Relationship to a reference value for binary data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII, EBCDIC.
                            pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: WordFormatType
                          WordWidth:
                            type: integer
                            title: Word Width
                            description: Size of the word in bytes.
                          Position:
                            type: integer
                            description: Beginning byte position of header value, 1 indexed.
                          UoM:
                            type: string
                            title: Unit of Measure
                            description: Relationship to units of measure reference if header standard is not followed.
                            pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: UnitOfMeasure
                          ScalarIndicator:
                            type: string
                            title: Scalar Indicator
                            description: Enumerated string indicating whether to use the normal scalar field for scaling this field (STANDARD), no scaling (NOSCALE), or override scalar (OVERRIDE).  Default is current STANDARD (such as SEG-Y rev2).
                            enum:
                              - STANDARD
                              - NOSCALE
                              - OVERRIDE
                          ScalarOverride:
                            type: number
                            title: Scalar Override
                            description: Scalar value (as defined by standard) when a value present in the header needs to be overwritten for this value.
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties:
                    SEGYRevision:
                      type: string
                      title: SEG-Y Revision
                      description: The SEG-Y standard revision the SEG-Y file set is conforming to.
                      example: rev 0
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
        acls:
          type: object
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
          description: ACLs with admin groups and viewer groups for the dataset.
      example:
        gtags:
          - tagA
          - tagB
          - tagC
        seismicmeta:
          kind: osdu:sdms:seismic3d:1.0.0
          legal:
            legaltags:
              - legal-tag
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          data:
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            ExtensionProperties: {}
          meta: []
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          version: 1637208623527796
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          acl:
            viewers:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            owners:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          legal:
            legaltags:
              - opendes-seistore-test-01
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createUser: vmanohar@slb.com
          createTime: '2021-11-16T02:08:16.420Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          modifyTime: '2021-11-18T04:10:23.817Z'
        segy_v1:
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          version: 1562066009929332
          acl:
            owners:
              - someone@company.com
            viewers:
              - someone@company.com
          legal:
            legaltags:
              - Example legaltags
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          ancestry:
            parents: []
          meta: []
          data:
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            VectorHeaderMapping:
              - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
                WordFormat: 'namespace:reference-data--WordFormatType:INT:'
                WordWidth: 2
                Position: 2
                UoM: 'namespace:reference-data--UnitOfMeasure:m:'
                ScalarIndicator: STANDARD
                ScalarOverride: 12345.6
            SEGYRevision: rev 0
            ExtensionProperties: {}
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    Dataset:
      required:
        - name
        - tenant
        - subproject
        - path
        - created_by
        - created_date
        - last_modified_date
        - gcsurl
        - ctag
      properties:
        name:
          type: string
          description: Name of the dataset.
        tenant:
          type: string
          description: Name of the tenant.
        subproject:
          type: string
          description: Name of the subproject.
        path:
          type: string
          description: Path to the dataset inside a subproject.
        created_by:
          type: string
          description: Creator of the dataset.
        created_date:
          type: string
          description: Date when the dataset was created.
        last_modified_date:
          type: string
          description: Date when the dataset was last modified.
        filemetadata:
          type: object
          description: Number of objects and the size in bytes of the dataset.
        metadata:
          type: object
          description: Generic information stored as key,value pairs for the dataset.
        gcsurl:
          type: string
          description: Cloud storage object identifier.
        readonly:
          type: boolean
          description: True if the dataset is readonly.
        ltag:
          type: string
          description: Legal tag associated with the dataset.
        ctag:
          type: string
          description: The coherency tag associated with the dataset. (It changes every time the dataset is updated.)
        seismicmeta_guid:
          type: string
          description: Seismic storage record identifier.
        sbit:
          type: string
          description: The session lockID.
        sbit_count:
          type: number
          description: The number of sessions associated to the dataset.
        seismicmeta:
          type: object
          description: Seismic metadata associated with the dataset which is used to create a data ecosystem storage record.
          properties:
            kind:
              type: string
            data:
              type: object
        openzgy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          title: FileCollection.Slb.OpenZGY
          description: The dataset representation for optimized seismic access to the OpenZGY framework developed by Schlumberger, storing seismic 3D data for seismic interpretation.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties: {}
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-supported-file-formats:
            - OpenZGY
          x-osdu-governance-authorities:
            - Schlumberger
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
        segy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          title: FileCollection.SEGY
          description: A generic representation for  SEGY dataset represented as set of files, e.g. representing original tape reels.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
                  title: AbstractVectorHeaderMapping
                  description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                  type: object
                  properties:
                    VectorHeaderMapping:
                      type: array
                      description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                      items:
                        type: object
                        description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                        properties:
                          KeyName:
                            type: string
                            title: Key Name
                            description: Relationship to a reference value for a name of a property header such as INLINE, CDPX.
                            pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: HeaderKeyName
                          WordFormat:
                            type: string
                            title: Word Format
                            description: Relationship to a reference value for binary data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII, EBCDIC.
                            pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: WordFormatType
                          WordWidth:
                            type: integer
                            title: Word Width
                            description: Size of the word in bytes.
                          Position:
                            type: integer
                            description: Beginning byte position of header value, 1 indexed.
                          UoM:
                            type: string
                            title: Unit of Measure
                            description: Relationship to units of measure reference if header standard is not followed.
                            pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: UnitOfMeasure
                          ScalarIndicator:
                            type: string
                            title: Scalar Indicator
                            description: Enumerated string indicating whether to use the normal scalar field for scaling this field (STANDARD), no scaling (NOSCALE), or override scalar (OVERRIDE).  Default is current STANDARD (such as SEG-Y rev2).
                            enum:
                              - STANDARD
                              - NOSCALE
                              - OVERRIDE
                          ScalarOverride:
                            type: number
                            title: Scalar Override
                            description: Scalar value (as defined by standard) when a value present in the header needs to be overwritten for this value.
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties:
                    SEGYRevision:
                      type: string
                      title: SEG-Y Revision
                      description: The SEG-Y standard revision the SEG-Y file set is conforming to.
                      example: rev 0
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
      example:
        name: dsx01
        tenant: geosolution
        subproject: spx01
        path: /a/b/c
        created_by: user@gtest.com
        created_date: Thu Jul 16 2020 04:30:41 GMT+0000 (Coordinated Universal Time)
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal Time)
        metadata:
          k1: v1
          k2: v2
          k3:
            k4: v4
        gcsurl: gs://sd_geosolution_spx01/12341234
        type: segy
        readonly: false
        filemetadata:
          size: 10737418240
          type: GENERIC
          nobjects: 160
        ltag: legal-tag
        ctag: 1234567890abcdefg
        seismicmeta_guid: slb:seismic:1234abcd5678efgh
        sbit: Wx53vrogk0gr4ao
        sbit_count: 1
        seismicmeta:
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
              - legal-tag
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          data:
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            ExtensionProperties: {}
          meta: []
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          version: 1637208623527796
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          acl:
            viewers:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            owners:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          legal:
            legaltags:
              - opendes-seistore-test-01
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createUser: vmanohar@slb.com
          createTime: '2021-11-16T02:08:16.420Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          modifyTime: '2021-11-18T04:10:23.817Z'
        segy_v1:
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          version: 1562066009929332
          acl:
            owners:
              - someone@company.com
            viewers:
              - someone@company.com
          legal:
            legaltags:
              - Example legaltags
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          ancestry:
            parents: []
          meta: []
          data:
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            VectorHeaderMapping:
              - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
                WordFormat: 'namespace:reference-data--WordFormatType:INT:'
                WordWidth: 2
                Position: 2
                UoM: 'namespace:reference-data--UnitOfMeasure:m:'
                ScalarIndicator: STANDARD
                ScalarOverride: 12345.6
            SEGYRevision: rev 0
            ExtensionProperties: {}
    DatasetPatch:
      properties:
        dataset_new_name:
          type: string
          description: New name for the dataset.
        metadata:
          type: object
          description: Generic information about the dataset stored as key value pairs.
        filemetadata:
          type: object
          description: Number of objects and the size in bytes of the dataset.
        last_modified_date:
          type: string
          description: Date when the dataset was last modified.
        gtags:
          type: array
          description: Array of tags associated with the dataset. After patching these tags, they can be used to filter the datasets.
          items:
            type: string
          default: []
        ltag:
          type: string
          description: Legal tag associated with the dataset.
        readonly:
          type: boolean
          description: True if the dataset is read only.
        seismicmeta:
          type: object
          description: Seismic metadata associated with the dataset which is used to create a data ecosystem storage record.
          properties:
            kind:
              type: string
            data:
              type: object
        openzgy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          title: FileCollection.Slb.OpenZGY
          description: The dataset representation for optimized seismic access to the OpenZGY framework developed by Schlumberger, storing seismic 3D data for seismic interpretation.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties: {}
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-supported-file-formats:
            - OpenZGY
          x-osdu-governance-authorities:
            - Schlumberger
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
        segy_v1:
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          title: FileCollection.SEGY
          description: A generic representation for  SEGY dataset represented as set of files, e.g. representing original tape reels.
          type: object
          properties:
            id:
              description: Previously called ResourceID or SRN which identifies this OSDU resource object without version.
              title: Entity ID
              type: string
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
            kind:
              description: The schema identification for the OSDU resource object following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}. The versioning scheme follows the semantic versioning, https://semver.org/.
              title: Entity Kind
              type: string
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
            version:
              description: The version number of this OSDU resource; set by the framework.
              title: Version Number
              type: integer
              format: int64
              example: 1562066009929332
            acl:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
              title: Access Control List
              description: The access control tags associated with this entity. This structure is included by the SystemProperties "acl", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                owners:
                  title: List of Owners
                  description: The list of owners of this data record formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                viewers:
                  title: List of Viewers
                  description: The list of viewers to which this data record is accessible/visible/discoverable formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  type: array
                  items:
                    type: string
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
              required:
                - owners
                - viewers
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            legal:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
              title: Legal Meta Data
              description: Legal meta data like legal tags, relevant other countries, legal status. This structure is included by the SystemProperties "legal", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                legaltags:
                  title: Legal Tags
                  description: The list of legal tags, which resolve to legal properties (like country of origin, export classification code, etc.) and rules with the help of the Compliance Service.
                  type: array
                  items:
                    type: string
                otherRelevantDataCountries:
                  title: Other Relevant Data Countries
                  description: The list of other relevant data countries as an array of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  type: array
                  items:
                    type: string
                    pattern: ^[A-Z]{2}$
                status:
                  title: Legal Status
                  description: The legal status. Set by the system after evaluation against the compliance rules associated with the "legaltags" using the Compliance Service.
                  type: string
                  pattern: ^(compliant|uncompliant)$
              required:
                - legaltags
                - otherRelevantDataCountries
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            tags:
              title: Tag Dictionary
              description: A generic dictionary of string keys mapping to string value. Only strings are permitted as keys and values.
              type: object
              additionalProperties:
                type: string
              example:
                NameOfKey: String value
            createTime:
              description: Timestamp of the time at which initial version of this OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:46:20.163Z'
            createUser:
              title: Resource Object Creation User Reference
              description: The user reference, which created the first version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU resource object was created. Set by the System. The value is a combined date-time string in ISO-8601 given in UTC.
              title: Resource Object Version Creation DateTime
              type: string
              format: date-time
              example: '2020-12-16T11:52:24.477Z'
            modifyUser:
              title: Resource Object Version Creation User Reference
              description: The user reference, which created this version of this resource object. Set by the System.
              type: string
              example: some-user@some-company-cloud.com
            ancestry:
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
              title: Parent List
              description: A list of entity IDs in the data ecosystem, which act as legal parents to the current entity. This structure is included by the SystemProperties "ancestry", which is part of all OSDU records. Not extensible.
              type: object
              properties:
                parents:
                  description: 'An array of none, one or many entity references in the data ecosystem, which identify the source of data in the legal sense. In contract to other relationships, the source record version is required. Example: the ''parents'' will be queried when e.g. the subscription of source data services is terminated; access to the derivatives is also terminated.'
                  items:
                    type: string
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    x-osdu-relationship: []
                  example: []
                  title: Parents
                  type: array
              additionalProperties: false
              x-osdu-inheriting-from-kind: []
            meta:
              description: The Frame of Reference meta data section linking the named properties to self-contained definitions.
              title: Frame of Reference Meta Data
              type: array
              items:
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
                title: Frame of Reference Meta Data Item
                description: A meta data item, which allows the association of named properties or property values to a Unit/Measurement/CRS/Azimuth/Time context.
                oneOf:
                  - title: FrameOfReferenceUOM
                    type: object
                    properties:
                      kind:
                        title: UOM Reference Kind
                        description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                        enum:
                          - Unit
                      name:
                        title: UOM Unit Symbol
                        description: The unit symbol or name of the unit.
                        type: string
                        example: ft[US]
                      persistableReference:
                        title: UOM Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the Unit.
                        type: string
                        example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      unitOfMeasureID:
                        description: SRN to unit of measure reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: UnitOfMeasure
                      propertyNames:
                        title: UOM Property Names
                        description: The list of property names, to which this meta data item provides Unit context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - HorizontalDeflection.EastWest
                          - HorizontalDeflection.NorthSouth
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceCRS
                    type: object
                    properties:
                      kind:
                        title: CRS Reference Kind
                        description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                        enum:
                          - CRS
                      name:
                        title: CRS Name
                        description: The name of the CRS.
                        type: string
                        example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      persistableReference:
                        title: CRS Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying the CRS.
                        type: string
                        example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      coordinateReferenceSystemID:
                        description: SRN to CRS reference.
                        type: string
                        pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                        example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: CoordinateReferenceSystem
                      propertyNames:
                        title: CRS Property Names
                        description: The list of property names, to which this meta data item provides CRS context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - KickOffPosition.X
                          - KickOffPosition.Y
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceDateTime
                    type: object
                    properties:
                      kind:
                        title: DateTime Reference Kind
                        description: The kind of reference, constant 'DateTime', for FrameOfReferenceDateTime.
                        enum:
                          - DateTime
                      name:
                        title: DateTime Name
                        description: The name of the DateTime format and reference.
                        type: string
                        example: UTC
                      persistableReference:
                        title: DateTime Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying DateTime reference.
                        type: string
                        example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      propertyNames:
                        title: DateTime Property Names
                        description: The list of property names, to which this meta data item provides DateTime context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Acquisition.StartTime
                          - Acquisition.EndTime
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                  - title: FrameOfReferenceAzimuthReference
                    type: object
                    properties:
                      kind:
                        title: AzimuthReference Reference Kind
                        description: The kind of reference, constant 'AzimuthReference', for FrameOfReferenceAzimuthReference.
                        enum:
                          - AzimuthReference
                      name:
                        title: AzimuthReference Name
                        description: The name of the CRS or the symbol/name of the unit.
                        type: string
                        example: TrueNorth
                      persistableReference:
                        title: AzimuthReference Persistable Reference
                        description: The self-contained, persistable reference string uniquely identifying AzimuthReference.
                        type: string
                        example: '{"code":"TrueNorth","type":"AZR"}'
                      propertyNames:
                        title: AzimuthReference Property Names
                        description: The list of property names, to which this meta data item provides AzimuthReference context to. Data structures, which come in a single frame of reference, can register the property name, others require a full path like "Data.StructureA.PropertyB" to define a unique context.
                        type: array
                        example:
                          - Bearing
                        items:
                          type: string
                    required:
                      - kind
                      - persistableReference
                x-osdu-inheriting-from-kind: []
            data:
              allOf:
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
                  title: OSDU Common Resources
                  description: Common resources to be injected at root 'data' level for every entity, which is persistable in Storage. The insertion is performed by the OsduSchemaComposer script.
                  type: object
                  properties:
                    ResourceHomeRegionID:
                      description: The name of the home [cloud environment] region for this OSDU resource object.
                      title: Resource Home Region ID
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: OSDURegion
                    ResourceHostRegionIDs:
                      description: The name of the host [cloud environment] region(s) for this OSDU resource object.
                      title: Resource Host Region ID
                      type: array
                      items:
                        type: string
                        pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                        x-osdu-relationship:
                          - GroupType: reference-data
                            EntityType: OSDURegion
                    ResourceCurationStatus:
                      description: Describes the current Curation status.
                      title: Resource Curation Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceCurationStatus
                    ResourceLifecycleStatus:
                      description: Describes the current Resource Lifecycle status.
                      title: Resource Lifecycle Status
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceLifecycleStatus
                    ResourceSecurityClassification:
                      description: Classifies the security level of the resource.
                      title: Resource Security Classification
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ResourceSecurityClassification
                    Source:
                      description: The entity that produced the record, or from which it is received; could be an organization, agency, system, internal team, or individual. For informational purposes only, the list of sources is not governed.
                      title: Data Source
                      type: string
                    ExistenceKind:
                      description: Where does this data resource sit in the cradle-to-grave span of its existence?
                      title: Existence Kind
                      type: string
                      pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: ExistenceKind
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
                  title: AbstractDataset
                  description: Schema fragment holding properties common for all datasets.
                  type: object
                  properties:
                    Name:
                      type: string
                      title: Name
                      description: An optional name of the dataset, e.g. a user friendly file or file collection name.
                      example: Dataset X221/15
                    Description:
                      type: string
                      title: Description
                      description: An optional, textual description of the dataset.
                      example: As originally delivered by ACME.com.
                    TotalSize:
                      type: string
                      title: Total Size
                      description: Total size of the dataset in bytes; for files it is the same as declared in FileSourceInfo.FileSize or the sum of all individual files. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                      pattern: '[0-9]+'
                      example: 13245217273
                    EncodingFormatTypeID:
                      type: string
                      title: Encoding Format Type ID
                      description: EncodingFormatType ID reference value relationship. It can be a mime-type or media-type.
                      example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                      pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: EncodingFormatType
                    SchemaFormatTypeID:
                      type: string
                      title: Schema Format Type ID
                      description: Relationship to the SchemaFormatType reference value.
                      example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                      pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                      x-osdu-relationship:
                        - GroupType: reference-data
                          EntityType: SchemaFormatType
                    Endian:
                      type: string
                      description: 'Endianness of binary value.  Enumeration: "BIG", "LITTLE".  If absent, applications will need to interpret from context indicators.'
                      enum:
                        - BIG
                        - LITTLE
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: Placeholder for a specialization.
                      example: {}
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
                  title: AbstractFileCollection
                  description: The schema fragment representing file collections.
                  type: object
                  properties:
                    DatasetProperties:
                      type: object
                      title: Dataset Properties
                      description: The dataset properties for a file collection.
                      properties:
                        FileCollectionPath:
                          type: string
                          title: File Collection Path
                          description: The mandatory path to the file collection. A FileCollectionPath should represent folder level access to a set of files.
                          example: s3://default_bucket/opendes/data/vds-dataset/
                        IndexFilePath:
                          type: string
                          title: Index File Path
                          description: An optional path to an index file.
                          example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        FileSourceInfos:
                          type: array
                          title: File Source Info Array
                          description: Array of file collection members as FileSourceInfo.
                          example:
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                              Name: vds-file-1
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                              ChecksumAlgorithm: MD5
                            - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                              PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                              Name: vds-file-2
                              PreloadFileCreateUser: somebody@acme.org
                              PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                              PreloadFileModifyUser: somebody.else@acme.org
                              PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                              ChecksumAlgorithm: MD5
                          items:
                            x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                            x-osdu-review-status: Accepted
                            x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                            title: AbstractFileSourceInfoSchema
                            description: A schema fragment to describe file source information.
                            type: object
                            properties:
                              FileSource:
                                type: string
                                title: File Source
                                description: The location of the file. It can be a relative path. The actual access is provided via the File Service. When used in context of a FileCollection (dataset--FileCollection*) FileSource is a relative path from the FileCollectionPath. It can be used by consumers to pull an individual file if they so choose by concatenating the FileCollectionPath with the FileSource. This property is required.
                                example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              PreloadFilePath:
                                type: string
                                title: Preload File Path
                                description: File system path to the data file as it existed before loading to the data platform.
                                example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              PreloadFileCreateUser:
                                type: string
                                title: Preload File Create User
                                description: Optional user name or reference, who created the file prior to up-loading to the platform.
                                example: somebody@acme.org
                              PreloadFileCreateDate:
                                type: string
                                title: Preload File Create Date
                                description: Optional create date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-16T11:46:20.163Z'
                                x-osdu-frame-of-reference: DateTime
                              PreloadFileModifyUser:
                                type: string
                                title: Preload File Modify User
                                description: Optional user name or reference, who last modified the file prior to up-loading to the platform.
                                example: somebody.else@acme.org
                              PreloadFileModifyDate:
                                type: string
                                title: Preload File Modify Date
                                description: Optional last modified date and time of the file prior to up-loading to the platform.
                                format: date-time
                                example: '2019-12-20T17:20:05.356Z'
                                x-osdu-frame-of-reference: DateTime
                              Name:
                                type: string
                                title: Name
                                description: Optional, user-friendly file name.
                                example: 1000.witsml
                              FileSize:
                                type: string
                                title: File Size
                                description: Length of file in bytes. Implemented as string. The value must be convertible to a long integer (sizes can become very large).
                                pattern: ^[0-9]+$
                                example: '95463'
                              EncodingFormatTypeID:
                                type: string
                                title: Encoding Format Type ID
                                description: 'Only used in FileCollection where the EncodingFormatType differs from data DatasetDefault specified in data.EncodingFormatTypeID: the media type specification for this dataset.'
                                example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                                pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                                x-osdu-relationship:
                                  - GroupType: reference-data
                                    EntityType: EncodingFormatType
                              Checksum:
                                type: string
                                title: Checksum
                                description: Checksum of file bytes - a hexadecimal number with even number of bytes.
                                pattern: ^([0-9a-fA-F]{2})+$
                              ChecksumAlgorithm:
                                type: string
                                title: Checksum Algorithm
                                description: The name of the checksum algorithm e.g. MD5, SHA-256.
                                example: SHA-256
                            required:
                              - FileSource
                            x-osdu-inheriting-from-kind: []
                        Checksum:
                          type: string
                          title: MD5 Checksum
                          description: MD5 checksum of file bytes - a 32 byte hexadecimal number.
                          pattern: ^[0-9a-fA-F]{32}
                      required:
                        - FileCollectionPath
                  required:
                    - DatasetProperties
                  x-osdu-inheriting-from-kind: []
                - x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
                  x-osdu-review-status: Accepted
                  x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
                  title: AbstractVectorHeaderMapping
                  description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                  type: object
                  properties:
                    VectorHeaderMapping:
                      type: array
                      description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                      items:
                        type: object
                        description: Array of objects which define the meaning and format of a tabular structure used in a binary file as a header.  The initial use case is the trace headers of a SEG-Y file.  Note that some of this information may be repeated in the SEG-Y EBCDIC header.
                        properties:
                          KeyName:
                            type: string
                            title: Key Name
                            description: Relationship to a reference value for a name of a property header such as INLINE, CDPX.
                            pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: HeaderKeyName
                          WordFormat:
                            type: string
                            title: Word Format
                            description: Relationship to a reference value for binary data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII, EBCDIC.
                            pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: WordFormatType
                          WordWidth:
                            type: integer
                            title: Word Width
                            description: Size of the word in bytes.
                          Position:
                            type: integer
                            description: Beginning byte position of header value, 1 indexed.
                          UoM:
                            type: string
                            title: Unit of Measure
                            description: Relationship to units of measure reference if header standard is not followed.
                            pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                            x-osdu-relationship:
                              - GroupType: reference-data
                                EntityType: UnitOfMeasure
                          ScalarIndicator:
                            type: string
                            title: Scalar Indicator
                            description: Enumerated string indicating whether to use the normal scalar field for scaling this field (STANDARD), no scaling (NOSCALE), or override scalar (OVERRIDE).  Default is current STANDARD (such as SEG-Y rev2).
                            enum:
                              - STANDARD
                              - NOSCALE
                              - OVERRIDE
                          ScalarOverride:
                            type: number
                            title: Scalar Override
                            description: Scalar value (as defined by standard) when a value present in the header needs to be overwritten for this value.
                  x-osdu-inheriting-from-kind: []
                - type: object
                  properties:
                    SEGYRevision:
                      type: string
                      title: SEG-Y Revision
                      description: The SEG-Y standard revision the SEG-Y file set is conforming to.
                      example: rev 0
                  title: IndividualProperties
                - type: object
                  properties:
                    ExtensionProperties:
                      type: object
                  title: ExtensionProperties
          required:
            - kind
          additionalProperties: false
          x-osdu-review-status: Accepted
          x-osdu-inheriting-from-kind:
            - name: Dataset
              kind: osdu:wks:AbstractDataset:1.0.0
            - name: FileCollection
              kind: osdu:wks:AbstractFileCollection:1.0.0
        acls:
          type: object
          description: ACLs with admin groups and viewer groups for the dataset.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        dataset_new_name: dsx02
        metadata:
          f1: v1
          f2: v2
          f3: v3
        filemetadata:
          f1: v1
          f2: v2
          f3: v3
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal Time)
        gtags:
          - tag01
          - tag02
          - tag03
        ltag: legal-tag
        readonly: false
        seismicmeta:
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
              - Slb-Private-USA-EHC
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          data:
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            ExtensionProperties: {}
          meta: []
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          version: 1637208623527796
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          acl:
            viewers:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            owners:
              - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          legal:
            legaltags:
              - opendes-seistore-test-01
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createUser: vmanohar@slb.com
          createTime: '2021-11-16T02:08:16.420Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          modifyTime: '2021-11-18T04:10:23.817Z'
        segy_v1:
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          version: 1562066009929332
          acl:
            owners:
              - someone@company.com
            viewers:
              - someone@company.com
          legal:
            legaltags:
              - Example legaltags
            otherRelevantDataCountries:
              - US
            status: compliant
          tags:
            NameOfKey: String value
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          ancestry:
            parents: []
          meta: []
          data:
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
              - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            Source: Example Data Source
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            Name: Dataset X221/15
            Description: As originally delivered by ACME.com.
            TotalSize: '13245217273'
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Endian: BIG
            DatasetProperties:
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
              FileSourceInfos:
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                  Name: vds-file-1
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                  FileSize: '439452464'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
                - FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                  PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                  Name: vds-file-2
                  PreloadFileCreateUser: somebody@acme.org
                  PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                  PreloadFileModifyUser: somebody.else@acme.org
                  PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                  FileSize: '433645463'
                  Checksum: checksum-value
                  ChecksumAlgorithm: MD5
              Checksum: checksum-value
            VectorHeaderMapping:
              - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
                WordFormat: 'namespace:reference-data--WordFormatType:INT:'
                WordWidth: 2
                Position: 2
                UoM: 'namespace:reference-data--UnitOfMeasure:m:'
                ScalarIndicator: STANDARD
                ScalarOverride: 12345.6
            SEGYRevision: rev 0
            ExtensionProperties: {}
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    DatasetPermission:
      required:
        - read
        - write
        - delete
      properties:
        read:
          type: boolean
          description: True if the user has read permission on the dataset.
        write:
          type: boolean
          description: True if the user has write permission on the dataset.
        delete:
          type: boolean
          description: True if the user has delete permission on the dataset.
      example:
        read: true
        write: false
        delete: false
    DatasetAndDirectories:
      required:
        - datasets
        - directories
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
        directories:
          type: array
          description: Array of directories inside the subproject.
          items:
            type: string
      example:
        datasets:
          - /a/b/c/dsx01
          - /a/b/c/dsx02
        directories:
          - /a/b/c/d
          - /a/b/c/e
    DatasetCheckList:
      required:
        - datasets
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
      example:
        datasets:
          - a/b/c/dsx01
          - a/b/c/dsx02
    AccessToken:
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: connection string credentials or standard access token (CSP dependent)
        token_type:
          type: string
          description: token type (Bearer, SasUrl, ....).
        expires_in:
          type: number
          description: expiration time (in minutes) of the connection string credentials
      example:
        access_token: header.payload.signature
        token_type: Bearer
        expires_in: 3600
    ImpersonationToken:
      required:
        - impersonation_token
        - token_type
        - expires_in
        - context
      properties:
        impersonation_token:
          type: string
          description: The Impersonation token.
        token_type:
          type: string
          description: Token type.
        expires_in:
          type: number
          description: Token expiration time.
        context:
          type: string
          description: the Impersonation token context.
      example:
        impersonation_token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
        token_type: Bearer
        expires_in: 3600
        context: xf420cvrv303fm4vksvdkvnejvrjbinb0exdnberonswc2mvmalksdvdeakvwrmk
    Resource:
      required:
        - resource
      properties:
        resource:
          type: string
        readonly:
          type: boolean
    ImpersonationTokenRequest:
      required:
        - resources
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        metadata:
          type: object
          description: A general field to set extra meta-information to the impersonation token signature. These are saved along with the token signatures.
      example:
        resources:
          - resource: sd://tnx01/spx01
            readonly: true
          - resource: sd://tnx01/spx02
            readonly: false
        metadata:
          jobId: 1234
    ImpTokenRequest:
      required:
        - token
        - resources
        - refresh-url
      properties:
        token:
          type: string
          description: Impersonation token that was previously issued.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        refresh-url:
          type: string
          description: A web service endpoint that the seismic store service will invoke to check if the impersonation token can be refreshed.
      example:
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
        resources:
          - resource: sd://tnx01/spx01
            readonly: true
          - resource: sd://tnx01/spx02
            readonly: false
          - resource: sd://tnx01/spx03
        refresh-url: https://httpstat.us/200
    ImpTokenPatchRequest:
      required:
        - token
        - refresh-url
      properties:
        token:
          type: string
          description: Impersonation token that was previously issued.
        refresh-url:
          type: string
          description: New endpoint that the seismic store service will invoke to check if the impersonation token can be refreshed.
      example:
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
        refresh-url: https://httpstat.us/200
    RefreshTokenRequest:
      required:
        - token
      properties:
        token:
          type: string
          description: Impersonation token
      example:
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
    SubProjectCreateBody:
      properties:
        admin:
          type: string
          description: An optional user to set as admin. The user will be added in the first admins acl group
        storage_class:
          type: string
          description: Storage class for the bucket (Google Required Only)
        storage_location:
          type: string
          description: Storage location for the bucket (Google Required Only)
        access_policy:
          type: string
          description: 'The datasets access level mode: "uniform" (uniform data access to all subprojects datasets) or "datasets" (acl can be applied at dataset level)'
          default: uniform
          enum:
            - uniform
            - dataset
        acls:
          type: object
          description: The entitlement groups to enable subproject access as admin or viewer. If not specified, default entitlement data groups will be created.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        admin: admin@email
        storage_class: MULTI_REGIONAL
        storage_location: US
        access_policy: uniform
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    SubProjectPatchBody:
      properties:
        access_policy:
          type: string
          description: Access Policy for the subproject.
          default: dataset
        acls:
          type: object
          description: ACLs with admin groups and viewer groups. Existing acls will be replaced with the provided acls.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        access_policy: dataset
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
            - data.sdms.tenant.subproject.1f1tr7fe-fb0e-402a-b725-606723e5356n.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    SubProject:
      required:
        - name
        - tenant
        - storage_class
        - storage_location
        - ltag
        - access_policy
      properties:
        name:
          type: string
          description: Name of the subproject.
        tenant:
          type: string
          description: Name of the tenant.
        storage_class:
          type: string
          description: Storage class for the bucket.
        storage_location:
          type: string
          description: Storage location for the bucket.
        ltag:
          type: string
          description: Legal tag for the subproject.
        access_policy:
          type: string
          description: Access policy for the subproject.
          default: uniform
          enum:
            - uniform
            - dataset
        acls:
          type: object
          description: ACLs with admin groups and viewer groups for the subproject.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        name: spx01
        tenant: tnx01
        storage_class: MULTI_REGIONAL
        storage_location: US
        admin: test@email
        ltag: Slb-Private-USA-EHC
        gcs_bucket: subproject-bucket
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    TenantCreateBody:
      required:
        - gcpid
        - esd
        - default_acls
      properties:
        gcpid:
          type: string
          description: Google cloud project id associated with the tenant. For other providers, name of the data partition.
        esd:
          type: string
          description: Entitlements group Sub Domain (ESD). For instance, if the entitlements group is users.datalake.viewers@{datapartition}.{domain}.com, the esd value is {datapartition}.{domain}.com. It must start with the name of the data partition.
        default_acls:
          type: string
          description: Entitlements authorization group to manage tenant administrators.
      example:
        gcpid: datapartition
        esd: '{datapartition}.{domain}.com'
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
    Tenant:
      required:
        - name
        - esd
        - gcpid
        - default_acls
      properties:
        name:
          type: string
          description: Name of the tenant.
        esd:
          type: string
          description: Entitlements group Sub Domain (ESD). For instance, if the entitlements group is users.datalake.viewers@{datapartition}.{domain}.com, the esd value is {datapartition}.{domain}.com. It has to start with the name of the data partition.
        gcpid:
          type: string
          description: Google cloud project id associated with the tenant. For other providers, name of the data partition.
        default_acls:
          type: string
          description: Entitlements authorization group to manage tenant administrators.
      example:
        name: datapartition
        esd: '{datapartition}.{domain}.com'
        gcpid: datapartition
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
    UserAddRequest:
      required:
        - email
        - path
        - group
      properties:
        email:
          type: string
          description: Email address of the user. Note that this field is used as a principal identifer for entitlements-svc and be configured using the env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS runtime.
        path:
          type: string
          description: Seismic store path in the format sd://tenant/subproject.
        group:
          type: string
          description: Role to be assigned to the user.
          enum:
            - viewer
            - editor
            - admin
      example:
        email: test@slb.com
        path: sd://slb/test_project
        group: editor
    UserRemoveRequest:
      required:
        - email
        - path
      properties:
        email:
          type: string
          description: Email address of the user. Note that this field is used as a principal identifer for entitlements-svc and be configured using the env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS runtime.
        path:
          type: string
          description: Seismic store path in the format sd://tenant/subproject.
      example:
        email: test@email
        path: sd://slb/test_project
    UserRoles:
      required:
        - roles
      properties:
        roles:
          type: array
          description: Array of arrays with each array containing subproject and role of the user for the subproject.
          items:
            type: array
            items:
              type: string
            example:
              - /spx01
              - admin
          example:
            - - /spx01
              - admin
            - - /spx02
              - viewer
    LsDatasets:
      type: array
      description: Array of directories and datasets inside a subproject.
      items:
        type: string
      example:
        - folderA/
        - folderB/
        - dataset01
        - dataset02
        - dataset03
    LsPaginatedDatasets:
      required:
        - datasets
        - nextPageCursor
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
        nextPageCursor:
          type: string
          description: Next cursor for pagination.
      example:
        datasets:
          - folderA/
          - folderB/
          - dataset01
        nextPageCursor: abc1234
    PaginatedDatasets:
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        nextPageCursor:
          type: string
          example: next-page-token-3rt431v41-4515351
    DatasetSize:
      required:
        - computed_size
        - computed_size_date
      properties:
        computed_size:
          type: number
          description: The size of the dataset in bytes..
        computed_size_date:
          type: string
          description: The date of when the dateset size was computed.
      example:
        computed_size: '35461'
        computed_size_date: Thu Mar 16 2023 16:16:40 GMT-0500 (Central Daylight Time)
