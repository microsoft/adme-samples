components:
  schemas:
    AppError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        reason:
          type: string
      type: object
    ConnectedOuterService:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    VersionInfo:
      properties:
        artifactId:
          type: string
        branch:
          type: string
        buildTime:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          type: array
        groupId:
          type: string
        version:
          type: string
      type: object
  securitySchemes:
    Authorization:
      bearerFormat: Authorization
      scheme: bearer
      type: http
info:
  contact:
    email: dps@OSDU.org
    name: OSDU Data Platform Team
  description: Entity service
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Well Delivery Service API
  version: 1.0.0
openapi: 3.0.1
paths:
  /_ah/warmup:
    get:
      description: For deployment available public `/liveness_check` endpoint, which
        provides `Workflow service is alive` message.
      operationId: warmup
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: Well Delivery service is alive
      summary: Liveness Check endpoint
      tags:
      - health
  /activityPlans/v1/by_well/{well_id}:
    get:
      description: 'The API returns the Activity Plan object from a well id.<p>Required
        roles: `service.storage.viewer`, `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getLatestActivityPlanByWell
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Activity plan object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: well id or related Activity plan object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the Activity Plan object from a well
      tags:
      - activity-plans-api
  /bhaRuns/v1/by_holeSection/{hole_section_id}:
    get:
      description: 'The API returns a list of BHA Run objects for a hole section id.
        <p>Required roles: `service.storage.viewer`, `service.storage.creator` or
        `service.storage.admin`.</p>'
      operationId: getBHARunsBySegment
      parameters:
      - in: path
        name: hole_section_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: BHA Run objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Hole section id or related BHA Run object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of BHA Run objects for a hole section
      tags:
      - bhaRuns-api
  /bhaRuns/v1/by_wellbore/{wellbore_id}:actual:
    get:
      description: 'The API returns a list of actual BHA Run objects for a wellbore
        id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getBHARunsByWellbore_actual
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Actual BHA Run objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Actual BHA Run object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of actual BHA Run objects for a wellbore
      tags:
      - bhaRuns-api
  /bhaRuns/v1/by_wells/{well_ids}:planned:
    get:
      description: 'The API returns a list of actual BHA Run objects for a planned
        wells id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getBHARunsByWells_planned
      parameters:
      - in: path
        name: well_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned well object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned well object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of actual BHA Run objects for a by_wells
      tags:
      - bhaRuns-api
  /fluidsPrograms/v1/by_wellbore/{wellbore_id}:
    get:
      description: 'The API returns fluids program objects for the given wellbore
        id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getFluidsProgramsByWellbore_planned
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Fluids program objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Fluids report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get fluids program objects for the given wellbore id
      tags:
      - fluids-program-api
  /fluidsReports/v1/by_wellbore/{wellbore_id}:
    get:
      description: 'The API returns fluids report objects for the given wellbore id.
        <p>Required roles: `service.storage.viewer`, `service.storage.creator` or
        `service.storage.admin`.</p>'
      operationId: getFluidsReportsByWellbore
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Fluids report objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Fluids report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get fluids report objects for the given wellbore id
      tags:
      - fluids-report-api
  /holeSections/v1/by_wellbore/{wellbore_id}:
    get:
      description: 'The API returns a list of hole section objects for a wellbore
        id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSectionsByWellbore_planned
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: Hole section objects retrieved successfully
        '400':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Wellbore id or related hole section object not found
        '500':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of hole section objects for a wellbore
      tags:
      - hole-section-api
  /info:
    get:
      description: For deployment available public `/info` endpoint, which provides
        build and git related information.
      operationId: info
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: Version info.
      summary: Version info
      tags:
      - info
  /operationsReports/v1/by_timeRange/{start_time}/{end_time}:
    get:
      description: 'The API returns a list of operations report objects for the given
        time range. Date time format can be ''yyyyMMdd'', ''yyyy-MM-dd'', ''yyyy-M-d'',''yyyy-MM-ddTHH:mm:ss''
        or ''yyyy-MM-ddTHH:mm:ssZ''. <p>Required roles: `service.storage.viewer`,
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getOperationsReportsByTimeRange
      parameters:
      - in: path
        name: start_time
        required: true
        schema:
          type: string
      - in: path
        name: end_time
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Operations report objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Operations report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of operations report objects for the given time range
      tags:
      - operations-report-api
  /operationsReports/v1/by_wellbore/{wellbore_id}:
    get:
      description: 'The API returns all available operations report objects for the
        given wellbore id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getOperationsReportsByWellbore
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Operations report objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Operations report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all available operations report objects for the given wellbore
        id
      tags:
      - operations-report-api
  /operationsReports/v1/latest/by_wellbore/{wellbore_id}:
    get:
      description: 'The API returns latest operations report object for the given
        wellbore id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestOperationsReportByWellbore
      parameters:
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Operations report object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Operations report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get latest operations report object for the given wellbore id
      tags:
      - operations-report-api
  /operationsReports/v1/reference_tree/by_operationsReport/{operations_report_id}:
    get:
      description: 'The API returns the latest version of operations report with a
        lists of URI references. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestOperationsReportRefTree
      parameters:
      - in: path
        name: operations_report_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Operations report tree retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Operations report object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of operations report with a lists of URI references
      tags:
      - operations-report-api
  /query/v1/by_well/{type}:batch:
    post:
      description: 'The API returns a list of entity objects for a list of wells.<p>Required
        roles: `service.storage.viewer`, `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getEntitiesByWells_planned
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Entity objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related entity object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of entity objects for a list of wells
      tags:
      - query-api
  /query/v1/{type}/by_wellbore/{wellbore_id}:actual:
    get:
      description: 'The API returns actual <type> objects for the given wellbore id.
        <p>Required roles: `service.storage.viewer`, `service.storage.creator` or
        `service.storage.admin`.</p>'
      operationId: getObjectsByWellbore_actual
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: actual <type> objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: actual <type> objects not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of actual <type> objects for a wellbore
      tags:
      - query-api
  /query/v1/{type}/by_wellbore/{wellbore_id}:planned:
    get:
      description: 'The API returns planned <type> objects for the given wellbore
        id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getObjectsByWellbore_planned
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: wellbore_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: planned <type> objects retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: planned <type> objects not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a list of planned <type> objects for a wellbore
      tags:
      - query-api
  /storage/v1/{type}:
    put:
      description: 'The API represents the main injection mechanism into the Object
        Database. It allows entity creation and/or update. When no entity id is provided
        or when the provided id is not already present in the ObjectDatabase then
        a new entity is created. If the id is related to an existing entity in the
        Object Database then an update operation takes place and a new version of
        the entity is created. <p>Required roles: `service.storage.creator` or `service.storage.admin`.'
      operationId: createOrUpdateEntities
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: Entity created and/or updated successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Create or update entity
      tags:
      - entity-api
  /storage/v1/{type}/versions/{id}:
    get:
      description: 'The API returns a list containing all version numbers for the
        given entity type and id. <p>Required roles: `service.storage.viewer`,`service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getEntityVersionNumbers
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Entity version numbers retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get all entity version numbers
      tags:
      - entity-api
  /storage/v1/{type}/{id}:
    delete:
      description: 'The API performs a logical deletion of the given entity and all
        of its versions. This operation can be reverted later. <p>Required roles:
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: deleteEntity
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: string
          description: Entity deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Delete entity
      tags:
      - entity-api
    get:
      description: 'This API returns the latest version of the given entity type and
        id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestEntityVersion
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Entity retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get latest versio of entity
      tags:
      - entity-api
  /storage/v1/{type}/{id}/{version}:
    delete:
      description: 'The API performs a logical deletion of the given entity type,
        id, and version number.This operation can be reverted later. <p>Required roles:
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: deleteEntityVersion
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: string
          description: Entity deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity id or version not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Delete a specific version of entity
      tags:
      - entity-api
    get:
      description: 'The API retrieves the specific version of the given entity type
        and id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSpecificEntityVersion
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Entity retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity id or version not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of the given entity
      tags:
      - entity-api
  /storage/v1/{type}/{id}/{version}:purge:
    delete:
      description: 'The API performs a physical deletion of the given entity type,
        id, and versions.This operation cannot be undone. <p>Required roles: `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: purgeEntityVersion
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            '*/*':
              schema:
                type: string
          description: Entity purged successfully
        '400':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity id or version not found
        '500':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Purge a specific version of entity
      tags:
      - entity-api
  /storage/v1/{type}/{id}:purge:
    delete:
      description: 'The API performs a physical deletion of the given entity and all
        of its versions.This operation cannot be undone. <p>Required roles: `service.storage.creator`
        or `service.storage.admin`.'
      operationId: purgeEntity
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: string
          description: Entity purged successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Invalid entity type
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Entity not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Purge entity
      tags:
      - entity-api
  /wellActivityPrograms/v1/by_well/{well_id}:
    get:
      description: 'The API returns latest version of well activity program for the
        given well id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestWellActivityProgramVersion
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of well activity program
      tags:
      - well-activity-program-api
  /wellActivityPrograms/v1/by_well/{well_id}/{wap_version}:
    get:
      description: 'The API returns specific version of well activity program for
        the given well id and well activity program version. <p>Required roles: `service.storage.viewer`,
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getSpecificWellActivityProgramVersion
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - in: path
        name: wap_version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of well activity program
      tags:
      - well-activity-program-api
  /wellActivityPrograms/v1/full_content/by_well/{well_id}:
    get:
      description: 'The API returns the latest version of well activity program with
        a lists of children for a well. <p>Required roles: `service.storage.viewer`,
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getLatestWellActivityProgramChildrenList
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program object with children retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of well activity program with a lists of children
      tags:
      - well-activity-program-api
  /wellActivityPrograms/v1/reference_tree/by_well/{well_id}:
    get:
      description: 'The API returns the latest version of well activity program with
        a lists of URI references for a well. <p>Required roles: `service.storage.viewer`,`service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestWellActivityProgramRefTree
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program tree retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of well activity program with a lists of URI
      tags:
      - well-activity-program-api
  /wellActivityPrograms/v1/reference_tree/by_well/{well_id}/{wap_version}:
    get:
      description: 'The API returns a specific version of well activity program with
        a lists of URI references for a well. <p>Required roles: `service.storage.viewer`,
        `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getSpecificWellActivityProgramRefTree
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - in: path
        name: wap_version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program tree retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of well activity program with a lists of URI
        references
      tags:
      - well-activity-program-api
  /wellActivityPrograms/v1/versions/by_well/{well_id}:
    get:
      description: 'The API returns version number list of well activity program for
        the given well id. <p>Required roles: `service.storage.viewer`,`service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getWellActivityProgramVersionNumbers
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Well activity program object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Well id or related well activity program object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the version number list of well activity program
      tags:
      - well-activity-program-api
  /wellboreTrajectories/v1/by_wells/{well_ids}:planned:
    get:
      description: ${A.B.description}
      operationId: getTrajectoriesByWells_planned
      parameters:
      - in: path
        name: well_ids
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Activity plan object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: well id or related Activity plan object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: ${A.B.summary}
      tags:
      - wellbore-trajectory-api
  /wellbores/v1/by_well/{well_id}/{wellbore_version}:actual:
    get:
      description: 'The API returns specific version of actual wellbore for the given
        well id and well activity program version. <p>Required roles: `service.storage.viewer`,  `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSpecificWellboreVersion_actual_1
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - in: path
        name: wellbore_version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Actual wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Actual wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of actual wellbore
      tags:
      - wellbore-api
  /wellbores/v1/by_well/{well_id}/{wellbore_version}:planned:
    get:
      description: 'The API returns specific version of planned wellbore for the given
        well id and well activity program version. <p>Required roles: `service.storage.viewer`,  `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSpecificWellboreVersion_planned
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - in: path
        name: wellbore_version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of planned wellbore
      tags:
      - wellbore-api
  /wellbores/v1/by_well/{well_id}:actual:
    get:
      description: 'The API returns latest version of actual wellbore for the given
        well id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestWellboreVersion_actual
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Actual wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Actual wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of actual wellbore
      tags:
      - wellbore-api
  /wellbores/v1/by_well/{well_id}:planned:
    get:
      description: 'The API returns latest version of planned wellbore for the given
        well id.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestWellboreVersion_planned
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the latest version of planned wellbore
      tags:
      - wellbore-api
  /wellbores/v1/versions/by_well/{well_id}:actual:
    get:
      description: 'The API returns version number list of actual wellbore for the
        given well id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getWellboreVersionNumbers_actual
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Actual wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Actual wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the version number list of actual wellbore
      tags:
      - wellbore-api
  /wellbores/v1/versions/by_well/{well_id}:planned:
    get:
      description: 'The API returns version number list of planned wellbore for the
        given well id. <p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getWellboreVersionNumbers_planned
      parameters:
      - in: path
        name: well_id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned wellbore object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned wellbore object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the version number list of planned wellbore
      tags:
      - wellbore-api
  /wells/v1/by_name/{name}/{version}:actual:
    get:
      description: 'The API returns a specific version of actual well object for the
        given name.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSpecificWellboreVersion_actual
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Activity plan object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: well id or related Activity plan object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of actual well object for the given name
      tags:
      - well-api
  /wells/v1/by_name/{name}/{version}:planned:
    get:
      description: 'The API returns a specific version of planned well object for
        the given name.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getSpecificWellVersion_planned
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          format: int64
          type: integer
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned well object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned well object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a specific version of planned well object for the given name
      tags:
      - well-api
  /wells/v1/by_name/{name}:actual:
    get:
      description: 'The API returns actual well object for given name.<p>Required
        roles: `service.storage.viewer`, `service.storage.creator` or `service.storage.admin`.</p>'
      operationId: getLatestWellVersion_actual
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Activity plan object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: well id or related Activity plan object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a latest version of actual well object for the given name
      tags:
      - well-api
  /wells/v1/by_name/{name}:planned:
    get:
      description: 'The API returns a latest version of planned well object for given
        name.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getLatestWellVersion_planned
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned well object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned well object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get a latest version of planned well object for the given name
      tags:
      - well-api
  /wells/v1/versions/by_name/{name}:actual:
    get:
      description: 'The API returns version number list of actual well for the given
        name.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getWellVersionNumbers_actual
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Actual Well object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Actual well object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the version number list of actual well
      tags:
      - well-api
  /wells/v1/versions/by_name/{name}:planned:
    get:
      description: 'The API returns version number list of planned well for the given
        name.<p>Required roles: `service.storage.viewer`, `service.storage.creator`
        or `service.storage.admin`.</p>'
      operationId: getWellVersionNumbers_planned
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Planned well object retrieved successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: User not authorized to perform the action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Planned well object not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Internal Server Error
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Bad Gateway
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
          description: Service Unavailable
      security:
      - Authorization: []
      summary: Get the version number list of planned well
      tags:
      - well-api
servers:
- description: Generated server url
  url: https://m23brtst18.oep.ppe.azure-int.net/api/well-delivery
tags:
- description: HoleSection related endpoints
  name: hole-section-api
- description: OperationsReport related endpoints
  name: operations-report-api
- description: Wellbore related endpoints
  name: wellbore-api
- description: Health related endpoints
  name: health
- description: WellboreTrajectory related endpoints
  name: wellbore-trajectory-api
- description: Query related endpoints
  name: query-api
- description: FluidsProgram related endpoints
  name: hole-section-api
- description: ActivityPlans related endpoints
  name: activity-plans-api
- description: FluidsReport related endpoints
  name: fluids-report-api
- description: EntityApi related endpoints
  name: entity-api
- description: Well related endpoints
  name: well-api
- description: BHARunApi related endpoints
  name: bhaRuns-api
- description: FluidsProgram related endpoints
  name: fluids-program-api
- description: WellActivityProgram related endpoints
  name: well-activity-program-api
- description: Version info endpoint
  name: info
