components:
  requestBodies:
    DatasetCheckList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatasetCheckList'
      description: Request body
      required: true
  schemas:
    AccessToken:
      example:
        access_token: header.payload.signature
        expires_in: 3600
        token_type: Bearer
      properties:
        access_token:
          description: connection string credentials or standard access token (CSP
            dependent)
          type: string
        expires_in:
          description: expiration time (in minutes) of the connection string credentials
          type: number
        token_type:
          description: token type (Bearer, SasUrl, ....).
          type: string
      required:
      - access_token
      - token_type
      - expires_in
    Dataset:
      example:
        created_by: user@gtest.com
        created_date: Thu Jul 16 2020 04:30:41 GMT+0000 (Coordinated Universal Time)
        ctag: 1234567890abcdefg
        filemetadata:
          nobjects: 160
          size: 10737418240
          type: GENERIC
        gcsurl: gs://sd_geosolution_spx01/12341234
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal
          Time)
        ltag: legal-tag
        metadata:
          k1: v1
          k2: v2
          k3:
            k4: v4
        name: dsx01
        openzgy_v1:
          acl:
            owners:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            viewers:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          createTime: '2021-11-16T02:08:16.420Z'
          createUser: vmanohar@slb.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          legal:
            legaltags:
            - opendes-seistore-test-01
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2021-11-18T04:10:23.817Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          tags:
            NameOfKey: String value
          version: 1637208623527796
        path: /a/b/c
        readonly: false
        sbit: Wx53vrogk0gr4ao
        sbit_count: 1
        segy_v1:
          acl:
            owners:
            - someone@company.com
            viewers:
            - someone@company.com
          ancestry:
            parents: []
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SEGYRevision: rev 0
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
            VectorHeaderMapping:
            - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
              Position: 2
              ScalarIndicator: STANDARD
              ScalarOverride: 12345.6
              UoM: 'namespace:reference-data--UnitOfMeasure:m:'
              WordFormat: 'namespace:reference-data--WordFormatType:INT:'
              WordWidth: 2
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          legal:
            legaltags:
            - Example legaltags
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          tags:
            NameOfKey: String value
          version: 1562066009929332
        seismicmeta:
          data:
            msg: sample data
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
            - legal-tag
            otherRelevantDataCountries:
            - US
        seismicmeta_guid: slb:seismic:1234abcd5678efgh
        subproject: spx01
        tenant: geosolution
        type: segy
      properties:
        created_by:
          description: Creator of the dataset.
          type: string
        created_date:
          description: Date when the dataset was created.
          type: string
        ctag:
          description: The coherency tag associated with the dataset. (It changes
            every time the dataset is updated.)
          type: string
        filemetadata:
          description: Number of objects and the size in bytes of the dataset.
          type: object
        gcsurl:
          description: Cloud storage object identifier.
          type: string
        last_modified_date:
          description: Date when the dataset was last modified.
          type: string
        ltag:
          description: Legal tag associated with the dataset.
          type: string
        metadata:
          description: Generic information stored as key,value pairs for the dataset.
          type: object
        name:
          description: Name of the dataset.
          type: string
        openzgy_v1:
          $id: FileCollection.Slb.OpenZGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: The dataset representation for optimized seismic access to
            the OpenZGY framework developed by Schlumberger, storing seismic 3D data
            for seismic interpretation.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - properties: {}
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.Slb.OpenZGY
          type: object
          x-osdu-governance-authorities:
          - Schlumberger
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          x-osdu-supported-file-formats:
          - OpenZGY
        path:
          description: Path to the dataset inside a subproject.
          type: string
        readonly:
          description: True if the dataset is readonly.
          type: boolean
        sbit:
          description: The session lockID.
          type: string
        sbit_count:
          description: The number of sessions associated to the dataset.
          type: number
        segy_v1:
          $id: FileCollection.SEGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: A generic representation for  SEGY dataset represented as set
            of files, e.g. representing original tape reels.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - $id: https://schema.osdu.opengroup.org/json/abstract/AbstractVectorHeaderMapping.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Array of objects which define the meaning and format
                  of a tabular structure used in a binary file as a header.  The initial
                  use case is the trace headers of a SEG-Y file.  Note that some of
                  this information may be repeated in the SEG-Y EBCDIC header.
                properties:
                  VectorHeaderMapping:
                    description: Array of objects which define the meaning and format
                      of a tabular structure used in a binary file as a header.  The
                      initial use case is the trace headers of a SEG-Y file.  Note
                      that some of this information may be repeated in the SEG-Y EBCDIC
                      header.
                    items:
                      description: Array of objects which define the meaning and format
                        of a tabular structure used in a binary file as a header.  The
                        initial use case is the trace headers of a SEG-Y file.  Note
                        that some of this information may be repeated in the SEG-Y
                        EBCDIC header.
                      properties:
                        KeyName:
                          description: Relationship to a reference value for a name
                            of a property header such as INLINE, CDPX.
                          pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                          title: Key Name
                          type: string
                          x-osdu-relationship:
                          - EntityType: HeaderKeyName
                            GroupType: reference-data
                        Position:
                          description: Beginning byte position of header value, 1
                            indexed.
                          type: integer
                        ScalarIndicator:
                          description: Enumerated string indicating whether to use
                            the normal scalar field for scaling this field (STANDARD),
                            no scaling (NOSCALE), or override scalar (OVERRIDE).  Default
                            is current STANDARD (such as SEG-Y rev2).
                          enum:
                          - STANDARD
                          - NOSCALE
                          - OVERRIDE
                          title: Scalar Indicator
                          type: string
                        ScalarOverride:
                          description: Scalar value (as defined by standard) when
                            a value present in the header needs to be overwritten
                            for this value.
                          title: Scalar Override
                          type: number
                        UoM:
                          description: Relationship to units of measure reference
                            if header standard is not followed.
                          pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                          title: Unit of Measure
                          type: string
                          x-osdu-relationship:
                          - EntityType: UnitOfMeasure
                            GroupType: reference-data
                        WordFormat:
                          description: Relationship to a reference value for binary
                            data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII,
                            EBCDIC.
                          pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                          title: Word Format
                          type: string
                          x-osdu-relationship:
                          - EntityType: WordFormatType
                            GroupType: reference-data
                        WordWidth:
                          description: Size of the word in bytes.
                          title: Word Width
                          type: integer
                      type: object
                    type: array
                title: AbstractVectorHeaderMapping
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
              - properties:
                  SEGYRevision:
                    description: The SEG-Y standard revision the SEG-Y file set is
                      conforming to.
                    example: rev 0
                    title: SEG-Y Revision
                    type: string
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.SEGY
          type: object
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
        seismicmeta:
          description: Seismic metadata associated with the dataset which is used
            to create a data ecosystem storage record.
          properties:
            data:
              type: object
            kind:
              type: string
          type: object
        seismicmeta_guid:
          description: Seismic storage record identifier.
          type: string
        subproject:
          description: Name of the subproject.
          type: string
        tenant:
          description: Name of the tenant.
          type: string
      required:
      - name
      - tenant
      - subproject
      - path
      - created_by
      - created_date
      - last_modified_date
      - gcsurl
      - ctag
    DatasetAndDirectories:
      example:
        datasets:
        - /a/b/c/dsx01
        - /a/b/c/dsx02
        directories:
        - /a/b/c/d
        - /a/b/c/e
      properties:
        datasets:
          description: Array of datasets inside the subproject.
          items:
            type: string
          type: array
        directories:
          description: Array of directories inside the subproject.
          items:
            type: string
          type: array
      required:
      - datasets
      - directories
    DatasetCheckList:
      example:
        datasets:
        - a/b/c/dsx01
        - a/b/c/dsx02
      properties:
        datasets:
          description: Array of datasets inside the subproject.
          items:
            type: string
          type: array
      required:
      - datasets
    DatasetListBody:
      example:
        cursor: next-page-token-931fvm19vm1-vm1v1
        gtags:
        - tagA
        - tagB
        limit: 10
      properties:
        cursor:
          description: the cursor value required to retrieve the next page of result
          type: string
        gtags:
          description: Array of global tags associated with the dataset metadata.
            Once assigned, they can be used to filter datasets.
          items:
            type: string
          type: array
        limit:
          description: the max limit of datasets in the response
          type: number
        type:
          type: string
      type: object
    DatasetPatch:
      example:
        acls:
          admins:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
        dataset_new_name: dsx02
        filemetadata:
          f1: v1
          f2: v2
          f3: v3
        gtags:
        - tag01
        - tag02
        - tag03
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal
          Time)
        ltag: legal-tag
        metadata:
          f1: v1
          f2: v2
          f3: v3
        openzgy_v1:
          acl:
            owners:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            viewers:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          createTime: '2021-11-16T02:08:16.420Z'
          createUser: vmanohar@slb.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          legal:
            legaltags:
            - opendes-seistore-test-01
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2021-11-18T04:10:23.817Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          tags:
            NameOfKey: String value
          version: 1637208623527796
        readonly: false
        segy_v1:
          acl:
            owners:
            - someone@company.com
            viewers:
            - someone@company.com
          ancestry:
            parents: []
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SEGYRevision: rev 0
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
            VectorHeaderMapping:
            - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
              Position: 2
              ScalarIndicator: STANDARD
              ScalarOverride: 12345.6
              UoM: 'namespace:reference-data--UnitOfMeasure:m:'
              WordFormat: 'namespace:reference-data--WordFormatType:INT:'
              WordWidth: 2
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          legal:
            legaltags:
            - Example legaltags
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          tags:
            NameOfKey: String value
          version: 1562066009929332
        seismicmeta:
          data:
            msg: sample data
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
            - Slb-Private-USA-EHC
            otherRelevantDataCountries:
            - US
      properties:
        acls:
          description: ACLs with admin groups and viewer groups for the dataset.
          properties:
            admins:
              items:
                type: string
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
        dataset_new_name:
          description: New name for the dataset.
          type: string
        filemetadata:
          description: Number of objects and the size in bytes of the dataset.
          type: object
        gtags:
          default: []
          description: Array of tags associated with the dataset. After patching these
            tags, they can be used to filter the datasets.
          items:
            type: string
          type: array
        last_modified_date:
          description: Date when the dataset was last modified.
          type: string
        ltag:
          description: Legal tag associated with the dataset.
          type: string
        metadata:
          description: Generic information about the dataset stored as key value pairs.
          type: object
        openzgy_v1:
          $id: FileCollection.Slb.OpenZGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: The dataset representation for optimized seismic access to
            the OpenZGY framework developed by Schlumberger, storing seismic 3D data
            for seismic interpretation.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - properties: {}
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.Slb.OpenZGY
          type: object
          x-osdu-governance-authorities:
          - Schlumberger
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          x-osdu-supported-file-formats:
          - OpenZGY
        readonly:
          description: True if the dataset is read only.
          type: boolean
        segy_v1:
          $id: FileCollection.SEGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: A generic representation for  SEGY dataset represented as set
            of files, e.g. representing original tape reels.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - $id: https://schema.osdu.opengroup.org/json/abstract/AbstractVectorHeaderMapping.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Array of objects which define the meaning and format
                  of a tabular structure used in a binary file as a header.  The initial
                  use case is the trace headers of a SEG-Y file.  Note that some of
                  this information may be repeated in the SEG-Y EBCDIC header.
                properties:
                  VectorHeaderMapping:
                    description: Array of objects which define the meaning and format
                      of a tabular structure used in a binary file as a header.  The
                      initial use case is the trace headers of a SEG-Y file.  Note
                      that some of this information may be repeated in the SEG-Y EBCDIC
                      header.
                    items:
                      description: Array of objects which define the meaning and format
                        of a tabular structure used in a binary file as a header.  The
                        initial use case is the trace headers of a SEG-Y file.  Note
                        that some of this information may be repeated in the SEG-Y
                        EBCDIC header.
                      properties:
                        KeyName:
                          description: Relationship to a reference value for a name
                            of a property header such as INLINE, CDPX.
                          pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                          title: Key Name
                          type: string
                          x-osdu-relationship:
                          - EntityType: HeaderKeyName
                            GroupType: reference-data
                        Position:
                          description: Beginning byte position of header value, 1
                            indexed.
                          type: integer
                        ScalarIndicator:
                          description: Enumerated string indicating whether to use
                            the normal scalar field for scaling this field (STANDARD),
                            no scaling (NOSCALE), or override scalar (OVERRIDE).  Default
                            is current STANDARD (such as SEG-Y rev2).
                          enum:
                          - STANDARD
                          - NOSCALE
                          - OVERRIDE
                          title: Scalar Indicator
                          type: string
                        ScalarOverride:
                          description: Scalar value (as defined by standard) when
                            a value present in the header needs to be overwritten
                            for this value.
                          title: Scalar Override
                          type: number
                        UoM:
                          description: Relationship to units of measure reference
                            if header standard is not followed.
                          pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                          title: Unit of Measure
                          type: string
                          x-osdu-relationship:
                          - EntityType: UnitOfMeasure
                            GroupType: reference-data
                        WordFormat:
                          description: Relationship to a reference value for binary
                            data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII,
                            EBCDIC.
                          pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                          title: Word Format
                          type: string
                          x-osdu-relationship:
                          - EntityType: WordFormatType
                            GroupType: reference-data
                        WordWidth:
                          description: Size of the word in bytes.
                          title: Word Width
                          type: integer
                      type: object
                    type: array
                title: AbstractVectorHeaderMapping
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
              - properties:
                  SEGYRevision:
                    description: The SEG-Y standard revision the SEG-Y file set is
                      conforming to.
                    example: rev 0
                    title: SEG-Y Revision
                    type: string
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.SEGY
          type: object
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
        seismicmeta:
          description: Seismic metadata associated with the dataset which is used
            to create a data ecosystem storage record.
          properties:
            data:
              type: object
            kind:
              type: string
          type: object
    DatasetPermission:
      example:
        delete: false
        read: true
        write: false
      properties:
        delete:
          description: True if the user has delete permission on the dataset.
          type: boolean
        read:
          description: True if the user has read permission on the dataset.
          type: boolean
        write:
          description: True if the user has write permission on the dataset.
          type: boolean
      required:
      - read
      - write
      - delete
    DatasetRegisterBody:
      example:
        acls:
          admins:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
        gtags:
        - tagA
        - tagB
        - tagC
        openzgy_v1:
          acl:
            owners:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
            viewers:
            - data.default.viewers@opendes.enterprisedata.cloud.slb-ds.com
          createTime: '2021-11-16T02:08:16.420Z'
          createUser: vmanohar@slb.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'opendes:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'opendes:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'opendes:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'opendes:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'opendes:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'opendes:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SchemaFormatTypeID: 'opendes:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
          id: opendes:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
          kind: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          legal:
            legaltags:
            - opendes-seistore-test-01
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2021-11-18T04:10:23.817Z'
          modifyUser: 39916b94-71a9-409e-856e-0f29558fa908
          tags:
            NameOfKey: String value
          version: 1637208623527796
        segy_v1:
          acl:
            owners:
            - someone@company.com
            viewers:
            - someone@company.com
          ancestry:
            parents: []
          createTime: '2020-12-16T11:46:20.163Z'
          createUser: some-user@some-company-cloud.com
          data:
            DatasetProperties:
              Checksum: checksum-value
              FileCollectionPath: s3://default_bucket/opendes/data/vds-dataset/
              FileSourceInfos:
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '439452464'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                Name: vds-file-1
                PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
              - Checksum: checksum-value
                ChecksumAlgorithm: MD5
                FileSize: '433645463'
                FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                Name: vds-file-2
                PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                PreloadFileCreateUser: somebody@acme.org
                PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                PreloadFileModifyUser: somebody.else@acme.org
                PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
              IndexFilePath: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
            Description: As originally delivered by ACME.com.
            EncodingFormatTypeID: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
            Endian: BIG
            ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
            ExtensionProperties: {}
            Name: Dataset X221/15
            ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
            ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceHostRegionIDs:
            - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
            ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
            ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
            SEGYRevision: rev 0
            SchemaFormatTypeID: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
            Source: Example Data Source
            TotalSize: '13245217273'
            VectorHeaderMapping:
            - KeyName: 'namespace:reference-data--HeaderKeyName:CMPX:'
              Position: 2
              ScalarIndicator: STANDARD
              ScalarOverride: 12345.6
              UoM: 'namespace:reference-data--UnitOfMeasure:m:'
              WordFormat: 'namespace:reference-data--WordFormatType:INT:'
              WordWidth: 2
          id: osdu:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
          kind: osdu:wks:dataset--FileCollection.SEGY:1.0.0
          legal:
            legaltags:
            - Example legaltags
            otherRelevantDataCountries:
            - US
            status: compliant
          meta: []
          modifyTime: '2020-12-16T11:52:24.477Z'
          modifyUser: some-user@some-company-cloud.com
          tags:
            NameOfKey: String value
          version: 1562066009929332
        seismicmeta:
          data:
            msg: sample data
          kind: osdu:sdms:seismic3d:1.0.0
          legal:
            legaltags:
            - legal-tag
            otherRelevantDataCountries:
            - US
      properties:
        acls:
          description: ACLs with admin groups and viewer groups for the dataset.
          properties:
            admins:
              items:
                type: string
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
        gtags:
          description: Array of global tags associated with the dataset metadata.
            Once assigned, they can be used to filter datasets.
          items:
            type: string
          type: array
        openzgy_v1:
          $id: FileCollection.Slb.OpenZGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: The dataset representation for optimized seismic access to
            the OpenZGY framework developed by Schlumberger, storing seismic 3D data
            for seismic interpretation.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - properties: {}
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.Slb.OpenZGY:5771c352-dc52-5d26-9351-2b8dbc9eb474
              pattern: '[\w\.\-]+:dataset--FileCollection.Slb.OpenZGY:[\w\.\-:%]+$'
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              pattern: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.Slb.OpenZGY
          type: object
          x-osdu-governance-authorities:
          - Schlumberger
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.Slb.OpenZGY:1.0.0
          x-osdu-supported-file-formats:
          - OpenZGY
        segy_v1:
          $id: FileCollection.SEGY.1.0.0.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          description: A generic representation for  SEGY dataset represented as set
            of files, e.g. representing original tape reels.
          properties:
            acl:
              $id: AbstractAccessControlList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: The access control tags associated with this entity. This
                structure is included by the SystemProperties "acl", which is part
                of all OSDU records. Not extensible.
              properties:
                owners:
                  description: The list of owners of this data record formatted as
                    an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Owners
                  type: array
                viewers:
                  description: The list of viewers to which this data record is accessible/visible/discoverable
                    formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
                  items:
                    pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
                    type: string
                  title: List of Viewers
                  type: array
              required:
              - owners
              - viewers
              title: Access Control List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractAccessControlList:1.0.0
            ancestry:
              $id: AbstractLegalParentList.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: A list of entity IDs in the data ecosystem, which act as
                legal parents to the current entity. This structure is included by
                the SystemProperties "ancestry", which is part of all OSDU records.
                Not extensible.
              properties:
                parents:
                  description: 'An array of none, one or many entity references in
                    the data ecosystem, which identify the source of data in the legal
                    sense. In contract to other relationships, the source record version
                    is required. Example: the ''parents'' will be queried when e.g.
                    the subscription of source data services is terminated; access
                    to the derivatives is also terminated.'
                  example: []
                  items:
                    pattern: ^[\w\.\-]+:[\w\.\-]+:[\w\-\.:%]+:[0-9]+$
                    type: string
                    x-osdu-relationship: []
                  title: Parents
                  type: array
              title: Parent List
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalParentList:1.0.0
            createTime:
              description: Timestamp of the time at which initial version of this
                OSDU resource object was created. Set by the System. The value is
                a combined date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:46:20.163Z'
              format: date-time
              title: Resource Object Creation DateTime
              type: string
            createUser:
              description: The user reference, which created the first version of
                this resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Creation User Reference
              type: string
            data:
              allOf:
              - $id: AbstractCommonResources.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Common resources to be injected at root 'data' level
                  for every entity, which is persistable in Storage. The insertion
                  is performed by the OsduSchemaComposer script.
                properties:
                  ExistenceKind:
                    description: Where does this data resource sit in the cradle-to-grave
                      span of its existence?
                    pattern: ^[\w\.\-]+:reference-data--ExistenceKind:[\w\.\-:%]+:[0-9]*$
                    title: Existence Kind
                    type: string
                    x-osdu-relationship:
                    - EntityType: ExistenceKind
                      GroupType: reference-data
                  ResourceCurationStatus:
                    description: Describes the current Curation status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceCurationStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Curation Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceCurationStatus
                      GroupType: reference-data
                  ResourceHomeRegionID:
                    description: The name of the home [cloud environment] region for
                      this OSDU resource object.
                    pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                    title: Resource Home Region ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: OSDURegion
                      GroupType: reference-data
                  ResourceHostRegionIDs:
                    description: The name of the host [cloud environment] region(s)
                      for this OSDU resource object.
                    items:
                      pattern: ^[\w\.\-]+:reference-data--OSDURegion:[\w\.\-:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: OSDURegion
                        GroupType: reference-data
                    title: Resource Host Region ID
                    type: array
                  ResourceLifecycleStatus:
                    description: Describes the current Resource Lifecycle status.
                    pattern: ^[\w\.\-]+:reference-data--ResourceLifecycleStatus:[\w\.\-:%]+:[0-9]*$
                    title: Resource Lifecycle Status
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceLifecycleStatus
                      GroupType: reference-data
                  ResourceSecurityClassification:
                    description: Classifies the security level of the resource.
                    pattern: ^[\w\.\-]+:reference-data--ResourceSecurityClassification:[\w\.\-:%]+:[0-9]*$
                    title: Resource Security Classification
                    type: string
                    x-osdu-relationship:
                    - EntityType: ResourceSecurityClassification
                      GroupType: reference-data
                  Source:
                    description: The entity that produced the record, or from which
                      it is received; could be an organization, agency, system, internal
                      team, or individual. For informational purposes only, the list
                      of sources is not governed.
                    title: Data Source
                    type: string
                title: OSDU Common Resources
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractCommonResources:1.0.0
              - $id: AbstractDataset.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Schema fragment holding properties common for all datasets.
                properties:
                  DatasetProperties:
                    description: Placeholder for a specialization.
                    example: {}
                    title: Dataset Properties
                    type: object
                  Description:
                    description: An optional, textual description of the dataset.
                    example: As originally delivered by ACME.com.
                    title: Description
                    type: string
                  EncodingFormatTypeID:
                    description: EncodingFormatType ID reference value relationship.
                      It can be a mime-type or media-type.
                    example: 'namespace:reference-data--EncodingFormatType:text%2Fcsv:'
                    pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Encoding Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: EncodingFormatType
                      GroupType: reference-data
                  Endian:
                    description: 'Endianness of binary value.  Enumeration: "BIG",
                      "LITTLE".  If absent, applications will need to interpret from
                      context indicators.'
                    enum:
                    - BIG
                    - LITTLE
                    type: string
                  Name:
                    description: An optional name of the dataset, e.g. a user friendly
                      file or file collection name.
                    example: Dataset X221/15
                    title: Name
                    type: string
                  SchemaFormatTypeID:
                    description: Relationship to the SchemaFormatType reference value.
                    example: 'namespace:reference-data--SchemaFormatType:CWLS%20LAS3:'
                    pattern: ^[\w\.\-]+:reference-data--SchemaFormatType:[\w\.\-:%]+:[0-9]*$
                    title: Schema Format Type ID
                    type: string
                    x-osdu-relationship:
                    - EntityType: SchemaFormatType
                      GroupType: reference-data
                  TotalSize:
                    description: Total size of the dataset in bytes; for files it
                      is the same as declared in FileSourceInfo.FileSize or the sum
                      of all individual files. Implemented as string. The value must
                      be convertible to a long integer (sizes can become very large).
                    example: 13245217273
                    pattern: '[0-9]+'
                    title: Total Size
                    type: string
                required:
                - DatasetProperties
                title: AbstractDataset
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractDataset:1.0.0
              - $id: AbstractFileCollectionSchema.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: The schema fragment representing file collections.
                properties:
                  DatasetProperties:
                    description: The dataset properties for a file collection.
                    properties:
                      Checksum:
                        description: MD5 checksum of file bytes - a 32 byte hexadecimal
                          number.
                        pattern: ^[0-9a-fA-F]{32}
                        title: MD5 Checksum
                        type: string
                      FileCollectionPath:
                        description: The mandatory path to the file collection. A
                          FileCollectionPath should represent folder level access
                          to a set of files.
                        example: s3://default_bucket/opendes/data/vds-dataset/
                        title: File Collection Path
                        type: string
                      FileSourceInfos:
                        description: Array of file collection members as FileSourceInfo.
                        example:
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-1
                          Name: vds-file-1
                          PreloadFileCreateDate: '2019-12-16T11:46:20.163Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:20:05.356Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-1
                        - ChecksumAlgorithm: MD5
                          FileSource: s3://default_bucket/opendes/data/vds-dataset/vds-file-2
                          Name: vds-file-2
                          PreloadFileCreateDate: '2019-12-16T11:50:40.321Z'
                          PreloadFileCreateUser: somebody@acme.org
                          PreloadFileModifyDate: '2019-12-20T17:59:03.456Z'
                          PreloadFileModifyUser: somebody.else@acme.org
                          PreloadFilePath: s3://staging-area/r7/raw-data/provided/documents/vds-file-2
                        items:
                          $id: AbstractFileSourceInfoSchema.1.0.0.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: A schema fragment to describe file source information.
                          properties:
                            Checksum:
                              description: Checksum of file bytes - a hexadecimal
                                number with even number of bytes.
                              pattern: ^([0-9a-fA-F]{2})+$
                              title: Checksum
                              type: string
                            ChecksumAlgorithm:
                              description: The name of the checksum algorithm e.g.
                                MD5, SHA-256.
                              example: SHA-256
                              title: Checksum Algorithm
                              type: string
                            EncodingFormatTypeID:
                              description: 'Only used in FileCollection where the
                                EncodingFormatType differs from data DatasetDefault
                                specified in data.EncodingFormatTypeID: the media
                                type specification for this dataset.'
                              example: 'namespace:reference-data--EncodingFormatType:application%2Fgeo%2Bjson:'
                              pattern: ^[\w\.\-]+:reference-data--EncodingFormatType:[\w\.\-:%]+:[0-9]*$
                              title: Encoding Format Type ID
                              type: string
                              x-osdu-relationship:
                              - EntityType: EncodingFormatType
                                GroupType: reference-data
                            FileSize:
                              description: Length of file in bytes. Implemented as
                                string. The value must be convertible to a long integer
                                (sizes can become very large).
                              example: '95463'
                              pattern: ^[0-9]+$
                              title: File Size
                              type: string
                            FileSource:
                              description: The location of the file. It can be a relative
                                path. The actual access is provided via the File Service.
                                When used in context of a FileCollection (dataset--FileCollection*)
                                FileSource is a relative path from the FileCollectionPath.
                                It can be used by consumers to pull an individual
                                file if they so choose by concatenating the FileCollectionPath
                                with the FileSource. This property is required.
                              example: s3://default_bucket/r1/data/provided/documents/1000.witsml
                              title: File Source
                              type: string
                            Name:
                              description: Optional, user-friendly file name.
                              example: 1000.witsml
                              title: Name
                              type: string
                            PreloadFileCreateDate:
                              description: Optional create date and time of the file
                                prior to up-loading to the platform.
                              example: '2019-12-16T11:46:20.163Z'
                              format: date-time
                              title: Preload File Create Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileCreateUser:
                              description: Optional user name or reference, who created
                                the file prior to up-loading to the platform.
                              example: somebody@acme.org
                              title: Preload File Create User
                              type: string
                            PreloadFileModifyDate:
                              description: Optional last modified date and time of
                                the file prior to up-loading to the platform.
                              example: '2019-12-20T17:20:05.356Z'
                              format: date-time
                              title: Preload File Modify Date
                              type: string
                              x-osdu-frame-of-reference: DateTime
                            PreloadFileModifyUser:
                              description: Optional user name or reference, who last
                                modified the file prior to up-loading to the platform.
                              example: somebody.else@acme.org
                              title: Preload File Modify User
                              type: string
                            PreloadFilePath:
                              description: File system path to the data file as it
                                existed before loading to the data platform.
                              example: s3://staging-area/r7/raw-data/provided/documents/1000.witsml
                              title: Preload File Path
                              type: string
                          required:
                          - FileSource
                          title: AbstractFileSourceInfoSchema
                          type: object
                          x-osdu-inheriting-from-kind: []
                          x-osdu-license: Copyright 2021, The Open Group \nLicensed
                            under the Apache License, Version 2.0 (the "License");
                            you may not use this file except in compliance with the
                            License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
                            . Unless required by applicable law or agreed to in writing,
                            software distributed under the License is distributed
                            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
                            OF ANY KIND, either express or implied. See the License
                            for the specific language governing permissions and limitations
                            under the License.
                          x-osdu-review-status: Accepted
                          x-osdu-schema-source: osdu:wks:AbstractFileSourceInfoSchema:1.0.0
                        title: File Source Info Array
                        type: array
                      IndexFilePath:
                        description: An optional path to an index file.
                        example: s3://default_bucket/opendes/data/vds-dataset/vds-dataset.index
                        title: Index File Path
                        type: string
                    required:
                    - FileCollectionPath
                    title: Dataset Properties
                    type: object
                required:
                - DatasetProperties
                title: AbstractFileCollection
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractFileCollection:1.0.0
              - $id: https://schema.osdu.opengroup.org/json/abstract/AbstractVectorHeaderMapping.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: Array of objects which define the meaning and format
                  of a tabular structure used in a binary file as a header.  The initial
                  use case is the trace headers of a SEG-Y file.  Note that some of
                  this information may be repeated in the SEG-Y EBCDIC header.
                properties:
                  VectorHeaderMapping:
                    description: Array of objects which define the meaning and format
                      of a tabular structure used in a binary file as a header.  The
                      initial use case is the trace headers of a SEG-Y file.  Note
                      that some of this information may be repeated in the SEG-Y EBCDIC
                      header.
                    items:
                      description: Array of objects which define the meaning and format
                        of a tabular structure used in a binary file as a header.  The
                        initial use case is the trace headers of a SEG-Y file.  Note
                        that some of this information may be repeated in the SEG-Y
                        EBCDIC header.
                      properties:
                        KeyName:
                          description: Relationship to a reference value for a name
                            of a property header such as INLINE, CDPX.
                          pattern: ^[\w\-\.]+:reference-data--HeaderKeyName:[\w\-\.:%]+:[0-9]*$
                          title: Key Name
                          type: string
                          x-osdu-relationship:
                          - EntityType: HeaderKeyName
                            GroupType: reference-data
                        Position:
                          description: Beginning byte position of header value, 1
                            indexed.
                          type: integer
                        ScalarIndicator:
                          description: Enumerated string indicating whether to use
                            the normal scalar field for scaling this field (STANDARD),
                            no scaling (NOSCALE), or override scalar (OVERRIDE).  Default
                            is current STANDARD (such as SEG-Y rev2).
                          enum:
                          - STANDARD
                          - NOSCALE
                          - OVERRIDE
                          title: Scalar Indicator
                          type: string
                        ScalarOverride:
                          description: Scalar value (as defined by standard) when
                            a value present in the header needs to be overwritten
                            for this value.
                          title: Scalar Override
                          type: number
                        UoM:
                          description: Relationship to units of measure reference
                            if header standard is not followed.
                          pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                          title: Unit of Measure
                          type: string
                          x-osdu-relationship:
                          - EntityType: UnitOfMeasure
                            GroupType: reference-data
                        WordFormat:
                          description: Relationship to a reference value for binary
                            data types, such as INT, UINT, FLOAT, IBM_FLOAT, ASCII,
                            EBCDIC.
                          pattern: ^[\w\-\.]+:reference-data--WordFormatType:[\w\-\.:%]+:[0-9]*$
                          title: Word Format
                          type: string
                          x-osdu-relationship:
                          - EntityType: WordFormatType
                            GroupType: reference-data
                        WordWidth:
                          description: Size of the word in bytes.
                          title: Word Width
                          type: integer
                      type: object
                    type: array
                title: AbstractVectorHeaderMapping
                type: object
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-review-status: Accepted
                x-osdu-schema-source: osdu:wks:AbstractVectorHeaderMapping:1.0.0
              - properties:
                  SEGYRevision:
                    description: The SEG-Y standard revision the SEG-Y file set is
                      conforming to.
                    example: rev 0
                    title: SEG-Y Revision
                    type: string
                title: IndividualProperties
                type: object
              - properties:
                  ExtensionProperties:
                    type: object
                title: ExtensionProperties
                type: object
            id:
              description: Previously called ResourceID or SRN which identifies this
                OSDU resource object without version.
              example: namespace:dataset--FileCollection.SEGY:b47f793a-dc9c-5d11-8d59-6cc611a98926
              pattern: ^[\w\.\-]+:dataset--FileCollection.SEGY:[\w\-\.:%]+$
              title: Entity ID
              type: string
            kind:
              description: The schema identification for the OSDU resource object
                following the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
                The versioning scheme follows the semantic versioning, https://semver.org/.
              example: osdu:wks:dataset--FileCollection.SEGY:1.0.0
              pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
              title: Entity Kind
              type: string
            legal:
              $id: AbstractLegalTags.1.0.0.json
              $schema: http://json-schema.org/draft-07/schema#
              additionalProperties: false
              description: Legal meta data like legal tags, relevant other countries,
                legal status. This structure is included by the SystemProperties "legal",
                which is part of all OSDU records. Not extensible.
              properties:
                legaltags:
                  description: The list of legal tags, which resolve to legal properties
                    (like country of origin, export classification code, etc.) and
                    rules with the help of the Compliance Service.
                  items:
                    type: string
                  title: Legal Tags
                  type: array
                otherRelevantDataCountries:
                  description: The list of other relevant data countries as an array
                    of two-letter country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                  items:
                    pattern: ^[A-Z]{2}$
                    type: string
                  title: Other Relevant Data Countries
                  type: array
                status:
                  description: The legal status. Set by the system after evaluation
                    against the compliance rules associated with the "legaltags" using
                    the Compliance Service.
                  pattern: ^(compliant|uncompliant)$
                  title: Legal Status
                  type: string
              required:
              - legaltags
              - otherRelevantDataCountries
              title: Legal Meta Data
              type: object
              x-osdu-inheriting-from-kind: []
              x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                Apache License, Version 2.0 (the "License"); you may not use this
                file except in compliance with the License. You may obtain a copy
                of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                required by applicable law or agreed to in writing, software distributed
                under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                OR CONDITIONS OF ANY KIND, either express or implied. See the License
                for the specific language governing permissions and limitations under
                the License.
              x-osdu-schema-source: osdu:wks:AbstractLegalTags:1.0.0
            meta:
              description: The Frame of Reference meta data section linking the named
                properties to self-contained definitions.
              items:
                $id: AbstractMetaItem.1.0.0.json
                $schema: http://json-schema.org/draft-07/schema#
                description: A meta data item, which allows the association of named
                  properties or property values to a Unit/Measurement/CRS/Azimuth/Time
                  context.
                oneOf:
                - properties:
                    kind:
                      const: Unit
                      description: The kind of reference, 'Unit' for FrameOfReferenceUOM.
                      title: UOM Reference Kind
                    name:
                      description: The unit symbol or name of the unit.
                      example: ft[US]
                      title: UOM Unit Symbol
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the Unit.
                      example: '{"abcd":{"a":0.0,"b":1200.0,"c":3937.0,"d":0.0},"symbol":"ft[US]","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                      title: UOM Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides Unit context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - HorizontalDeflection.EastWest
                      - HorizontalDeflection.NorthSouth
                      items:
                        type: string
                      title: UOM Property Names
                      type: array
                    unitOfMeasureID:
                      description: SRN to unit of measure reference.
                      example: 'namespace:reference-data--UnitOfMeasure:ftUS:'
                      pattern: ^[\w\-\.]+:reference-data--UnitOfMeasure:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: UnitOfMeasure
                        GroupType: reference-data
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceUOM
                  type: object
                - properties:
                    coordinateReferenceSystemID:
                      description: SRN to CRS reference.
                      example: 'namespace:reference-data--CoordinateReferenceSystem:EPSG.32615:'
                      pattern: ^[\w\-\.]+:reference-data--CoordinateReferenceSystem:[\w\-\.:%]+:[0-9]*$
                      type: string
                      x-osdu-relationship:
                      - EntityType: CoordinateReferenceSystem
                        GroupType: reference-data
                    kind:
                      const: CRS
                      description: The kind of reference, constant 'CRS' for FrameOfReferenceCRS.
                      title: CRS Reference Kind
                    name:
                      description: The name of the CRS.
                      example: NAD27 * OGP-Usa Conus / North Dakota South [32021,15851]
                      title: CRS Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying the CRS.
                      example: '{"authCode":{"auth":"EPSG","code":"32615"},"type":"LBC","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_15N","wkt":"PROJCS[\"WGS_1984_UTM_Zone_15N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-93.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32615]]"}'
                      title: CRS Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides CRS context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - KickOffPosition.X
                      - KickOffPosition.Y
                      items:
                        type: string
                      title: CRS Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceCRS
                  type: object
                - properties:
                    kind:
                      const: DateTime
                      description: The kind of reference, constant 'DateTime', for
                        FrameOfReferenceDateTime.
                      title: DateTime Reference Kind
                    name:
                      description: The name of the DateTime format and reference.
                      example: UTC
                      title: DateTime Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying DateTime reference.
                      example: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                      title: DateTime Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides DateTime context to. Data structures, which
                        come in a single frame of reference, can register the property
                        name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Acquisition.StartTime
                      - Acquisition.EndTime
                      items:
                        type: string
                      title: DateTime Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceDateTime
                  type: object
                - properties:
                    kind:
                      const: AzimuthReference
                      description: The kind of reference, constant 'AzimuthReference',
                        for FrameOfReferenceAzimuthReference.
                      title: AzimuthReference Reference Kind
                    name:
                      description: The name of the CRS or the symbol/name of the unit.
                      example: TrueNorth
                      title: AzimuthReference Name
                      type: string
                    persistableReference:
                      description: The self-contained, persistable reference string
                        uniquely identifying AzimuthReference.
                      example: '{"code":"TrueNorth","type":"AZR"}'
                      title: AzimuthReference Persistable Reference
                      type: string
                    propertyNames:
                      description: The list of property names, to which this meta
                        data item provides AzimuthReference context to. Data structures,
                        which come in a single frame of reference, can register the
                        property name, others require a full path like "Data.StructureA.PropertyB"
                        to define a unique context.
                      example:
                      - Bearing
                      items:
                        type: string
                      title: AzimuthReference Property Names
                      type: array
                  required:
                  - kind
                  - persistableReference
                  title: FrameOfReferenceAzimuthReference
                  type: object
                title: Frame of Reference Meta Data Item
                x-osdu-inheriting-from-kind: []
                x-osdu-license: Copyright 2021, The Open Group \nLicensed under the
                  Apache License, Version 2.0 (the "License"); you may not use this
                  file except in compliance with the License. You may obtain a copy
                  of the License at http://www.apache.org/licenses/LICENSE-2.0 . Unless
                  required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
                  OR CONDITIONS OF ANY KIND, either express or implied. See the License
                  for the specific language governing permissions and limitations
                  under the License.
                x-osdu-schema-source: osdu:wks:AbstractMetaItem:1.0.0
              title: Frame of Reference Meta Data
              type: array
            modifyTime:
              description: Timestamp of the time at which this version of the OSDU
                resource object was created. Set by the System. The value is a combined
                date-time string in ISO-8601 given in UTC.
              example: '2020-12-16T11:52:24.477Z'
              format: date-time
              title: Resource Object Version Creation DateTime
              type: string
            modifyUser:
              description: The user reference, which created this version of this
                resource object. Set by the System.
              example: some-user@some-company-cloud.com
              title: Resource Object Version Creation User Reference
              type: string
            tags:
              additionalProperties:
                type: string
              description: A generic dictionary of string keys mapping to string value.
                Only strings are permitted as keys and values.
              example:
                NameOfKey: String value
              title: Tag Dictionary
              type: object
            version:
              description: The version number of this OSDU resource; set by the framework.
              example: 1562066009929332
              format: int64
              title: Version Number
              type: integer
          required:
          - kind
          title: FileCollection.SEGY
          type: object
          x-osdu-inheriting-from-kind:
          - kind: osdu:wks:AbstractDataset:1.0.0
            name: Dataset
          - kind: osdu:wks:AbstractFileCollection:1.0.0
            name: FileCollection
          x-osdu-license: Copyright 2021, The Open Group \nLicensed under the Apache
            License, Version 2.0 (the "License"); you may not use this file except
            in compliance with the License. You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0 . Unless required by applicable
            law or agreed to in writing, software distributed under the License is
            distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the specific language
            governing permissions and limitations under the License.
          x-osdu-review-status: Accepted
          x-osdu-schema-source: osdu:wks:dataset--FileCollection.SEGY:1.0.0
        seismicmeta:
          description: Seismic metadata to be stored as dataecosystem storage record.
          properties:
            data:
              properties: {}
              type: object
            kind:
              type: string
          type: object
        type:
          type: string
      type: object
    DatasetSize:
      example:
        computed_size: '35461'
        computed_size_date: Thu Mar 16 2023 16:16:40 GMT-0500 (Central Daylight Time)
      properties:
        computed_size:
          description: The size of the dataset in bytes..
          type: number
        computed_size_date:
          description: The date of when the dateset size was computed.
          type: string
      required:
      - computed_size
      - computed_size_date
    ImpTokenPatchRequest:
      example:
        refresh-url: https://httpstat.us/200
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
      properties:
        refresh-url:
          description: New endpoint that the seismic store service will invoke to
            check if the impersonation token can be refreshed.
          type: string
        token:
          description: Impersonation token that was previously issued.
          type: string
      required:
      - token
      - refresh-url
    ImpTokenRequest:
      example:
        refresh-url: https://httpstat.us/200
        resources:
        - readonly: true
          resource: sd://tnx01/spx01
        - readonly: false
          resource: sd://tnx01/spx02
        - resource: sd://tnx01/spx03
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
      properties:
        refresh-url:
          description: A web service endpoint that the seismic store service will
            invoke to check if the impersonation token can be refreshed.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        token:
          description: Impersonation token that was previously issued.
          type: string
      required:
      - token
      - resources
      - refresh-url
    ImpersonationToken:
      example:
        context: xf420cvrv303fm4vksvdkvnejvrjbinb0exdnberonswc2mvmalksdvdeakvwrmk
        expires_in: 3600
        impersonation_token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
        token_type: Bearer
      properties:
        context:
          description: the Impersonation token context.
          type: string
        expires_in:
          description: Token expiration time.
          type: number
        impersonation_token:
          description: The Impersonation token.
          type: string
        token_type:
          description: Token type.
          type: string
      required:
      - impersonation_token
      - token_type
      - expires_in
      - context
    ImpersonationTokenRequest:
      example:
        metadata:
          jobId: 1234
        resources:
        - readonly: true
          resource: sd://tnx01/spx01
        - readonly: false
          resource: sd://tnx01/spx02
      properties:
        metadata:
          description: A general field to set extra meta-information to the impersonation
            token signature. These are saved along with the token signatures.
          type: object
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      required:
      - resources
    LsDatasets:
      description: Array of directories and datasets inside a subproject.
      example:
      - folderA/
      - folderB/
      - dataset01
      - dataset02
      - dataset03
      items:
        type: string
      type: array
    LsPaginatedDatasets:
      example:
        datasets:
        - folderA/
        - folderB/
        - dataset01
        nextPageCursor: abc1234
      properties:
        datasets:
          description: Array of datasets inside the subproject.
          items:
            type: string
          type: array
        nextPageCursor:
          description: Next cursor for pagination.
          type: string
      required:
      - datasets
      - nextPageCursor
    PaginatedDatasets:
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
        nextPageCursor:
          example: next-page-token-3rt431v41-4515351
          type: string
    RefreshTokenRequest:
      example:
        token: ya29.fgdgsdngevrjbinb0exdnberoibnerbnerber-fdsfwefwe_cece.rfd43f3
      properties:
        token:
          description: Impersonation token
          type: string
      required:
      - token
    Resource:
      properties:
        readonly:
          type: boolean
        resource:
          type: string
      required:
      - resource
    Status:
      example:
        status: running
      properties:
        status:
          type: string
      required:
      - status
    SubProject:
      example:
        acls:
          admins:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
        admin: test@email
        gcs_bucket: subproject-bucket
        ltag: Slb-Private-USA-EHC
        name: spx01
        storage_class: MULTI_REGIONAL
        storage_location: US
        tenant: tnx01
      properties:
        access_policy:
          default: uniform
          description: Access policy for the subproject.
          enum:
          - uniform
          - dataset
          type: string
        acls:
          description: ACLs with admin groups and viewer groups for the subproject.
          properties:
            admins:
              items:
                type: string
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
        ltag:
          description: Legal tag for the subproject.
          type: string
        name:
          description: Name of the subproject.
          type: string
        storage_class:
          description: Storage class for the bucket.
          type: string
        storage_location:
          description: Storage location for the bucket.
          type: string
        tenant:
          description: Name of the tenant.
          type: string
      required:
      - name
      - tenant
      - storage_class
      - storage_location
      - ltag
      - access_policy
    SubProjectCreateBody:
      example:
        access_policy: uniform
        acls:
          admins:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
        admin: admin@email
        storage_class: MULTI_REGIONAL
        storage_location: US
      properties:
        access_policy:
          default: uniform
          description: 'The datasets access level mode: "uniform" (uniform data access
            to all subprojects datasets) or "datasets" (acl can be applied at dataset
            level)'
          enum:
          - uniform
          - dataset
          type: string
        acls:
          description: The entitlement groups to enable subproject access as admin
            or viewer. If not specified, default entitlement data groups will be created.
          properties:
            admins:
              items:
                type: string
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
        admin:
          description: An optional user to set as admin. The user will be added in
            the first admins acl group
          type: string
        storage_class:
          description: Storage class for the bucket (Google Required Only)
          type: string
        storage_location:
          description: Storage location for the bucket (Google Required Only)
          type: string
    SubProjectPatchBody:
      example:
        access_policy: dataset
        acls:
          admins:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          - data.sdms.tenant.subproject.1f1tr7fe-fb0e-402a-b725-606723e5356n.admin@slb.p4d.cloud.slb-ds.com
          viewers:
          - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
      properties:
        access_policy:
          default: dataset
          description: Access Policy for the subproject.
          type: string
        acls:
          description: ACLs with admin groups and viewer groups. Existing acls will
            be replaced with the provided acls.
          properties:
            admins:
              items:
                type: string
              type: array
            viewers:
              items:
                type: string
              type: array
          type: object
    Tenant:
      example:
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
        esd: '{datapartition}.{domain}.com'
        gcpid: datapartition
        name: datapartition
      properties:
        default_acls:
          description: Entitlements authorization group to manage tenant administrators.
          type: string
        esd:
          description: Entitlements group Sub Domain (ESD). For instance, if the entitlements
            group is users.datalake.viewers@{datapartition}.{domain}.com, the esd
            value is {datapartition}.{domain}.com. It has to start with the name of
            the data partition.
          type: string
        gcpid:
          description: Google cloud project id associated with the tenant. For other
            providers, name of the data partition.
          type: string
        name:
          description: Name of the tenant.
          type: string
      required:
      - name
      - esd
      - gcpid
      - default_acls
    TenantCreateBody:
      example:
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
        esd: '{datapartition}.{domain}.com'
        gcpid: datapartition
      properties:
        default_acls:
          description: Entitlements authorization group to manage tenant administrators.
          type: string
        esd:
          description: Entitlements group Sub Domain (ESD). For instance, if the entitlements
            group is users.datalake.viewers@{datapartition}.{domain}.com, the esd
            value is {datapartition}.{domain}.com. It must start with the name of
            the data partition.
          type: string
        gcpid:
          description: Google cloud project id associated with the tenant. For other
            providers, name of the data partition.
          type: string
      required:
      - gcpid
      - esd
      - default_acls
    UserAddRequest:
      example:
        email: test@slb.com
        group: editor
        path: sd://slb/test_project
      properties:
        email:
          description: Email address of the user. Note that this field is used as
            a principal identifer for entitlements-svc and be configured using the
            env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS runtime.
          type: string
        group:
          description: Role to be assigned to the user.
          enum:
          - viewer
          - editor
          - admin
          type: string
        path:
          description: Seismic store path in the format sd://tenant/subproject.
          type: string
      required:
      - email
      - path
      - group
    UserRemoveRequest:
      example:
        email: test@email
        path: sd://slb/test_project
      properties:
        email:
          description: Email address of the user. Note that this field is used as
            a principal identifer for entitlements-svc and be configured using the
            env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS runtime.
          type: string
        path:
          description: Seismic store path in the format sd://tenant/subproject.
          type: string
      required:
      - email
      - path
    UserRoles:
      properties:
        roles:
          description: Array of arrays with each array containing subproject and role
            of the user for the subproject.
          example:
          - - /spx01
            - admin
          - - /spx02
            - viewer
          items:
            example:
            - /spx01
            - admin
            items:
              type: string
            type: array
          type: array
      required:
      - roles
  securitySchemes:
    bearer:
      in: header
      name: Authorization
      type: apiKey
info:
  description: Seismic Data Management APIs to store and manage seismic datasets .
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Seismic DMS Service
  version: 3.0.0
openapi: 3.0.0
paths:
  /app:
    get:
      description: '<ul>

        <li>Retrieve the list of the registered applications in the seismic store.</li>

        <li>Required roles: users.datalake.admin</li></ul>

        '
      operationId: app-list
      parameters:
      - description: Seismic store tenant path, sd://tenant.
        in: query
        name: sdpath
        required: true
        schema:
          default: sd://common
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - app01@email
                - app02@email
                items:
                  type: string
                type: array
          description: Retrieved a list of all the registered applications successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the list of registered applications.
      tags:
      - Apps
    post:
      description: '<ul><li>Register a new application in the seismic store.</li><li>Required
        roles: users.datalake.admin</li></ul>'
      operationId: app-register
      parameters:
      - description: Service account email of the application.
        in: query
        name: email
        required: true
        schema:
          type: string
      - description: Seismic store tenant path, sd://tenant.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Registration of the application was successful.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Register a new application.
      tags:
      - Apps
  /app/trusted:
    get:
      description: '<ul>

        <li>Return the list of the trusted application in seismic store tenant.

        </li><li>Required roles: users.datalake.admin</li></ul>

        '
      operationId: trustedapp-list
      parameters:
      - description: Seismic store tenant path in the format sd://tenant.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - app01@email
                - app02@email
                items:
                  type: string
                type: array
          description: Retrieved the list of all the trusted applications in the tenant.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: List the trusted applications in a seismic store tenant.
      tags:
      - Apps
    post:
      description: '<ul>

        <li>Set a registered application as a trusted application in the seismic store.</li>

        <li>Required roles: users.datalake.admin</li></ul>

        '
      operationId: trustedapp-register
      parameters:
      - description: Service account email of the application.
        in: query
        name: email
        required: true
        schema:
          type: string
      - description: Seismic store tenant path, sd://tenant.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Marking the application as a trusted application was successful.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Set a registered application as a trusted application.
      tags:
      - Apps
  /dataset/tenant/{tenantid}/subproject/{subprojectid}:
    get:
      description: "<ul>\n  <li>Return the list of datasets in a sub-project. The\
        \ list can be filtered by gtags. Support pagination.</li>\n  <li>Required\
        \ roles: subproject.admin, subproject.viewer</li>\n</ul>\n"
      operationId: dataset-list
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Gtags associated with dataset metadata.
        explode: true
        in: query
        name: gtag
        schema:
          items:
            type: string
          type: array
      - description: Limit the number of datasets in the response
        in: query
        name: limit
        schema:
          type: string
      - description: Cursor for pagination on the datasets list
        in: query
        name: cursor
        schema:
          type: string
      - description: translate the user-id to a more human readable user info
        in: query
        name: translate-user-info
        schema:
          default: true
          enum:
          - true
          - false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasets'
          description: Paginated dataset list with nextPageCursor. If the request
            does not provide limit or cursor the results will be the whole path conent
            and the response is a plain array of datasets [ {dataset1}, {datase2},
            ... ]
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Get the list of datasets in a subproject.
      tags:
      - Dataset
    post:
      description: "<ul>\n  <li>Return the list of datasets in a sub-project. The\
        \ list can be filtered by gtags. Support pagination.</li>\n  <li>Required\
        \ roles: subproject.admin, subproject.viewer</li>\n</ul>\n"
      operationId: dataset-list-post
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: translate the user-id to a more human readable user info
        in: query
        name: translate-user-info
        schema:
          default: true
          enum:
          - true
          - false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetListBody'
        description: Request body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDatasets'
          description: Paginated dataset list with nextPageCursor. If the request
            does not provide limit or cursor the results will be the whole path conent
            and the response is a plain array of datasets [ {dataset1}, {datase2},
            ... ]
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Get the list of datasets in a subproject.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}:
    delete:
      description: '<ul> <li>Delete a dataset in the seismic store.</li> <li>Required
        roles: <ul> <li>subproject.admin: if the applied subproject policy is ''uniform''</li>
        <li>dataset.admin: if the applied subproject policy is ''dataset''</li> </ul>
        </li></ul>'
      operationId: dataset-delete
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The resource was deleted successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Delete a dataset.
      tags:
      - Dataset
    get:
      description: '<ul> <li>Return the dataset metadata from seismic store.</li>
        <li>Required roles: <ul> <li>subproject.admin, subproject.viewer: if the applied
        subproject policy is ''uniform''</li> <li>dataset.admin, dataset.viewer: if
        the applied subproject policy is ''dataset''</li> </ul> </li></ul>'
      operationId: dataset-get
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Include the seismic storage metadata record if it exists.
        in: query
        name: seismicmeta
        required: false
        schema:
          type: boolean
      - description: translate the user-id to a more human readable user info
        in: query
        name: translate-user-info
        schema:
          default: true
          enum:
          - true
          - false
          type: boolean
      - description: Retrieve a specific version of the seismic storage metadata record
        in: query
        name: record-version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Metadata of the dataset.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve a dataset.
      tags:
      - Dataset
    patch:
      description: "<ul>\n<li>Update the dataset meta information in the seismic store\
        \ or close (unlock) the dataset. If the endpoint is used without the close\
        \ parameter, at least one body field is required or the endpoint will return\
        \ an error.</li>\n<li>Required roles:\n  <ul>\n    <li>subproject.admin: if\
        \ the applied subproject policy is 'uniform'</li>\n    <li>dataset.admin:\
        \ if the applied subproject policy is 'dataset'</li>\n  </ul>\n</li>\n<li>Patchable\
        \ fields: <ul>\n<li><b>dataset_new_name:</b> new name to use for the dataset\
        \ (rename).</li>\n<li><b>filemetadata:</b> This is a seismic store specific\
        \ field and describes how the physical data is stored in the cloud storage\
        \ system (GCS/AzureContainer etc.). This metadata is mainly used by client\
        \ libraries to correctly reconstruct the dataset. For example you can store\
        \ a dataset as truncated in multiple objects of 64MB each, name them from\
        \ 0 to N and save the filemetadata = \u201C{nObject: N, totalSize: 1024, objsize:\
        \ 64, sizeUnit: MB}\u201D.</li>\n<li><b>last_modified_date:</b> Mark this\
        \ field as true to update the dataset last modified date.</li>\n<li><b>gtags:</b>\
        \ Upsert tags to an existing dataset metadata. If the dataset metadata already\
        \ has gtags, then new gtags are appended to this list.</li>\n<li><b>ltag:</b>\
        \ Update the existing legalTag value.</b></li>\n<li><b>readonly:</b> Update\
        \ the dataset mode to readonly (true) or to read/write (false).</li></ul></li></ul>\n"
      operationId: dataset-patch
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Non null sbit value of the dataset. Using this value here will
          close the dataset.
        in: query
        name: close
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetPatch'
        description: Request body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Metadata of the patched dataset.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: 'Locked. The error message contains the Reason in the form
            <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code
            are: <ul>

            <li>WL (Write Locked).</li>

            <li>RL (Read Locked).</li>

            <li>CL (Cannot be Locked).</li>

            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b>
            indicates the dataset is Read Locked with a TTL of 3600 seconds.

            '
      summary: Patch the dataset metadata.
      tags:
      - Dataset
    post:
      description: '<ul><li>Register a new dataset in the seismic store.</li><li>Required
        roles: subproject.admin</li></ul>'
      operationId: dataset-register
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Legal tag of the dataset.
        in: header
        name: ltag
        required: false
        schema:
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetRegisterBody'
        description: Request body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Registered dataset metadata.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: 'Locked. The error message contains the Reason in the form
            <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code
            are:

            <li> WL (Write Locked). </li>

            <li> RL (Read Locked). </li>

            <li>CL (Cannot be Locked).</li>

            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b>
            indicates the dataset is Read Locked with a TTL of 3600 seconds.

            '
      summary: Register a new dataset.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/ctagcheck:
    get:
      description: '<ul><li>Check if the provided dataset cTag match the one stored
        in the metadata catalog.</li><li>Required roles: subproject.admin, subproject.viewer</li></ul>'
      operationId: ctag-check
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Ctag to be validated.
        in: query
        name: ctag
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example: 'true'
                type: boolean
          description: Return true if the ctag is valid or false if it is invalid.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Validate if a dataset ctag matches the pre-existing ctag in metadata
        catalog.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/gtags:
    put:
      description: "<ul>\n  <li>Upsert tags to an existing dataset metadata. If the\
        \ dataset metadata already has gtags, then  new gtags are appended to this\
        \ list.</li>\n  <li>Required roles:\n    <ul>\n      <li>subproject.admin:\
        \ if the applied subproject policy is 'uniform'</li>\n      <li>dataset.admin:\
        \ if the applied subproject policy is 'dataset'</li>\n    </ul>\n  </li>\n\
        </ul>\n"
      operationId: add-tag
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Gtags array list.
        explode: true
        in: query
        name: gtag
        required: true
        schema:
          items:
            default: tag1
            type: string
          type: array
      responses:
        '200':
          description: Gtags were upserted to the dataset metadata.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Upsert tags to a dataset.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/lock:
    put:
      description: "<ul>\n  <li>Open a dataset for read or write and lock its state.</li>\n\
        \  <li>Required roles open lock for write:\n    <ul>\n      <li>subproject.admin:\
        \ if the applied subproject policy is 'uniform'</li>\n      <li>dataset.admin:\
        \ if the applied subproject policy is 'dataset'</li>\n    </ul>\n  </li>\n\
        \  <li>Required roles open lock for read:\n    <ul>\n      <li>subproject.admin,\
        \ subproject.viewer: if the applied subproject policy is 'uniform'</li>\n\
        \      <li>dataset.admin, dataset.viewer: if the applied subproject policy\
        \ is 'dataset'</li>\n    </ul>\n  </li>\n</ul>\noperationId: dataset-lock\n"
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Type of the lock which can be set to 'read' (default) or 'write'.
        in: query
        name: openmode
        required: false
        schema:
          type: string
      - description: Session identifier issued for a previous write lock acquisition
          operation.
        in: query
        name: wid
        required: false
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Acquired a lock and the return value is the dataset metadata
            with session identifier stored in the 'sbit' attribute.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '423':
          description: 'Locked. The error message contains the Reason in the form
            <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code
            are: <ul>

            <li>WL (Write Locked).</li>

            <li>RL (Read Locked).</li>

            <li>CL (Cannot be Locked).</li>

            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b>
            indicates the dataset is Read Locked with a TTL of 3600 seconds.

            '
      summary: Acquire a lock for a dataset id.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/permission:
    get:
      description: "<ul>\n  <li>Retrieve the access permission of a user on a dataset.</li>\n\
        \  <li>Required roles:\n    <ul>\n      <li>subproject.admin, subproject.viewer:\
        \ if the applied subproject policy is 'uniform'</li>\n      <li>dataset.admin,\
        \ dataset.viewer: if the applied subproject policy is 'dataset'</li>\n   \
        \ </ul>\n  </li>\n</ul>\n"
      operationId: dataset-permission
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path for the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetPermission'
          description: User access permission on the dataset.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the access permissions of a user on a dataset id.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/size:
    post:
      description: '<ul>

        <li>Compute and retrieve the size of a dataset and the date of when the size
        was computed.</li>

        <li>Required roles: subproject.admin</li></ul>

        '
      operationId: dataset-size
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      - description: Hierarchical path of the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSize'
          description: Size of the dataset and the date of when the size was computed
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Compute and retrieve the size of a dataset and the date of when the
        size was computed
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/unlock:
    put:
      description: "<ul>\n  <li>Removes the lock for a dataset id.</li>\n  <li>Required\
        \ roles:\n    <ul>\n      <li>subproject.admin: if the applied subproject\
        \ policy is 'uniform'</li>\n      <li>dataset.admin: if the applied subproject\
        \ policy is 'dataset'</li>\n    </ul>\n  </li>\n</ul>\n"
      operationId: dataset-lock-rm
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Hierarchical path for the dataset.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Name of the dataset.
        in: path
        name: datasetid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Removed the lock value associated with dataset id.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '423':
          description: 'Locked. The error message contains the Reason in the form
            <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code
            are: <ul>

            <li>WL (Write Locked).</li>

            <li>RL (Read Locked).</li>

            <li>CL (Cannot be Locked).</li>

            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b>
            indicates the dataset is Read Locked with a TTL of 3600 seconds.

            '
      summary: Remove the lock associated with a dataset id.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/exist:
    post:
      description: '<ul>

        <li>Check if the dataset exists.</li>

        <li>Required roles: subproject.admin, subproject.viewer</li></ul>

        '
      operationId: dataset-exist
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/DatasetCheckList'
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - true
                - false
                items:
                  type: boolean
                type: array
          description: A list of Boolean values for all the input datasets in the
            request body. If a value is true, then the corresponding dataset exists
            and if it is false, then the dataset does not exist.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Check to see if a list of datasets exists in the subproject.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/readdsdirfulllist:
    get:
      description: '<ul>

        <li>List datasets and sub-directories for a directory path.</li>

        <li>Required roles: subproject.admin, subproject.viewer</li></ul>

        '
      operationId: dataset-read-directory
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: The tenant project name.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: The sub-project name.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: The hierarchy path.
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetAndDirectories'
          description: The list of datasets and directories in the requested directory
            path.
      summary: Content list.
      tags:
      - Dataset
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/sizes:
    post:
      description: '<ul>

        <li>Return a list with the sizes of the requested datasets.</li>

        <li>The correctness is not guarantee since this API returns sizes stored by
        the user in the dataset manifest.</li>

        <li>This API is deprecated, please using /size endpoint to compute and retrieve
        the size information</li>

        <li>Required roles: subproject.admin, subproject.viewer</li></ul>

        '
      operationId: dataset-sizes
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Name of the tenant
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/DatasetCheckList'
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - 1024
                - -1
                items:
                  type: number
                type: array
          description: The list of sizes of all the datasets. If the dataset does
            not exist, the size returns -1.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the size of datasets.
      tags:
      - Dataset(Deprecated)
  /impersonation-token:
    post:
      description: '<ul><li>Generate a credential token to impersonate user access
        for a set of subproject resources.</li><li>Required roles: app.trusted</li></ul>'
      operationId: impersonation-token-generate
      parameters:
      - description: The credential of the user to impersonate.
        in: header
        name: user-token
        required: true
        schema:
          default: ''
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationTokenRequest'
        description: Request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
          description: The impersonation token has been successfully created.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Create an impersonation token credential.
      tags:
      - Impersonation Token
    put:
      description: '<ul><li>Refresh an impersonation credential token.</li><li>Required
        roles: app.trusted</li></ul>'
      operationId: impersonation-token-refresh
      parameters:
      - description: The impersonation token to refresh.
        in: header
        name: impersonation-token
        required: true
        schema:
          default: ''
          type: string
      - description: The impersonation token context.
        in: header
        name: impersonation-token-context
        required: true
        schema:
          default: ''
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
          description: Refreshed impersonation credential token successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Refresh the impersonation credential token.
      tags:
      - Impersonation Token
  /imptoken:
    patch:
      description: '<ul>

        <li>Patch an impersonation credential token''s refresh url and generate a
        new impersonation token.</li>

        <li>Required roles: none</li></ul>

        '
      operationId: imp-token-patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpTokenPatchRequest'
        description: Request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
          description: Generated impersonation token successfully and its refresh
            url is updated.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Patch an impersonation credential token's refresh url and generate
        a new impersonation token.
      tags:
      - Impersonation Token (Obsolete)
    post:
      description: '<ul>

        <li>Generate an impersonation credential token of a user for a set of subproject
        resources.</li>

        <li>Required roles: app.trusted</li></ul>

        '
      operationId: imp-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpTokenRequest'
        description: Request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
          description: Generated a impersonation credentials token successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Generate impersonation credentials token.
      tags:
      - Impersonation Token (Obsolete)
    put:
      description: '<ul><li>Refresh an impersonation credential token.</li><li>Required
        roles: none</li></ul>'
      operationId: imp-token-refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        description: Request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersonationToken'
          description: Refreshed impersonation credential token successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      security:
      - bearer: []
      summary: Refresh an impersonation credential token.
      tags:
      - Impersonation Token (Obsolete)
  /subproject/tenant/{tenantid}:
    get:
      description: '<ul><li>Return the list of sub-projects in a tenant.</li><li>Required
        roles: users.datalake.admin</li></ul>'
      operationId: sub-project-list
      parameters:
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubProject'
                type: array
          description: Retrieved the list of subprojects in the tenant successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: List subprojects in a tenant.
      tags:
      - SubProject
  /subproject/tenant/{tenantid}/subproject/{subprojectid}:
    delete:
      description: '<ul><li>Delete a subproject in seismic store.</li><li>Required
        roles: users.datalake.admin</li></ul>'
      operationId: subproject-delete
      parameters:
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Deletion of the subproject completed.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Delete a subproject.
      tags:
      - SubProject
    get:
      description: '<ul><li>Return the metadata for a requested sub-project.</li><li>Required
        roles: subproject.admin</li></ul>'
      operationId: subproject-get
      parameters:
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: translate the user-id to a more human readable user info
        in: query
        name: translate-user-info
        schema:
          default: true
          enum:
          - true
          - false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
          description: Retrieved subproject metadata successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the subproject metadata.
      tags:
      - SubProject
    patch:
      description: "<ul>\n  <li>Patch a subproject metadata in seismic store.</li>\n\
        \  <li>Required roles: subproject.admin</li>\n  <li>Possible actions:</li>\n\
        \  <ul>\n    <li>legal tag and/or ACLs groups can be patched by providing\
        \ new values</li>\n    <li>access policy can be changed from <i>uniform</i>\
        \ to <i>dataset</i></li>\n    <li><b>NOTE:</b> It is not possible to change\
        \ subproject access policy from <i>dataset</i> to <i>uniform</i></li>\n  \
        \  <li><b>NOTE:</b> This operation is eventual consistent and it can take\
        \ up to 5s before it gets completely applied</li>\n  </ul>\n</ul>\n"
      operationId: subproject-patch
      parameters:
      - description: Legal tag of the subproject.
        in: header
        name: ltag
        required: true
        schema:
          type: string
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      - description: Name of the subproject.
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: True if the legal tags of all datasets in a subproject needs
          to be updated.
        in: query
        name: recursive
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubProjectPatchBody'
        description: Request body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
          description: Updated subproject metadata successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Patch a subproject's metadata.
      tags:
      - SubProject
    post:
      description: '<ul>

        <li>Creates a new subproject resource in seismic store.</li>

        <li>Required roles: users.datalake.admin</li></ul>

        '
      operationId: subproject-create
      parameters:
      - description: A valid compliance legal tag. It can be generated and managed
          via core-compliance-service.
        in: header
        name: ltag
        schema:
          type: string
      - description: The subproject name. It must match the regex <b>^[a-z][a-z\d\-]*[a-z\d]$</b>
        in: path
        name: subprojectid
        required: true
        schema:
          type: string
      - description: The tenant name - In OSDU this match the data-partition-id
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubProjectCreateBody'
        description: Request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProject'
          description: The registered subproject.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
      summary: Create a new subproject.
      tags:
      - SubProject
  /svcstatus:
    get:
      description: '<ul><li>Return the seismic store service status.</li><li>Required
        roles: none</li></ul>'
      operationId: service-status
      responses:
        '200':
          content:
            application/json:
              schema:
                example: service OK
                type: string
          description: Service status.
      security:
      - bearer: []
      summary: Seismic store service status (fast check).
      tags:
      - General
  /svcstatus/access:
    get:
      description: '<ul><li>Validates if the token audience is allowed</li><li>Required
        roles: none</li></ul>'
      operationId: service-status-check
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: User token audience is allowed by seismic store service.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      summary: Seismic store service access check.
      tags:
      - General
  /tenant/sdpath:
    get:
      description: '<ul><li>Return the seistore path to a tenant associated with the
        data partition.</li><li>Required roles: none</li></ul>'
      operationId: tenant-sdpath
      parameters:
      - description: Datapartition of the tenant.
        in: query
        name: datapartition
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example: sd://tenant01
                type: string
          description: Seismic store path to the tenant retrieved successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the tenant seismic store path.
      tags:
      - Tenant (Obsolete)
  /tenant/{tenantid}:
    get:
      description: '<ul><li>Return the tenant metadata.</li><li>Required roles: seistore.system.admin</li></ul>'
      operationId: tenant-get
      parameters:
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Retrieved subproject metadata successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the tenant metadata.
      tags:
      - Tenant
    post:
      description: '<ul><li>Register a data partition in seismic-dms.</li><li>Required
        roles: users.datalake.admin</li></ul>'
      operationId: tenant-create
      parameters:
      - description: Name of the tenant.
        in: path
        name: tenantid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreateBody'
        description: Request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: Creation of the tenant was successful.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
      summary: Register a seismic-dms tenant.
      tags:
      - Tenant
  /user:
    delete:
      description: '<ul><li>Remove a user from subproject default authorization groups
        if exists, otherwise, remove it from the first authorization group.</li><li>Required
        roles: subproject.admin</li></ul>'
      operationId: user-rm
      parameters:
      - description: Email of the user to remove.
        in: query
        name: email
        required: true
        schema:
          type: string
      - description: Path of the subproject.
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Deletion of user from a subproject.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Remove a user from a subproject.
      tags:
      - Users
    get:
      description: '<ul><li>List users in subproject''s role-based authorization groups.</li><li>Required
        roles: subproject.admin</li></ul>'
      operationId: user-list
      parameters:
      - description: Seismic store path, sd://tenant/sub-project.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - - userA@email
                  - admin
                - - userB@email
                  - editor
                items:
                  example:
                  - userA@email
                  - admin
                  items:
                    type: string
                  type: array
                type: array
          description: Retrieved sub-project users in admin, viewer, and editor groups
            successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: List users in a subproject's role-based authorization groups.
      tags:
      - Users
    put:
      description: '<ul><li>Add a user to a subproject default authorization group
        if it exists, otherwise, add the user to the first group.</li><li>Required
        roles: subproject.admin</li></ul>'
      operationId: user-add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddRequest'
        description: Request body
        required: true
      responses:
        '200':
          description: User was successfully added to a sub-project authorization
            group.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Add a user to a seismic store subproject authorization group.
      tags:
      - Users
  /user/roles:
    get:
      description: '<ul><li>Retrieve user role in all subprojects of the tenant.</li><li>Required
        roles: none/li></ul>'
      operationId: user-roles
      parameters:
      - description: Seismic store tenant path, sd://tenant.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoles'
          description: Retrieved user roles in all subprojects of the tenant.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve user role in all subprojects of the tenant.
      tags:
      - Users
  /utility/cp:
    post:
      description: "<ul>\n<li>Copy a seismic store dataset. The source and destination\
        \ dataset must be in the same sub-project.</li>\n<li>Required roles:\n  <ul>\n\
        \    <li>subproject.admin, subproject.viewer: if the applied subproject policy\
        \ is 'uniform'</li>\n    <li>dataset.admin, dataset.viewer: if the applied\
        \ subproject policy is 'dataset'</li>\n  </ul>\n</li>\n</ul>\n"
      operationId: cp
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Seismic store source dataset path.
        in: query
        name: sdpath_from
        required: true
        schema:
          type: string
      - description: Seismic store destination dataset path.
        in: query
        name: sdpath_to
        required: true
        schema:
          type: string
      - description: Lock source and destination while copying.
        in: query
        name: lock
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Copy operation succeeded.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
        '409':
          description: Conflict.
        '423':
          description: 'Locked. The error message contains the Reason in the form
            <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code
            are: <ul>

            <li>WL (Write Locked)</li>

            <li>RL (Read Locked)</li>

            <li>CL (Cannot be Locked)</li>

            <li>UL (Cannot be Unlocked)</ul>\nFor example the reason code <b>[RCODE:RL3600]</b>
            indicates the dataset is Read Locked with a TTL of 3600 seconds.

            '
      summary: Copy dataset.
      tags:
      - Utility
  /utility/download-connection-string:
    get:
      description: '<ul> <li>Generate the download connection credential string for
        a subproject collection or a dataset, depending of the applied access policy
        (uniform/dataset). <li>These credentials can be used via CSP SDK, on client
        side, to perform bulk download.</li> <li> The endpoint response is CSP (Cloud
        Solution Provider) dependent: <ul> <br/><li><b>Azure</b>: shared access signature
        (SaS) Url token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`''
        <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type:
        ''SasUrl'' <br/>} <br/><br/></li> <li><b>Google</b>: standard access token
        credential signed and down-scoped by google <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''google_signed_access_token'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        3600 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> <li><b>AWS</b>: double column separated string containing
        access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> <li><b>IBM</b>: double column separated string containing
        access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        7200 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> </ul> </li> <li>Required roles: <ul> <li>subproject.admin,
        subproject.viewer: if the applied subproject policy is ''uniform''</li> <li>dataset.admin,
        dataset.viewer: if the applied subproject policy is ''dataset''</li> </ul>
        </li> </ul>'
      operationId: download-connection-string
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Seismic store path in the format sd://tenant/subproject (for
          uniform applied policies) or sd://tenant/subproject/dataset (for dataset
          applied policies)
        in: query
        name: sdpath
        required: true
        schema:
          default: sd://opendes/sandbox
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: The download connection credential string.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Generate the download connection credentials string
      tags:
      - Utility
  /utility/gcs-access-token:
    get:
      description: "<ul>\n  <li>Generate a GCS access token for a specified seismic\
        \ store resource. The source and destination dataset must be in the same sub-project.</li>\n\
        \  <li>Required roles:\n    <ul>\n      <li>subproject.admin, subproject.viewer:\
        \ if the applied subproject policy is 'uniform'</li>\n      <li>dataset.admin,\
        \ dataset.viewer: if the applied subproject policy is 'dataset'</li>\n   \
        \ </ul>\n  </li>\n</ul>\n"
      operationId: gcs-access-token
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Seismic store path in the format sd://tenant/sub-project.
        in: query
        name: sdpath
        required: true
        schema:
          default: sd://common/carbon
          type: string
      - description: Readonly access, true(default) or false.
        in: query
        name: readonly
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: The GCS access token.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Generate a GCS access token.
      tags:
      - Utility
  /utility/ls:
    get:
      description: '<ul>

        <li>Return the list of datasets and sub-directories of a seismic store path.</li>

        <li>Required roles: subproject.admin, subproject.viewer</li></ul>

        '
      operationId: ls
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Seismic store path, sd://tenant/sub-project/path.
        in: query
        name: sdpath
        required: true
        schema:
          type: string
      - description: Working mode, directories or datasets or undefined for both.
        in: query
        name: wmode
        required: false
        schema:
          type: string
      - description: Limits the total number of datasets to return.
        in: query
        name: limit
        required: false
        schema:
          type: number
      - description: Pagination token - this query parameter can be omitted on first
          call.
        in: query
        name: cursor
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LsDatasets'
          description: Seismic store path content.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LsPaginatedDatasets'
          description: Paginated seismic store path content - For documentation purposes,
            if limit or cursor is given, status code here is 200.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the list of datasets and sub-directories inside a seismic
        store path.
      tags:
      - Utility
  /utility/storage-tiers:
    get:
      description: <ul><li>Return the list of storage tiers</ul>
      operationId: storage-tiers
      responses:
        '200':
          description: Supported storage tiers
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Retrieve the list of supported storage tiers
      tags:
      - Utility
  /utility/upload-connection-string:
    get:
      description: '<ul> <li>Generate the upload connection credential string for
        a subproject collection or a dataset, depending of the applied access policy
        (uniform/dataset). <li>These credentials can be used via CSP SDK, on client
        side, to perform bulk upload.</li> <li> The endpoint response is CSP (Cloud
        Solution Provider) dependent: <ul> <br/><li><b>Azure</b>: shared access signature
        (SaS) Url token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`''
        <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type:
        ''SasUrl'' <br/>} <br/><br/></li> <li><b>Google</b>: standard access token
        credential signed and down-scoped by google <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''google_signed_access_token'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        3600 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> <li><b>AWS</b>: double column separated string containing
        access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        3599 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> <li><b>IBM</b>: double column separated string containing
        access key id, the access key secret and the session token <br/> <br/>{ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token:
        ''accessKeyId:secretAccessKey:sessionToken'' <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in:
        7200 <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: ''Bearer'' <br/>}
        <br/><br/></li> </ul> </li> <li>Required roles: <ul> <li>subproject.admin:
        if the applied subproject policy is ''uniform''</li> <li>dataset.admin: if
        the applied subproject policy is ''dataset''</li> </ul> </li> </ul>'
      operationId: upload-connection-string
      parameters:
      - description: The impersonation token context (required only with impersonation
          token credentials)
        in: header
        name: impersonation-token-context
        required: false
        schema:
          default: ''
          type: string
      - description: Seismic store path in the format sd://tenant/subproject (for
          uniform applied policies) or sd://tenant/subproject/dataset (for dataset
          applied policies)
        in: query
        name: sdpath
        required: true
        schema:
          default: sd://opendes/sandbox
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: The upload connection credential string.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
      summary: Generate the upload connection credentials string
      tags:
      - Utility
security:
- bearer: []
servers:
- url: '#{SDMS_PREFIX}#'
