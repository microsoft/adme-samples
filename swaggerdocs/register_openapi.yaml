components:
  schemas:
    Action:
      properties:
        contactEmail:
          type: string
        createdOnEpoch:
          format: date-time
          type: string
        description:
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
        id:
          type: string
        img:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    ChallengeResponse:
      properties:
        responseHash:
          type: string
      type: object
    ConnectedOuterService:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    CreateActionDto:
      properties:
        contactEmail:
          type: string
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        filter:
          $ref: '#/components/schemas/Filter'
        id:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        img:
          type: string
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
        url:
          type: string
      required:
      - name
      type: object
    Ddms:
      properties:
        contactEmail:
          type: string
        createdDateTimeEpoch:
          format: date-time
          type: string
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        id:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/RegisteredInterface'
          type: array
          uniqueItems: true
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
      required:
      - id
      - name
      type: object
    Filter:
      properties:
        entityType:
          items:
            type: string
          type: array
        source:
          items:
            type: string
          type: array
        version:
          items:
            type: string
          type: array
      type: object
    GsaSecret:
      allOf:
      - $ref: '#/components/schemas/Secret'
      - properties:
          value:
            $ref: '#/components/schemas/GsaSecretValue'
        type: object
      type: object
    GsaSecretValue:
      properties:
        audience:
          type: string
        key:
          type: string
      type: object
    HmacSecret:
      allOf:
      - $ref: '#/components/schemas/Secret'
      - properties:
          value:
            type: string
        type: object
      type: object
    JsonNode:
      type: object
    ParsedAction:
      properties:
        errors:
          type: string
        url:
          type: string
      type: object
    RegisteredInterface:
      properties:
        entityType:
          pattern: ^[A-Za-z0-9 ]{2,50}
          type: string
        schema:
          additionalProperties:
            type: object
          type: object
      required:
      - entityType
      - schema
      type: object
    Secret:
      discriminator:
        propertyName: secretType
      properties:
        secretType:
          type: string
      required:
      - secretType
      type: object
    Subscription:
      properties:
        createdBy:
          type: string
        description:
          pattern: ^[A-Za-z0-9. ]{0,255}
          type: string
        id:
          type: string
        name:
          pattern: ^[A-Za-z0-9- ]{2,50}
          type: string
        notificationId:
          type: string
        pushEndpoint:
          type: string
        secret:
          oneOf:
          - $ref: '#/components/schemas/GsaSecret'
          - $ref: '#/components/schemas/HmacSecret'
        topic:
          type: string
      required:
      - name
      - pushEndpoint
      - topic
      type: object
    SubscriptionInfo:
      properties:
        createdBy:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        notificationId:
          type: string
        pushEndpoint:
          type: string
        topic:
          type: string
      type: object
    TestActionRequest:
      properties:
        action:
          $ref: '#/components/schemas/CreateActionDto'
        testPayload:
          $ref: '#/components/schemas/JsonNode'
      required:
      - testPayload
      type: object
    Topic:
      properties:
        description:
          type: string
        example:
          type: object
        name:
          type: string
        state:
          type: string
      type: object
    VersionInfo:
      properties:
        artifactId:
          type: string
        branch:
          type: string
        buildTime:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
          type: array
        groupId:
          type: string
        version:
          type: string
      type: object
  securitySchemes:
    Authorization:
      bearerFormat: Authorization
      scheme: bearer
      type: http
info:
  description: API Documetation
  title: Register Service
  version: '1.0'
openapi: 3.0.1
paths:
  /action:
    post:
      operationId: createAction
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionDto'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Action'
          description: OK
      tags:
      - action-api
  /action/{id}:
    delete:
      operationId: deleteAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - action-api
    get:
      operationId: getAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Action'
          description: OK
      tags:
      - action-api
  /action:retrieve:
    post:
      operationId: retrieveAction
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Action'
                type: array
          description: OK
      tags:
      - action-api
  /action:test:
    post:
      operationId: testAction
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestActionRequest'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ParsedAction'
          description: OK
      tags:
      - action-api
  /ah/liveness_check:
    get:
      operationId: livenessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - health-checks-api
  /ah/readiness_check:
    get:
      operationId: readinessCheck
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - health-checks-api
  /ddms:
    get:
      operationId: queryDMS
      parameters:
      - in: query
        name: type
        required: true
        schema:
          pattern: ^[A-Za-z0-9]{1,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Ddms'
                type: array
          description: OK
      tags:
      - ddms-api
    post:
      operationId: postDMS
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ddms'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ddms'
          description: OK
      tags:
      - ddms-api
  /ddms/{id}:
    delete:
      operationId: deleteDMS
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - ddms-api
    get:
      operationId: getDMS
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ddms'
          description: OK
      tags:
      - ddms-api
  /ddms/{id}/{type}/{localid}:
    get:
      operationId: redirectToDms
      parameters:
      - in: path
        name: id
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - in: path
        name: type
        required: true
        schema:
          pattern: ^[A-Za-z]{2,50}
          type: string
      - in: path
        name: localid
        required: true
        schema:
          pattern: ^[A-Za-z0-9-]{2,50}
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - ddms-api
  /info:
    get:
      operationId: info
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: OK
      tags:
      - info-api
  /subscription:
    get:
      operationId: querySubscription
      parameters:
      - in: query
        name: notificationId
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: OK
      tags:
      - subscriber-api
    post:
      operationId: createSubscription
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
          description: OK
      tags:
      - subscriber-api
  /subscription/{id}:
    delete:
      operationId: deleteSubscription
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - subscriber-api
    get:
      operationId: getSubscription
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
          description: OK
      tags:
      - subscriber-api
  /subscription/{id}/secret:
    put:
      operationId: updateSecret
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/GsaSecret'
              - $ref: '#/components/schemas/HmacSecret'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - subscriber-api
  /test/challenge/{count}:
    get:
      operationId: testCrc
      parameters:
      - in: query
        name: crc
        required: true
        schema:
          type: string
      - in: query
        name: hmac
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
          description: OK
      tags:
      - subscriber-listener-api
    post:
      operationId: testPushHmac
      parameters:
      - in: query
        name: hmac
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
      tags:
      - subscriber-listener-api
  /test/gsa-challenge/{count}:
    get:
      operationId: testGsa
      parameters:
      - in: query
        name: crc
        required: true
        schema:
          type: string
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChallengeResponse'
          description: OK
      tags:
      - gsa-subscriber-listener-api
    post:
      operationId: testPushGsa
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
      tags:
      - gsa-subscriber-listener-api
  /topics:
    get:
      operationId: listMessages
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Topic'
                type: array
          description: OK
      tags:
      - subscriber-api
  /whoami:
    delete:
      operationId: whoami_5
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    get:
      operationId: whoami
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    head:
      operationId: whoami_1
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    options:
      operationId: whoami_6
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    patch:
      operationId: whoami_4
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    post:
      operationId: whoami_2
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
    put:
      operationId: whoami_3
      parameters:
      - description: Tenant Id
        in: header
        name: data-partition-id
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - whoami-controller
security:
- Authorization: []
servers:
- url: /api/register/v1
